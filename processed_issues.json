[
    {
        "id": 2511356582,
        "number": 52826,
        "title": "Avoid repeated dup of as_json options",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-07T00:58:10Z",
        "updated_at": "2024-09-22T02:32:27Z",
        "closed_at": "2024-09-09T23:59:47Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Previously for every element in an Array and every value in a Hash we would duplicate the options hash passed in. This PR avoids the duplication.\r\n\r\nI did this very conservatively, duping and freezing the Hash when it is not already frozen so that any cases mutating the Hash should be caught. I don't feel very strongly about this and we could remove this in the future.\r\n\r\nThis should improve `to_json` performance when options are passed in (passing options is generally slower but sometimes unavoidable).\r\n\r\nhttps://gist.github.com/jhawthorn/ca9e2eb38a2a982d7e30f9ab315f89a5\r\n\r\n\r\n**Before**\r\n\r\n```\r\n❯ ruby benchmark_as_json.rb\r\nruby 3.3.2 (2024-05-30 revision e5a195edf6) [arm64-darwin23]\r\nCalculating -------------------------------------\r\nobj.to_json(foo: :bar)\r\n                         35.401k (± 0.7%) i/s -    177.700k in   5.019858s\r\nobj.as_json(foo: :bar)\r\n                         60.774k (± 0.5%) i/s -    304.250k in   5.006362s\r\n```\r\n\r\n**After**\r\n\r\n```\r\n❯ ruby benchmark_as_json.rb\r\nruby 3.3.2 (2024-05-30 revision e5a195edf6) [arm64-darwin23]\r\nCalculating -------------------------------------\r\nobj.to_json(foo: :bar)\r\n                         61.766k (± 0.7%) i/s -    310.250k in   5.023192s\r\nobj.as_json(foo: :bar)\r\n                        226.693k (± 0.8%) i/s -      1.138M in   5.018156s\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52826/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 131752,
        "closed_by_id": 131752,
        "label_ids": [
            107190,
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52826.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52826.patch",
        "pull_request_merged_at": "2024-09-09T23:59:46Z"
    },
    {
        "id": 2540584998,
        "number": 53009,
        "title": "ActiveRecord encryption WHERE NOT bug",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-22T01:07:19Z",
        "updated_at": "2024-09-22T01:18:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "body": "@jayqui's example of a test that shows the `where.not` bug with ActiveRecord encryption. Currently simply seeking perusal from Omada colleagues as I work toward a reproducible test case I can put into a formal GitHub issue on the Rails repo.\r\n\r\nEventually this PR, or a successor, could hopefully contain a fix for the bug as well.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53009/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 10286362,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/53009.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/53009.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2056785433,
        "number": 50451,
        "title": "Add a built-in benchmark tool",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 7,
        "created_at": "2023-12-27T00:17:01Z",
        "updated_at": "2024-09-22T00:57:46Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "We should have a simple, built-in benchmark mechanism for people to evaluate different computing platforms. Whether they be cloud VMs, Raspberry Pis, or 96-core state-of-the-art owned server hardware. Think Geekbench or Speedometer. Run a big test suite, on a single machine, produce one comparable number. \"Oh, that new box we got? It does 3,456 on the Rails Speedrun!!\".\r\n\r\nEasily comparable numbers make for better comparisons make for better buying decisions.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50451/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "label_ids": [],
        "reactions_total_count": 88,
        "reactions_plus1": 51,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 25,
        "reactions_rocket": 8,
        "reactions_eyes": 4
    },
    {
        "id": 2059121963,
        "number": 50477,
        "title": "Active Storage can be configured by STORAGE_URL",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-12-29T06:36:26Z",
        "updated_at": "2024-09-22T00:54:22Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #50448\r\n\r\nThe following cases are currently supported:\r\n\r\n```\r\ndisk://my/root/path\r\ns3://access_key_id:secret_access_key@us-east-1/your-bucket\r\ngcs://path/to/gcs.keyfile@your_project/your-bucket\r\n```\r\n\r\nBased roughly on ActiveRecord::DatabaseConfigurations and how it deals with URLs from environment variables.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50477/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "label_ids": [
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50477.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50477.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2540443213,
        "number": 53008,
        "title": "HashWithIndifferentAccess#deep_stringify_keys vs non-string keys",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-21T18:02:14Z",
        "updated_at": "2024-09-21T23:17:28Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\nh = {a: {1 => true}}\r\nhi = h.with_indifferent_access\r\n\r\nh.deep_stringify_keys  #=> {\"a\"=>{\"1\"=>true}} -- all keys strings\r\nhi.deep_stringify_keys #=> {\"a\"=>{1=>true}}   -- integer keys remains integer\r\n```\r\n\r\n### Expected behavior\r\n\r\nI am not sure it should be considered a “bug” per se, but it seems to be an inconsistency (which, on one not-so-modern codebase, cost me some half an hour of debugging). I would rather expect that aggressive stringification that `deep_stringify_keys` perform will be retained for HWIA, but it is not so, its `deep_stringify_keys`/`deep_stringify_keys!` are defined as [no-ops](https://github.com/rails/rails/blob/main/activesupport/lib/active_support/hash_with_indifferent_access.rb#L319).\r\n\r\nHWIA is quite widespread, and it is easy to convert arbitrary deep data hashes into it. .\r\n\r\n### Actual behavior\r\n\r\nInteger keys remain integer. \r\n\r\nIn our particular use case, it was a hash returned by `Dirty#previous_changes`, and the code tried to send it as ActiveJob argument, and got an error on integer keys, which remained integer even after `deep_stringify_keys`.\r\n\r\n### System configuration\r\n**Rails version**: checked with latest ActiveSupport (7.2.1)\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53008/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 129656,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2540216810,
        "number": 53005,
        "title": "[ci-skip][docs] Fix version of the migration in the guide to the current Rails version",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-21T12:08:30Z",
        "updated_at": "2024-09-21T23:14:18Z",
        "closed_at": "2024-09-21T20:56:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis pull request was created because I noticed an older migration version in the guide.\r\n\r\n### Detail\r\n\r\n\r\nThis pull request is to Fix the migration version to the current version.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53005/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1322208,
        "closed_by_id": 12642,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/53005.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/53005.patch",
        "pull_request_merged_at": "2024-09-21T20:56:31Z"
    },
    {
        "id": 2540400772,
        "number": 53007,
        "title": "Should raise Argument error for belongs_to association on ignored column",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-21T16:33:13Z",
        "updated_at": "2024-09-21T22:58:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\nThe main motivation for this pull request is maintain a similar constraints for the belongs_to association if the foreign key is enlisted in the `.ignored_columns`.\r\n\r\nReference: [issues/52645](https://github.com/rails/rails/issues/52645)\r\n\r\n### Detail\r\n\r\nThis Pull Request changes\r\n\r\nThis Pull Request  raise Argument error if someone defines a belongs_to that relies on the ignored column.\r\n\r\n```ruby\r\nif self.ignored_columns.include?(reflection.foreign_key.to_s)\r\n  raise ArgumentError, \"You tried to define a belongs_to association for #{name}, but the column #{reflection.foreign_key} is ignored. You can remove it from the ignored_columns list if you want to use it.\"\r\nend\r\n```\r\n          \r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix 52645](https://github.com/rails/rails/issues/52645)`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53007/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 417169,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/53007.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/53007.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2540286631,
        "number": 53006,
        "title": "Fix Dockerfile generation for Ruby preview versions",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-21T14:02:21Z",
        "updated_at": "2024-09-21T19:09:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "fix #52998 \r\n\r\nThis commit ensures that Ruby preview versions are correctly formatted in the Dockerfile generator by replacing the period before 'preview' with a dash. Ruby preview versions like `3.4.0.preview1` would previously cause issues in Docker image generation, as Docker expects the format `3.4.0-preview1`.\r\n\r\nTo resolve this:\r\n\r\n- Used `sub` instead of `sub!` to avoid modifying a frozen string\r\n- Ensured the final version string is frozen for immutability\r\n- Handled preview versions conditionally and returned the modified version only when necessary\r\n\r\nExample of the `gem_ruby_version` method:\r\n\r\n    def gem_ruby_version\r\n       version = Gem::Version.new(Gem::VERSION) >= Gem::Version.new(\"3.3.13\") ? Gem.ruby_version.to_s : RUBY_VERSION\r\n\r\n       version.include?(\"preview\") ? version.sub(\".preview\", \"-preview\").freeze : version\r\n    end\r\n\r\nThis change prevents errors when generating Docker images using preview Ruby versions and follows best practices for immutability.\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53006/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 108363864,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/53006.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/53006.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2539995965,
        "number": 53003,
        "title": "Make `kamal dbc` work with any database",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-21T06:00:35Z",
        "updated_at": "2024-09-21T18:46:04Z",
        "closed_at": "2024-09-21T16:40:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThe `kamal dbc` alias currently only works with sqlite3.\r\n\r\n`sqlite3 storage/production.sqlite3` is virtually equivalent to doing `bin/rails dbconsole`: both have the same output. But `bin/rails dbconsole` is more generic.\r\n\r\n### Detail\r\n\r\nChange the alias to use `bin/rails dbconsole`, which works for any generic database, including [dockerized sqlite3 environments](https://github.com/rails/rails/pull/52589).\r\n\r\n### Additional information\r\n\r\nFeel free to close this PR if `kamal dbc` was intended as an example to showcase calling non-Rails commands.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53003/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 236461,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/53003.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/53003.patch",
        "pull_request_merged_at": "2024-09-21T16:40:17Z"
    },
    {
        "id": 2532435998,
        "number": 52961,
        "title": "Include controller path into cache keys for rate limiters",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-18T00:30:33Z",
        "updated_at": "2024-09-21T16:41:31Z",
        "closed_at": "2024-09-21T16:41:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Follow up to #52960, cc @dhh.\r\n\r\nAfter (sorry) merging #52960, I realized that for people using multiple rate limiters in several controllers it is very easy to end up with non unique cache key names. So if someone uses `name: \"long-term\"` rate limiter in `FooController` and `name: \"long-term\"` in `BarController`, they both will share the same key. \r\n\r\nPeople must need to remember to use globally unique rate limiter names for this to work. Better to avoid that.\r\n\r\n  ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52961/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 2741,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52961.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52961.patch",
        "pull_request_merged_at": "2024-09-21T16:41:31Z"
    },
    {
        "id": 2472826219,
        "number": 52645,
        "title": "Association backed by ignored column can be accessed without error.",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-08-19T08:54:53Z",
        "updated_at": "2024-09-21T16:35:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  gem 'rails'\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem 'sqlite3', '~> 1.4'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n\r\n  self.ignored_columns = %w[post_id]\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    comment = Comment.create!\r\n    ActiveRecord::Base.connection.execute(\"UPDATE comments SET post_id = #{post.id} WHERE id = #{comment.id}\")\r\n\r\n    # This works\r\n    puts comment.post\r\n    post.comments = []\r\n    puts 'The comments', post.comments\r\n\r\n    # All of these do not work\r\n    puts comment.post_id\r\n    comment.post = post\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe `post` association should not be accessible, because the underlying column is ignored (and not accessible). Same for the inverse `has_many` relationship, which also allows writes! Only writing the `post` association actually throws an error as expected.\r\n\r\nThis is especially important because the method should guarantee the following (per API Doc):\r\n> Using this two step approach to dropping columns ensures there is no code that raises errors due to having a cached schema in memory at the time the schema migration is run.\r\n\r\nIn our case, the association was actually still used, which threw errors because it was not detected.\r\n\r\n### Actual behavior\r\nAll of these access the underlying ignored column, even though they should not:\r\n- `comment.post`\r\n- `post.comments`\r\n- `post.comments=`\r\n\r\n### System configuration\r\n**Rails version**: 6.0+\r\n**Ruby version**: All\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52645/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 63241108,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2355724770,
        "number": 52135,
        "title": "Incorrect `has_many through` load with custom association name and custom keys type",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-16T12:15:17Z",
        "updated_at": "2024-09-21T12:53:47Z",
        "closed_at": "2024-09-21T12:53:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "There is a problem with loading `has_many through` association, when the intermediate association is called differently than the name of the table and keys' type is overridden (through `attribute`). \r\n\r\nInitially, my problem was something similar to [this bug](https://github.com/nedap/mysql-binuuid-rails/issues/61) in the gem I am using. My investigation led me to [this line](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/relation/predicate_builder.rb#L87), where `where` condition for `through` query tries to find `table_metadata` of associated table (which name is taken somewhere [here](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/associations/association_scope.rb#L62)), but it is trying to find it in the **reflections** using **table name** [here](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/table_metadata.rb#L39). \r\n\r\nSo, if I understand correctly:\r\n* we are building conditions from reflection using **table name**\r\n* then we are trying to find table metadata for associated table by this **table name**\r\n* but we are doing this using the reflections and trying to find **reflection** using this **table name**, not the reflection name\r\n* and when the association_name (= reflection_name) is not equal to the table name, the reflection is not found and table_metadata then does not know anything about klass (created with `nil` [here](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/table_metadata.rb#L58))\r\n* that's why it doesn't know about type customization when determining type somewhere [here](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/relation/predicate_builder.rb#L68) and just uses the default type from schema\r\n\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"rails\", \"~> 7.1.0\"\r\n  gem \"sqlite3\", \"~> 1.4\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :books, force: true do |t|\r\n    t.string :nick, null: false\r\n\r\n    t.index :nick, unique: true\r\n  end\r\n\r\n  create_table :books_subscriptions, force: true do |t|\r\n    t.string :subscriber_nick\r\n    t.string :book_nick\r\n  end\r\n\r\n  create_table :subscribers, force: true do |t|\r\n    t.string :nick, null: false\r\n\r\n    t.index :nick, unique: true\r\n  end\r\nend\r\n\r\nclass NickType < ActiveRecord::Type::String\r\n  def serialize(value)\r\n    super(\"nickname-#{value}\")\r\n  end\r\n\r\n  def deserialize(value)\r\n    super(value).to_s.delete_prefix(\"nickname-\")\r\n  end\r\n\r\n  def cast_value(value)\r\n    value.to_s\r\n  end\r\nend\r\n\r\nclass TestGeneralTypeWithCustomAssocationName < Minitest::Test\r\n  class Book < ActiveRecord::Base\r\n    self.table_name = 'books'\r\n\r\n    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick\r\n    has_many :subscribers, through: :subscriptions\r\n  end\r\n\r\n  class BooksSubscription < ActiveRecord::Base\r\n    self.table_name = 'books_subscriptions'\r\n\r\n    belongs_to :subscriber, foreign_key: :subscriber_nick, primary_key: :nick\r\n    belongs_to :book, foreign_key: :book_nick, primary_key: :nick\r\n  end\r\n\r\n  class Subscriber < ActiveRecord::Base\r\n    self.table_name = 'subscribers'\r\n\r\n    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick\r\n    has_many :books, through: :subscriptions\r\n  end\r\n\r\n  def setup\r\n    @book = Book.create! nick: 'book-one'\r\n    @subscriber = Subscriber.create! nick: 'subscriber-one'\r\n\r\n    BooksSubscription.create! subscriber: @subscriber, book: @book\r\n  end\r\n\r\n  def teardown\r\n    Book.delete_all\r\n    Subscriber.delete_all\r\n    BooksSubscription.delete_all\r\n  end\r\n\r\n  def test_load_through\r\n    assert_equal [@book], @subscriber.reload.books.to_a\r\n  end\r\nend\r\n\r\nclass TestCustomTypeWithUsualAssocationName < Minitest::Test\r\n  class Book < ActiveRecord::Base\r\n    self.table_name = 'books'\r\n    attribute :nick, NickType.new\r\n\r\n    has_many :books_subscriptions, foreign_key: :subscriber_nick, primary_key: :nick\r\n    has_many :subscribers, through: :subscriptions\r\n  end\r\n\r\n  class BooksSubscription < ActiveRecord::Base\r\n    self.table_name = 'books_subscriptions'\r\n    attribute :subscriber_nick, NickType.new\r\n    attribute :book_nick, NickType.new\r\n\r\n    belongs_to :subscriber, foreign_key: :subscriber_nick, primary_key: :nick\r\n    belongs_to :book, foreign_key: :book_nick, primary_key: :nick\r\n  end\r\n\r\n  class Subscriber < ActiveRecord::Base\r\n    self.table_name = 'subscribers'\r\n    attribute :nick, NickType.new\r\n\r\n    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick\r\n    has_many :books, through: :subscriptions\r\n  end\r\n\r\n\r\n  def setup\r\n    @book = Book.create! nick: 'book-one'\r\n    @subscriber = Subscriber.create! nick: 'subscriber-one'\r\n\r\n    BooksSubscription.create! subscriber: @subscriber, book: @book\r\n  end\r\n\r\n  def teardown\r\n    Book.delete_all\r\n    Subscriber.delete_all\r\n    BooksSubscription.delete_all\r\n  end\r\n\r\n  def test_load_through\r\n    assert_equal [@book], @subscriber.reload.books.to_a\r\n  end\r\nend\r\n\r\nclass TestCustomTypeWithCustomAssocationName < Minitest::Test\r\n  class Book < ActiveRecord::Base\r\n    self.table_name = 'books'\r\n    attribute :nick, NickType.new\r\n\r\n    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick\r\n    has_many :subscribers, through: :subscriptions\r\n  end\r\n\r\n  class BooksSubscription < ActiveRecord::Base\r\n    self.table_name = 'books_subscriptions'\r\n    attribute :subscriber_nick, NickType.new\r\n    attribute :book_nick, NickType.new\r\n\r\n    belongs_to :subscriber, foreign_key: :subscriber_nick, primary_key: :nick\r\n    belongs_to :book, foreign_key: :book_nick, primary_key: :nick\r\n  end\r\n\r\n  class Subscriber < ActiveRecord::Base\r\n    self.table_name = 'subscribers'\r\n    attribute :nick, NickType.new\r\n\r\n    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick\r\n    has_many :books, through: :subscriptions\r\n  end\r\n\r\n\r\n  def setup\r\n    @book = Book.create! nick: 'book-one'\r\n    @subscriber = Subscriber.create! nick: 'subscriber-one'\r\n\r\n    BooksSubscription.create! subscriber: @subscriber, book: @book\r\n  end\r\n\r\n  def teardown\r\n    Book.delete_all\r\n    Subscriber.delete_all\r\n    BooksSubscription.delete_all\r\n  end\r\n\r\n  def test_load_through\r\n    assert_equal [@book], @subscriber.reload.books.to_a\r\n  end\r\nend\r\n\r\n```\r\n\r\nI based this test case on the one of the [existing tests](https://github.com/gmcgibbon/rails/blob/678dd6ab805a2a39d685e066d089614d1845c720/activerecord/test/cases/reflection_test.rb#L520) from the [PR](https://github.com/rails/rails/pull/39254) I've bumped into while discovering this behavior.\r\n\r\n### Expected behavior\r\n\r\nAll three test cases should work: \r\n* `has_many through` loading with custom association name and custom keys with usual type\r\n* `has_many through` loading with usual association name and custom keys with custom type\r\n* `has_many through` loading with custom association name and custom keys with custom type\r\n\r\n### Actual behavior\r\n\r\nThird case is failing \r\n\r\n```\r\nFailure:\r\nTestCustomTypeWithCustomAssocationName#test_load_through [reflection_test.rb:182]:\r\n--- expected\r\n+++ actual\r\n@@ -1 +1 @@\r\n-[#<TestCustomTypeWithCustomAssocationName::Book id: 3, nick: \"book-one\">]\r\n+[]\r\n\r\n```\r\n\r\nFrom the log we can see, that the problem is in the result SQL: \r\n```\r\nD, [2024-06-16T14:04:20.816711 #774145] DEBUG -- :   TestCustomTypeWithCustomAssocationName::Book Load (0.0ms)  SELECT \"books\".* FROM \"books\" INNER JOIN \"books_subscriptions\" ON \"books\".\"nick\" = \"books_subscriptions\".\"book_nick\" WHERE \"books_subscriptions\".\"subscriber_nick\" = ?  [[\"subscriber_nick\", \"subscriber-one\"]]\r\n```\r\n\r\nIt uses not serialized value of the foreign key, like in second test: \r\n```\r\nD, [2024-06-16T14:04:20.810891 #774145] DEBUG -- :   TestCustomTypeWithUsualAssocationName::Book Load (0.0ms)  SELECT \"books\".* FROM \"books\" INNER JOIN \"books_subscriptions\" ON \"books\".\"nick\" = \"books_subscriptions\".\"book_nick\" WHERE \"books_subscriptions\".\"subscriber_nick\" = ?  [[\"subscriber_nick\", \"nickname-subscriber-one\"]]\r\n\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.4\r\n\r\n**Ruby version**: 3.2.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52135/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 699661,
        "closed_by_id": 28418009,
        "label_ids": [
            12449438
        ],
        "reactions_total_count": 5,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 2
    },
    {
        "id": 2499336653,
        "number": 52761,
        "title": "Customize `has_secure_password` password token expiry",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-01T09:24:20Z",
        "updated_at": "2024-09-21T12:52:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Extends #52483\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because I want to be able to customize the password reset token expiry by using the `has_secure_password` method.\r\n### Detail\r\n\r\nCurrently, I need to set `has_secure_password reset_token: false` and write the following which I believe defeats the purpose of https://github.com/rails/rails/pull/52483.\r\n\r\n```ruby\r\nclass User < ApplicationRecord\r\n  has_secure_password reset_token: false\r\n\r\n  generates_token_for :password_reset, expires_in: 30.minutes do\r\n    password_salt&.last(10)\r\n  end\r\nend\r\n```\r\n\r\nThis PR, allows us to customize the password token expiry.\r\n\r\n```rb\r\nclass User < ApplicationRecord\r\n  has_secure_password reset_token: { expires_in: 30.minutes }\r\nend\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52761/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 50948617,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52761.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52761.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2537284968,
        "number": 52981,
        "title": "mention the rate limiter in the security guides [ci-skip]",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-19T20:13:43Z",
        "updated_at": "2024-09-21T11:18:07Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "I just noticed that the rate limiter is not mention in the security guides.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52981/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 752058,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52981.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52981.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2502540676,
        "number": 52782,
        "title": "Make ActionableErrors work with `config.show_exceptions :rescuable`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-03T10:45:49Z",
        "updated_at": "2024-09-21T10:27:44Z",
        "closed_at": "2024-09-21T10:27:44Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "PendingMigrations no longer show the actionable form when setting `action_dispatch.show_exceptions` to `:rescuable`.\r\n\r\nAs all ActionableErrors should probably be rescuable, let the ExceptionWrapper render ActionableErrors as rescueable as well.\r\n\r\n### Before\r\n\r\n<img width=\"574\" alt=\"image\" src=\"https://github.com/user-attachments/assets/442ccd8a-373a-4ca3-92a9-93dc0999cff6\">\r\n\r\n### After\r\n\r\n<img width=\"559\" alt=\"image\" src=\"https://github.com/user-attachments/assets/58c79702-70a6-4568-a17e-c4d9120a3935\">\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52782/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 28561,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52782.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52782.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2502578586,
        "number": 52783,
        "title": "Make ActionView::Template::Error work with `config.show_exceptions :rescuable`",
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jhawthorn",
            "id": 131752,
            "followers_url": "https://api.github.com/users/jhawthorn/followers",
            "following_url": "https://api.github.com/users/jhawthorn/following{/other_user}",
            "starred_url": "https://api.github.com/users/jhawthorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhawthorn/subscriptions",
            "organizations_url": "https://api.github.com/users/jhawthorn/orgs",
            "repos_url": "https://api.github.com/users/jhawthorn/repos",
            "received_events_url": "https://api.github.com/users/jhawthorn/received_events",
            "type": "User",
            "site_admin": true
        },
        "assignees": [
            {
                "login": "jhawthorn",
                "id": 131752,
                "followers_url": "https://api.github.com/users/jhawthorn/followers",
                "following_url": "https://api.github.com/users/jhawthorn/following{/other_user}",
                "starred_url": "https://api.github.com/users/jhawthorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jhawthorn/subscriptions",
                "organizations_url": "https://api.github.com/users/jhawthorn/orgs",
                "repos_url": "https://api.github.com/users/jhawthorn/repos",
                "received_events_url": "https://api.github.com/users/jhawthorn/received_events",
                "type": "User",
                "site_admin": true
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-03T11:02:46Z",
        "updated_at": "2024-09-21T10:27:18Z",
        "closed_at": "2024-09-21T10:27:18Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "ActionView::Template::Errors no longer show the correct rescue response page when `action_dispatch.show_exceptions` is set to `:rescuable`.\r\n\r\nBy adding it to the rescue_responses it should render the correct error page.\r\n\r\n### Before\r\n\r\n<img width=\"746\" alt=\"image\" src=\"https://github.com/user-attachments/assets/5d4950b2-8cc1-4902-992c-214da7822a6b\">\r\n\r\n### After\r\n\r\n<img width=\"1011\" alt=\"image\" src=\"https://github.com/user-attachments/assets/1f0d1064-7fea-42bd-b873-d12825a4e1c5\">\r\n\r\n\r\n### Detail\r\n\r\nI'm not seeing test cases for each entry in rescue_responses, so I didn't add a new test case.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52783/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 28561,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52783.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52783.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2540028282,
        "number": 53004,
        "title": "fix #52998: Handle `.preview` suffix in gem_ruby_version method",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-21T06:55:15Z",
        "updated_at": "2024-09-21T07:17:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nfix #52998\r\n\r\n### Detail\r\n\r\nIf you specify a version when generating a Dockerfile, if the version is postfixed with `.preview`, it will be replaced with `-preview`.\r\n\r\nExample:\r\n`3.4.0.preview1` → `3.4.0-preview`\r\n\r\nThis should fix the bug where the Docker image could not be found.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53004/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 85547207,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/53004.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/53004.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2539591533,
        "number": 52998,
        "title": "Bug in generated Dockerfile when using ruby preview versions",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-20T20:07:13Z",
        "updated_at": "2024-09-21T06:24:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n* Set your ruby version to any preview version (e.g. \"3.4.0-preview1\")\r\n* Do \"rails new\" with defaults\r\n* Ensure this generated a Dockerfile\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\n.ruby-version is showing `ruby-3.4.0` and:\r\n```\r\n$ ruby --version\r\nruby 3.4.0preview1 (2024-05-16 master 9d69619623) [arm64-darwin23]\r\n```\r\nAnd this line of the Dockerfile is generated as:\r\n```\r\nARG RUBY_VERSION=3.4.0.preview1\r\nFROM docker.io/library/ruby:$RUBY_VERSION-slim AS base\r\n```\r\nSo when you run a build you'll see it fail because it's trying to find the image with a period before the word `preview`\r\n```\r\ndocker.io/library/ruby:3.4.0.preview1-slim\r\n```\r\nThis image does not exist. Instead, RUBY_VERSION should have a dash before the period so that it resolves to this docker image:\r\n```\r\ndocker.io/library/ruby:3.4.0-preview1-slim\r\n```\r\nI manually edited the file to fix but it's worth fixing the generator.\r\n\r\n### System configuration\r\n**Rails version**: 3.4.0-preview1\r\n\r\n**Ruby version**: Rails 7.2.1\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52998/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 35061,
        "label_ids": [],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2538484048,
        "number": 52986,
        "title": "Fresh Rails project contains rubocop linter violation",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T10:40:17Z",
        "updated_at": "2024-09-21T03:07:06Z",
        "closed_at": "2024-09-20T18:49:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n1. Generate a new Rails project from master with `rails new testproject --master`\r\n2. Run `rubocop`\r\n\r\n### Expected behavior\r\nRunning Rubocop linter on a new project should not generate any issues\r\n\r\n### Actual behavior\r\nLine 105 of config/environments/production.rb generates an issue by violating the Layout/SpaceInsideArrayLiteralBracket rule\r\n\r\n### System configuration\r\n**Rails version**: master branch, commit [9716991](https://github.com/rails/rails/commit/97169912f197eee6e76fafb091113bddf624aa67)\r\n\r\n**Ruby version**: 3.3.5\r\n\r\n### Notes\r\nI see four options:\r\n- Un-comment the custom rule from the generated .rubocop.yml that would not make this fail\r\n- Exclude config/environments/production.rb from rubocop linting (of this rule)\r\n- Disable the rule for the line in /config/environments/production.rb\r\n- Use spaces to conform to the rule",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52986/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 919278,
        "closed_by_id": 47848,
        "label_ids": [
            41328116
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2539844188,
        "number": 53002,
        "title": "Remove hash allocation in Store#namespace_key",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-21T00:25:39Z",
        "updated_at": "2024-09-21T01:47:15Z",
        "closed_at": "2024-09-21T00:47:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nPreviously, every call to `namespace_key` would merge the options given with the Store's default options. This unnecessarily allocates a new hash when all `namespace_key` needs is the `namespace` option.\r\n\r\n### Detail\r\n\r\nThis commit removes the allocation by simply checking the default options after checking that the passed options do not contain a `namespace` key.\r\n\r\n### Additional information\r\n\r\nNot huge, but I saw this in a production profile so it seemed worth improving.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53002/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6014046,
        "closed_by_id": 47848,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/53002.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/53002.patch",
        "pull_request_merged_at": "2024-09-21T00:47:05Z"
    },
    {
        "id": 2539774173,
        "number": 53001,
        "title": "Remove deprecated code",
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "rafaelfranca",
            "id": 47848,
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-09-20T22:30:41Z",
        "updated_at": "2024-09-20T22:30:41Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Putting an issue so I don't forget to do before the final 8.0 release. I'll not accept contributions to solve this issue.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53001/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2539624242,
        "number": 52999,
        "title": "Cleanup default environment files",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T20:28:08Z",
        "updated_at": "2024-09-20T22:27:00Z",
        "closed_at": "2024-09-20T22:26:58Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Be succinct. Don't expose rare concerns.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52999/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52999.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52999.patch",
        "pull_request_merged_at": "2024-09-20T22:26:58Z"
    },
    {
        "id": 2539670630,
        "number": 53000,
        "title": "Stop ignoring old `.env.erb` files from Kamal 1",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T20:59:03Z",
        "updated_at": "2024-09-20T22:12:18Z",
        "closed_at": "2024-09-20T22:11:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because Kamal 1 `.env.erb` files are mentioned in ignore files for new Rails apps, but these files are not generated any more, because new Rails 8 apps are now using Kamal 2. So it seems that mentioning `.env.erb` is not needed any more.\r\n\r\n### Detail\r\n\r\nThis Pull Request removes `.env.erb` exceptions from `gitignore` and `dockerignore` templates.\r\nThere is no need to replace the exceptions with a `.kamal/secrets` exception, because it is meant to be [safe for git](https://github.com/rails/rails/blob/592a52b9370df79787d74b1bac9b201891c45054/railties/lib/rails/generators/rails/app/templates/kamal-secrets.tt#L3) by default.\r\n\r\n### Additional information\r\n\r\nI was tempted to remove the whole environment files section (including `/.env*`) from the ignore files since dotenv files seem to be less on the forefront with Kamal 2. But as mentioned by Rafael in https://github.com/rails/rails/pull/49278, it is a common error for people to check in .env files with potentially sensitive tokens. And since `dotenv` is a dependency in new Rails apps (albeit an indirect one via Kamal), if people decide to use it more explicitly one day, keeping the `/.env*` guardrail in the gitignore files could help them.\r\n\r\nEdit: actually after re-reading [this](https://github.com/bkeepers/dotenv?tab=readme-ov-file#should-i-commit-my-env-file) and [this](https://github.com/bkeepers/dotenv?tab=readme-ov-file#customizing-rails), it could be fine to remove the whole section.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/53000/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 236461,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/53000.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/53000.patch",
        "pull_request_merged_at": "2024-09-20T22:11:23Z"
    },
    {
        "id": 2539574027,
        "number": 52997,
        "title": "Add tests for existing AC::Parameters behavior",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T19:54:49Z",
        "updated_at": "2024-09-20T21:52:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nCurrently, values are converted on `ActionController::Parameters#[]`, but not on `[]=`, which can cause unexpected behavior changes before and after reading a value.\r\n\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_accessing_subkey_does_not_break_to_h\r\n    params = ActionController::Parameters.new(name: \"Bruce\").permit(:name)\r\n    params[:guitar] = { make: \"Fender\", model: \"Telecaster\" }\r\n    expected_params_hash = { \"name\" => \"Bruce\", \"guitar\" => { \"make\" => \"Fender\", \"model\" => \"Telecaster\" } }\r\n\r\n    assert_equal(expected_params_hash, params.to_h) # works\r\n    assert_equal(\"Telecaster\", params[:guitar][:model])\r\n    assert_equal(expected_params_hash, params.to_h) # raises ActionController::UnfilteredParameters\r\n  end\r\nend\r\n```\r\n\r\n### Detail\r\n\r\nThis PR starts by adding tests which document the existing behavior.\r\n\r\nThen, `ActionController::Parameters#[]=` is updated to convert the given `value` as needed, and the tests are updated accordingly.\r\n\r\nKeeping the commits separate makes it clear what has changed.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n  _It is unclear if this change warrants a changelog entry._\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52997/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 8219340,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52997.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52997.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2537602360,
        "number": 52984,
        "title": "Avoid passing extraneous options to Renderers like `render json:`",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T00:38:15Z",
        "updated_at": "2024-09-20T21:26:25Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "`.to_json` has a fast path when we pass it no options. Previously `render json:` would pass through a bunch of Action View related options.\r\n\r\nThis aims to avoid that by only adding the additional Action View options when we are rendering a template, which _should_ be faster and more desirable anyways.\r\n\r\nThe second commit additionally skips `:callback`, `:content_type`, and `:status`, which are handled inside Action Controller (I'm less happy with this fix, but think it's a pragmatic improvement).\r\n\r\nI'm not 100% sure nothing external would have depended on these, though I think nothing _should_.\r\n\r\n\r\n```\r\nclass InspectOptions\r\n  def as_json(options = {})\r\n    options\r\n  end\r\nend\r\n\r\nrender json: InspectOptions.new\r\n```\r\n\r\n**Before:** `{\"prefixes\":[\"controller_name\"],\"template\":\"action_name\",\"layout\":{}}`\r\n**After:** `{}`",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52984/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 131752,
        "label_ids": [
            107189,
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52984.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52984.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2539531828,
        "number": 52995,
        "title": "Add bin/install-dev to ease release validation",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-09-20T19:29:05Z",
        "updated_at": "2024-09-20T20:39:30Z",
        "closed_at": "2024-09-20T20:13:35Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Add bin to install all gems locally before a big release to make sure we got it right.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52995/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52995.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52995.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2539252855,
        "number": 52992,
        "title": "Generate the correct bin/test command for railtie CI config",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T17:00:17Z",
        "updated_at": "2024-09-20T20:24:50Z",
        "closed_at": "2024-09-20T18:34:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "When generating a Railtie plugin, the GitHub Actions ci.yml generates `bin/rails test` even though it uses `bin/test` instead. \r\n\r\nThis makes sure that engines use `bin/rails` and railties use `bin/test`",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52992/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 67093,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52992.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52992.patch",
        "pull_request_merged_at": "2024-09-20T18:34:53Z"
    },
    {
        "id": 2532601743,
        "number": 52962,
        "title": "New release process using Trusted Publishing",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-18T03:15:27Z",
        "updated_at": "2024-09-20T20:03:41Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "[Documentation for the Rubygems feature](https://guides.rubygems.org/trusted-publishing/).\r\n[Documentation for the NPM feature](https://docs.npmjs.com/generating-provenance-statements).\r\n\r\nI revamped the Rails release to be able to be automated using Trusted Publishing. The bulk of the changes are in the new `.github/workflows/release.yml` workflow, but I also changed the rake tasks to do different things.\r\n\r\nBefore `rake prep_release` would commit the changes. Now it stops to allow the person releasing to inspect the diff before the commit.\r\n\r\n`rake release` now doesn't push the gems and npm packages and instead create a GitHub Release in draft mode. As soon the GitHub release is published a run for the \"release\" workflow will start and wait a member of the core team to approve.\r\n\r\nThe gem will be released by the GitHub Action workflow.\r\n\r\nOn NPM we get those nice badges.﻿\r\n<img width=\"790\" alt=\"Screenshot 2024-09-17 at 12 45 51 AM\" src=\"https://github.com/user-attachments/assets/0d6d36f4-94f1-41fe-a8f9-fc4d6a41eb85\">\r\n\r\nThe diff is huge because I took the opportunity to rewrite the release tasks and write tests for them so it is harder to break them.\r\n\r\n<details>\r\n<summary>Test in my own fork of Rails</summary>\r\n\r\nHere are the results of my tests:\r\n\r\nhttps://www.npmjs.com/package/omg-actioncable\r\nhttps://www.npmjs.com/package/omg-activestorage\r\nhttps://www.npmjs.com/package/omg-actiontext\r\nhttps://rubygems.org/gems/omg-rails/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-railties/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-actiontext/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-actionmailbox/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-activestorage/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-actionmailer/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-actioncable/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-activejob/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-activerecord/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-actionview/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-activesupport/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-actionpack/versions/8.0.0.alpha3\r\nhttps://rubygems.org/gems/omg-activemodel/versions/8.0.0.alpha3\r\n\r\n</details>",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52962/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47848,
        "label_ids": [
            107188,
            107189,
            107190,
            107191,
            107194,
            107195,
            3666649,
            123812746,
            300028327,
            664533972,
            1174770998,
            1180817762
        ],
        "reactions_total_count": 7,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 4,
        "reactions_rocket": 3,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52962.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52962.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2537336774,
        "number": 52982,
        "title": "Rails console reload! command ",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-19T20:47:55Z",
        "updated_at": "2024-09-20T19:43:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nOpen a rails console. Type and enter:\r\n\r\n```reload!; puts \"hello!\"```\r\n\r\n### Expected behavior\r\n\r\nRails reloads and the `puts` command executes, printing ```hello!```\r\n\r\n### Actual behavior\r\n\r\nYou get an error: ```undefined method `reload!' for main (NoMethodError)```\r\n\r\n### System configuration\r\n\r\nRails 7.2.1+\r\nRuby any\r\n\r\nI recognize this is not specifically a bug. But it *is* a rather annoying change in behavior. This used to work until not to long ago (possibly [this](https://github.com/rails/rails/commit/4c1f7d8328d4680be9792345d49ef750245ce047#diff-5fcfe733b531a5e32b60703ffae946548a9667b314e91b9f4672a50635b2cd90R56) commit).\r\n\r\nIt is useful to iterate and test in the console by reloading and executing something in a single line command. Something like:\r\n\r\n```reload!; Post.find(123).test_a_thing```\r\n\r\nThis makes it easy to quickly switch to the console, hit up and enter to re-execute after a code change.\r\n\r\nI think the fix would be to make ```reload!``` an ```IRB::HelperMethod``` instead of a ```IRB::Command```. I'm not sure whether there's a reason to not do that, but since ```reload!``` doesn't take arguments anyway, it seems like it would be fine.\r\n\r\nI'd be happy to submit a PR if this is acceptable. I know it's a trivial thing, but it's driving me crazy after a decade and a half of muscle memory. :)",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52982/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3558,
        "label_ids": [],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2539113096,
        "number": 52991,
        "title": "Add reload! as a IRB::HelperMethod so it can be combined with other commands in a single statement. Fixes rails/rails#52982",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-20T15:36:26Z",
        "updated_at": "2024-09-20T19:41:05Z",
        "closed_at": "2024-09-20T19:41:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes rails/rails#52982\r\n\r\nIt is useful to iterate and test in the console by reloading and executing something in a single line command. Something like:\r\n\r\nreload!; Post.find(123).test_a_thing\r\n\r\nThis makes it easy to quickly switch to the console, hit up and enter to re-execute after a code change.\r\n\r\nThis restores functionality that used to work until a few months ago.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52991/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3558,
        "closed_by_id": 3558,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52991.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52991.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2539554071,
        "number": 52996,
        "title": "Add reload! as a IRB::HelperMethod so it can be combined with other calls in a single statement. Fixes rails/rails#52982",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T19:39:42Z",
        "updated_at": "2024-09-20T19:39:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "It is useful to iterate and test in the console by reloading and executing something in a single line command. Something like:\r\n\r\nreload!; Post.find(123).test_a_thing\r\n\r\nThis makes it easy to quickly switch to the console, hit up and enter to re-execute after a code change.\r\n\r\nThis restores functionality that used to work until a few months ago.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52996/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3558,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52996.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52996.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2484677735,
        "number": 52702,
        "title": "7.2.X - bin/rails test command fails and generates ActiveRecord::DatabaseConnectionError when using mysql in development and parallel tests when # tests exceeds parallel minmum.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11472308,
            "number": 90,
            "title": "7.2.2",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 5,
            "state": "open",
            "created_at": "2024-08-21T21:24:04Z",
            "updated_at": "2024-09-20T18:52:26Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 6,
        "created_at": "2024-08-24T15:39:51Z",
        "updated_at": "2024-09-20T19:32:42Z",
        "closed_at": "2024-09-20T18:52:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "On a new Rails 7.2.X app using mysql in development, running the command `bin/rails test` generates a `ActiveRecord::DatabaseConnectionError` exception under these conditions:\r\n\r\n1. Parallel testing is enabled in test_helper.rb.\r\n2. The number of tests is 51 or greater.\r\n3. The app is generated under Rails 7.2.X.\r\n4. The app uses mysql in development.\r\n\r\nThis app was new under Rails 7.2.0.  There are only 3 classes so far all of which were generated using the scaffold generator.  \r\n\r\nThis exception is possibly related to [52697](https://github.com/rails/rails/issues/52697).  I made a separate issue, however, in case it isn't.\r\n\r\nAs in 52697, setting `parallelize(workers: 1)` in class `ActiveSupport::TestCase ` fixes the issue.\r\n\r\nThis is not a problem on our legacy apps with dozens of classes (none generated under Rails 7) and thousands of tests that have been upgraded to Rails 7.2.0.  These apps use sqlite in development instead of mysql.  Parallel testing works as expected on these projects.\r\n\r\nRails 7.2.0, 7.2.1\r\nRuby 3.3.4\r\nMysql Ver 8.0.32 for macos10.15 on x86_64 (Homebrew)\r\n\r\nThis error listing is generated for each test:\r\n```\r\n\r\nError:\r\nGlobalsControllerTest#test_should_show_global:\r\nDRb::DRbRemoteError: There is an issue connecting to your database with your username/password, username: blog_tester.\r\n\r\nPlease check your database configuration to ensure the username/password are valid.\r\n (ActiveRecord::DatabaseConnectionError)\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/mysql2_adapter.rb:31:in `rescue in new_client'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/mysql2_adapter.rb:24:in `new_client'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/mysql2_adapter.rb:145:in `connect'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/mysql2_adapter.rb:154:in `block in reconnect'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/mysql2_adapter.rb:151:in `reconnect'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_adapter.rb:662:in `block in reconnect!'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_adapter.rb:661:in `reconnect!'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_adapter.rb:763:in `block in verify!'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_adapter.rb:754:in `verify!'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_adapter.rb:771:in `connect!'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_adapter.rb:977:in `block in with_raw_connection'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_adapter.rb:976:in `with_raw_connection'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/mysql2/database_statements.rb:96:in `block in raw_execute'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_adapter.rb:1119:in `log'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/mysql2/database_statements.rb:95:in `raw_execute'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:237:in `execute_and_free'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/mysql2/database_statements.rb:18:in `internal_exec_query'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/database_statements.rb:114:in `query'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/database_statements.rb:110:in `query_values'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/schema_statements.rb:35:in `data_sources'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/schema_cache.rb:430:in `block in tables_to_cache'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:395:in `with_connection'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/schema_cache.rb:429:in `tables_to_cache'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/schema_cache.rb:313:in `data_source_exists?'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/schema_cache.rb:38:in `data_source_exists?'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/connection_adapters/schema_cache.rb:182:in `data_source_exists?'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/internal_metadata.rb:108:in `table_exists?'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/tasks/database_tasks.rb:388:in `block in schema_up_to_date?'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/tasks/database_tasks.rb:554:in `with_temporary_pool'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/tasks/database_tasks.rb:385:in `schema_up_to_date?'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/tasks/database_tasks.rb:400:in `block in reconstruct_from_schema'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/tasks/database_tasks.rb:554:in `with_temporary_pool'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/tasks/database_tasks.rb:399:in `reconstruct_from_schema'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/test_databases.rb:17:in `block in create_and_load_schema'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/test_databases.rb:14:in `each'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/test_databases.rb:14:in `create_and_load_schema'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activerecord-7.2.1/lib/active_record/test_databases.rb:8:in `block in <module:TestDatabases>'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization/worker.rb:82:in `block in after_fork'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization/worker.rb:81:in `each'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization/worker.rb:81:in `after_fork'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization/worker.rb:24:in `block in start'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization/worker.rb:15:in `fork'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization/worker.rb:15:in `start'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization.rb:37:in `block in start'\r\n    <internal:numeric>:237:in `times'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization.rb:36:in `each'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization.rb:36:in `map'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelization.rb:36:in `start'\r\n    /Users/charlie/.rvm/gems/ruby-3.3.4/gems/activesupport-7.2.1/lib/active_support/testing/parallelize_executor.rb:19:in `start'\r\n\r\n\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52702/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 6371874,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2539463867,
        "number": 52994,
        "title": "Add TaggedLogging#logger constructor for more pleasant logging interface",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-20T18:54:36Z",
        "updated_at": "2024-09-20T19:09:42Z",
        "closed_at": "2024-09-20T19:09:40Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "No need to expose such crude welding in a configuration file.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52994/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107194,
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52994.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52994.patch",
        "pull_request_merged_at": "2024-09-20T19:09:40Z"
    },
    {
        "id": 2538571977,
        "number": 52988,
        "title": "Fix #52986",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-20T11:25:01Z",
        "updated_at": "2024-09-20T18:49:37Z",
        "closed_at": "2024-09-20T18:49:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because a freshly generated Rails project contains a linter violation despite of its custom Rails omakase Rubocop rules.\r\n\r\n### Detail\r\nThis Pull Request edits the offending line to be compliant with the Rubocop style a new Rails project ships with.\r\n\r\n### Additional information\r\nWhile the commented-out rule in a new Rails project’s .rubocop.yml suggests that exactly this rule is subject to some controversy, it seems odd to have `rails new` generate a project that already contains violations.\r\n\r\nI see four options:\r\n\r\n- Un-comment the custom rule from the generated .rubocop.yml that would not make this fail\r\n- Exclude config/environments/production.rb from rubocop linting (of this rule)\r\n- Disable the rule for the line in /config/environments/production.rb\r\n- Use spaces to conform to the rule\r\n\r\nOut of the four, this PR suggests to conform to the rules the project ships with by standard.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52988/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 919278,
        "closed_by_id": 47848,
        "label_ids": [
            107195,
            1174770998,
            1180817762
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52988.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52988.patch",
        "pull_request_merged_at": "2024-09-20T18:49:37Z"
    },
    {
        "id": 2539377843,
        "number": 52993,
        "title": "Container logging already has built-in timestamps",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T18:05:23Z",
        "updated_at": "2024-09-20T18:20:37Z",
        "closed_at": "2024-09-20T18:20:34Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "It just makes the logs more unreadable when you have them doubled up by default. Pair this with https://github.com/basecamp/kamal/pull/958 for a serene timestamp-free log tailing experience when first debugging new app setup.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52993/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52993.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52993.patch",
        "pull_request_merged_at": "2024-09-20T18:20:34Z"
    },
    {
        "id": 2354272174,
        "number": 52129,
        "title": "Inversion of associations with :through don't work until it's saved",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-14T23:56:03Z",
        "updated_at": "2024-09-20T18:20:00Z",
        "closed_at": "2024-09-20T18:20:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  gem 'rails'\r\n  gem 'sqlite3', '~>1.7'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :physicians, force: true do |t|\r\n  end\r\n\r\n  create_table :appointments, force: true do |t|\r\n    t.integer :physician_id\r\n    t.integer :patient_id\r\n  end\r\n\r\n  create_table :patients, force: true do |t|\r\n  end\r\n\r\nend\r\n\r\nclass ApplicationRecord < ActiveRecord::Base\r\n  primary_abstract_class\r\nend\r\n\r\nclass Physician < ApplicationRecord\r\n  has_many :appointments, inverse_of: :physician\r\n  has_many :patients, through: :appointments, inverse_of: :physicians\r\nend\r\n\r\nclass Appointment < ApplicationRecord\r\n  belongs_to :physician, inverse_of: :appointments\r\n  belongs_to :patient, inverse_of: :appointments\r\nend\r\n\r\nclass Patient < ApplicationRecord\r\n  has_many :appointments, inverse_of: :patient\r\n  has_many :physicians, through: :appointments, inverse_of: :patients\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_building\r\n    patient = Patient.build\r\n    physician = Physician.build(patients: [patient])\r\n    assert_equal patient, physician.appointments.first.patient\r\n    assert_equal physician, physician.appointments.first.patient.physicians.first # Failing test\r\n  end\r\n\r\n  def test_creating\r\n    patient = Patient.build\r\n    physician = Physician.build(patients: [patient])\r\n    physician.save!\r\n    assert_equal patient, physician.appointments.first.patient\r\n    assert_equal physician, physician.appointments.first.patient.physicians.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen a physician and their associated patients are built or created, accessing `physician.appointments.first.patient.physicians.first` should return the initial `physician` object, confirming the bi-directional relationship.\r\n\r\n### Actual behavior\r\nRails doesn't see bi-directional inversion of associations until models are saved.\r\n\r\n### System configuration\r\n**Rails version**: any\r\n\r\n**Ruby version**: any\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52129/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 5048468,
        "closed_by_id": 28418009,
        "label_ids": [
            107191,
            12449438
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2351645574,
        "number": 52120,
        "title": "Lazy default_scope evaluation in joined models loses original context",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-13T17:03:23Z",
        "updated_at": "2024-09-20T18:20:00Z",
        "closed_at": "2024-09-20T18:20:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\", \"~> 1.4\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :tenants, force: true do |t|\r\n  end\r\n\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tenant_id\r\n  end\r\nend\r\n\r\nclass Current < ActiveSupport::CurrentAttributes\r\n  attribute :tenant\r\nend\r\n\r\nclass Tenant < ActiveRecord::Base\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  belongs_to :tenant\r\n\r\n  default_scope { Current.tenant ? where(tenant: Current.tenant) : all }\r\nend\r\n\r\nclass TenantHelper\r\n  def self.with_tenant(tenant)\r\n    Current.tenant = tenant\r\n    yield\r\n  ensure\r\n    Current.reset\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    tenant = Tenant.create!\r\n    post = Post.create!\r\n    Comment.create!(post: post)\r\n    Comment.create!(post: post, tenant: tenant)\r\n\r\n    Current.tenant = tenant\r\n\r\n    # Comments scoped only to tenant, one is returned\r\n    assert_equal 1, Comment.all.count\r\n\r\n    # When comments are joined to post, tenant filter is correctly added to join constraint\r\n    assert_equal 1, Post.joins(:comments).count\r\n\r\n    Current.reset\r\n\r\n    comments_relation = TenantHelper.with_tenant(tenant) { Comment.all }\r\n    comments_joined_relation = TenantHelper.with_tenant(tenant) { Post.joins(:comments) }\r\n\r\n    puts \"comments_relation is: \\n#{comments_relation.to_sql}\"\r\n    puts \"comments_joined_relation is: \\n#{comments_joined_relation.to_sql}\"\r\n\r\n    # default_scope is evaluated in the block above, which correctly includes the tenant filter\r\n    assert_equal 1, comments_relation.count\r\n\r\n    # default_scope is evaluated outside of the block, which prevents the tenant filter from being\r\n    # added to the join constraint\r\n    assert_equal 1, comments_joined_relation.count\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\n`default_scope`s should be evaluated in the context that they were created, both when you are querying the model, *and* if you are joining the model\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n`default_scope`s are evaluated immediately only when querying a model, but are lazily evaluated when joined, causing surprising and unexpected behavior.\r\n\r\n### System configuration\r\n**Rails version**: 6.0.6.1, 7.1.3.4, main\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52120/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2223408,
        "closed_by_id": 28418009,
        "label_ids": [
            107191,
            12449438
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2441029514,
        "number": 52471,
        "title": "Implement new maintenance policy",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2024-07-31T22:09:21Z",
        "updated_at": "2024-09-20T18:10:40Z",
        "closed_at": "2024-08-01T18:05:24Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Main changes are:\r\n\r\n* Releases are maintained by a pre-defined, fixed period of time. One year for bug fixes and two years for security fixes.\r\n\r\n* Distinction between severe security issues and regular security issues is removed.\r\n\r\n* Npm versioning is updated to match not use the pre-release `-` separator.\r\n\r\nA list of all supported releases and their end-of-life date will be added to https://rubyonrails.org/maintenance. I'll also update https://rubyonrails.org/security.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52471/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47848,
        "closed_by_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 7,
        "reactions_plus1": 5,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 2,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52471.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52471.patch",
        "pull_request_merged_at": "2024-08-01T18:05:23Z"
    },
    {
        "id": 2521752961,
        "number": 52893,
        "title": "Add info on how to use the buffers option in Postgres [ci skip]",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2024-09-12T08:44:05Z",
        "updated_at": "2024-09-20T17:36:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThe buffer option was added as part of the Active Record Explain as part of this PR: https://github.com/rails/rails/pull/47043\r\n\r\nHowever perhaps they missed updating the guides on how to use this option as part of ActiveRecord Explain specifically in the context of the PostgreSQL DB. More on how to use the Buffer option as part of PostgreSQL Explain is available as part of their official docs [here](https://www.postgresql.org/docs/current/sql-explain.html)\r\n\r\n### Detail\r\n\r\nThis Pull Request gives a brief overview of how to use the `buffers` option with Active Record Explain using a sample query and their resulting output as a reference.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52893/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 655963,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52893.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52893.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2531739713,
        "number": 52959,
        "title": "UniquenessValidator raises error when used on singleton class",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2024-09-17T17:46:58Z",
        "updated_at": "2024-09-20T17:35:54Z",
        "closed_at": "2024-09-20T17:34:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org/\"\r\n\r\n  gem \"ostruct\"\r\n  gem \"rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new($stdout)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :title\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass SingletonClassUniquenessValidatorBugTest < Minitest::Test\r\n  def test_uniqueness_of_singleton_class\r\n    Post.create!(title: \"First post!\")\r\n\r\n    second_post = Post.create!(title: \"First post!\")\r\n    second_post.singleton_class.validates(:title, { uniqueness: true })\r\n    refute second_post.valid?\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe validation should run without error and (in the example above) result in a value of `false`.\r\n\r\n### Actual behavior\r\n\r\nThe validation on a model object whose singleton class has a uniqueness check raises `NoMethodError`.\r\n\r\n```\r\n% ruby singleton_class_uniqueness_validator_bug.rb\r\nFetching gem metadata from https://rubygems.org/...........\r\nResolving dependencies...\r\n-- create_table(:posts, {:force=>true})\r\nD, [2024-09-17T10:34:01.176316 #41590] DEBUG -- :    (3.7ms)  DROP TABLE IF EXISTS \"posts\"\r\nD, [2024-09-17T10:34:01.176625 #41590] DEBUG -- :    (0.2ms)  CREATE TABLE \"posts\" (\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL, \"title\" varchar)\r\n   -> 0.0065s\r\nD, [2024-09-17T10:34:01.177367 #41590] DEBUG -- :    (0.0ms)  CREATE TABLE \"schema_migrations\" (\"version\" varchar NOT NULL PRIMARY KEY)\r\nD, [2024-09-17T10:34:01.178278 #41590] DEBUG -- :    (0.0ms)  CREATE TABLE \"ar_internal_metadata\" (\"key\" varchar NOT NULL PRIMARY KEY, \"value\" varchar, \"created_at\" datetime(6) NOT NULL, \"updated_at\" datetime(6) NOT NULL)\r\nD, [2024-09-17T10:34:01.191854 #41590] DEBUG -- :   ActiveRecord::InternalMetadata Load (1.4ms)  SELECT * FROM \"ar_internal_metadata\" WHERE \"ar_internal_metadata\".\"key\" = ? ORDER BY \"ar_internal_metadata\".\"key\" ASC LIMIT 1  [[nil, \"environment\"]]\r\nD, [2024-09-17T10:34:01.192018 #41590] DEBUG -- :   ActiveRecord::InternalMetadata Create (0.0ms)  INSERT INTO \"ar_internal_metadata\" (\"key\", \"value\", \"created_at\", \"updated_at\") VALUES ('environment', 'development', '2024-09-17 17:34:01.191886', '2024-09-17 17:34:01.191888') RETURNING \"key\"\r\nRun options: --seed 20979\r\n\r\n# Running:\r\n\r\nD, [2024-09-17T10:34:01.250838 #41590] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction\r\nD, [2024-09-17T10:34:01.250939 #41590] DEBUG -- :   Post Create (0.1ms)  INSERT INTO \"posts\" (\"title\") VALUES (?) RETURNING \"id\"  [[\"title\", \"First post!\"]]\r\nD, [2024-09-17T10:34:01.251007 #41590] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction\r\nD, [2024-09-17T10:34:01.251157 #41590] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction\r\nD, [2024-09-17T10:34:01.251204 #41590] DEBUG -- :   Post Create (0.1ms)  INSERT INTO \"posts\" (\"title\") VALUES (?) RETURNING \"id\"  [[\"title\", \"First post!\"]]\r\nD, [2024-09-17T10:34:01.251241 #41590] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction\r\nE\r\n\r\nFinished in 0.003977s, 251.4458 runs/s, 0.0000 assertions/s.\r\n\r\n  1) Error:\r\nSingletonClassUniquenessValidatorBugTest#test_uniqueness_of_singleton_class:\r\nNoMethodError: undefined method `superclass' for nil\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-7.2.1/lib/active_record/validations/uniqueness.rb:63:in `find_finder_class_for'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-7.2.1/lib/active_record/validations/uniqueness.rb:20:in `validate_each'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activemodel-7.2.1/lib/active_model/validator.rb:155:in `block in validate'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activemodel-7.2.1/lib/active_model/validator.rb:151:in `each'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activemodel-7.2.1/lib/active_model/validator.rb:151:in `validate'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:385:in `block in make_lambda'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:179:in `block in call'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:668:in `block (2 levels) in default_terminator'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:667:in `catch'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:667:in `block in default_terminator'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:180:in `call'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:559:in `block in invoke_before'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:559:in `each'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:559:in `invoke_before'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:109:in `run_callbacks'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:913:in `_run_validate_callbacks'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activemodel-7.2.1/lib/active_model/validations.rb:441:in `run_validations!'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activemodel-7.2.1/lib/active_model/validations/callbacks.rb:115:in `block in run_validations!'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:110:in `run_callbacks'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:913:in `_run_validation_callbacks'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activemodel-7.2.1/lib/active_model/validations/callbacks.rb:115:in `run_validations!'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activemodel-7.2.1/lib/active_model/validations.rb:366:in `valid?'\r\n    /Users/emily.strickland/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-7.2.1/lib/active_record/validations.rb:71:in `valid?'\r\n    singleton_class_uniqueness_validator_bug.rb:35:in `test_uniqueness_of_singleton_class'\r\n\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.2\r\n\r\n**Ruby version**: 3.3.5\r\n\r\n### Analysis\r\n\r\nNote that all the other validators seem to work in this case. `UniquenessValidator` is, uh, unique. That's why I believe this is a bug and not just an unsupported use case.\r\n\r\nThe code raising the error in `ActiveRecord::Validations::UniquenessValidator#find_finder_class_for` seems to be pretty old (from 2009) and likely predates Ruby's `Object#singleton_class` method, as well as the methods `#subclasses` and `#descendants` added in Rails 3. (I'm going off memory, so I might not be right in remembering versions.)\r\n\r\nFor what it's worth, there's a pretty easy workaround. The script below demonstrates. It might not be the best overall solution for this problem, but it's the least invasive thing I can think to use. (I can't use a refinement because (I think) it wouldn't be in scope at the point where this class is instantiated and used.)\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org/\"\r\n\r\n  gem \"ostruct\"\r\n  gem \"rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new($stdout)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :title\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nmodule SingletonClassUniquenessValidator\r\n  def find_finder_class_for(record)\r\n    @klass = @klass.superclass if @klass.singleton_class?\r\n    super\r\n  end\r\n\r\n  ActiveRecord::Validations::UniquenessValidator.prepend(self)\r\nend\r\n\r\nclass SingletonClassUniquenessValidatorBugTest < Minitest::Test\r\n  def test_uniqueness_of_singleton_class\r\n    Post.create!(title: \"First post!\")\r\n\r\n    second_post = Post.create!(title: \"First post!\")\r\n    second_post.singleton_class.validates(:title, { uniqueness: true })\r\n    refute second_post.valid?\r\n  end\r\nend\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52959/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 528994,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2537373493,
        "number": 52983,
        "title": "Fix uniqueness validations defined on singleton classes",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-19T21:09:27Z",
        "updated_at": "2024-09-20T17:34:41Z",
        "closed_at": "2024-09-20T17:34:41Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #52959.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52983/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52983.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52983.patch",
        "pull_request_merged_at": "2024-09-20T17:34:41Z"
    },
    {
        "id": 2027593390,
        "number": 50280,
        "title": "Infer default `:inverse_of` option for `delegated_type`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-12-06T03:48:22Z",
        "updated_at": "2024-09-20T16:32:06Z",
        "closed_at": "2024-08-21T19:37:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nPrior to this commit, delegated types were unable to infer their inverse associations, so saving records built with the generated `#build_ASSOCIATION` methods weren't writing to all the necessary places. For example:\r\n\r\n```ruby\r\nentry = Entry.create! entryable: Message.new(subject: \"Hello world!\")\r\nentry.message.subject # => \"Hello world!\"\r\n\r\nentry.build_entryable(subject: \"Goodbye world!\").save!\r\nentry.reload.message.subject # => \"Hello world!\"\r\n```\r\n\r\n### Additional information\r\n\r\nThe fact that the `Entry` test model declared a `delegated_type :entryable` definition with `types: %w[ Message Comment ]` was never reciprocated in the appropriate models.\r\n\r\nIn order to pass the tests, this commit needed to define the corresponding `has_one :entry` associations. To do so, introduce the `Entryable` concern in the same style as the one mentioned in the documentation. The same extraction is made for a `UuidEntryable` concern mixed into `UuidMessage` and `UuidComment`.\r\n\r\nUnfortunately, defining `delegated_type :thing, types: %w[ Post ]` was more tricky to fix. The `Post` test model is widely used, so defining a `has_one` had farther-reaching effects than intended. To resolve that issue, this commit redefines `:thing` to use `types: %w[ Essay ]`, which has much fewer unintended side effects.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50280/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2575027,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50280.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50280.patch",
        "pull_request_merged_at": "2024-08-21T19:37:12Z"
    },
    {
        "id": 2539078105,
        "number": 52990,
        "title": "Turn SuckerPunch removal into deprecation and point to async adapter",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T15:17:39Z",
        "updated_at": "2024-09-20T15:47:18Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Follow up to #52935 as requested by @matthewd \r\n\r\nThis gives people a chance to fix their apps while upgrading Rails, with a warning that tells them about the `async` adapter.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52990/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "label_ids": [
            123812746
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52990.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52990.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2523212846,
        "number": 52905,
        "title": "[RF-DOCS] Action Mailer Guide [ci-skip]",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T19:38:00Z",
        "updated_at": "2024-09-20T15:46:25Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request is for updating and improving the \"Action Mailer Basics\" Rails Guide documentation.\r\n\r\n### Testing\r\n\r\n- [x] Run `guides:generate`\r\n- [x] Run `guides:lint` \r\n- [x] Run rubocop on code samples\r\n\r\n### Details\r\n\r\nHere are some of the things addressed from this Guide.\r\n\r\n- [X] Mailers now actually inherit from a generated ApplicationMailer, which in turn inherit from ActionMailer::Base.\r\n- [X] The output to generating a mailer might be different depending on whether the base ApplicationMailer and layout have already been generated, which will already happen when creating a new app, or if they're not there the first time the mailer is generated.\r\n- [X] Maybe the generator should be shown by passing an action name directly? (or as a second example or subsection?) bin/rails generate mailer User welcome_email\r\n- [X] Complete List of Action Mailer should be linked. (in fact, maybe we don't even \"need\" this to be a section, but rather part of the text when introducing the other mailer methods? And then a full section on Attachments)\r\n- [X] The HTML view has a complete layout with DOCTYPE/head/body, but it should be using the application mailer's layout, so that example will likely double the HTML, it is incorrect.\r\n- [X] The guide shows how to build a multipart email (HTML + Text), but doesn't really explain why, what are the benefits, if it's really needed, etc., might be a worth addition to consider. There's a section later in the guide that's about \"multipart emails\", that we could link to from the top, and perhaps expand a bit on that.\r\n- [X] I wonder if we should instead show an example of sending the email via console, after we have the mailer and associated model? And then proceed with showing the controller version.\r\n- [X] Link to Active Job guide, there's a mention when explaining how to call the mailer, and a Note. That note should likely be simplified and linked instead. (less duplicated content, no need to mention Sidekiq,etc. elsewhere, etc.)\r\n- [X]  If we do show how to use via console, it'd be a good introduction to start with deliver_now, and then explain deliver_later + Active Job afterwards.\r\n- [X] Auto Encoding Header Values seems like a topic/section that could be pushed down, it's not a common need.\r\nDecided to remove as it is an extraneous detail.\r\n- [X] Attachments could be a larger subsection, right now it's a 3rd level section that doesn't show in the sections list on the right.\r\n- [X] \"Action Mailer 3.0\" no need to mention older versions any longer.\r\n- [X] Under the Layouts section, it doesn't mention where the layout should be located. (app/views/layouts), and it should probably mention the default mailer layout now too. (see other comment about about the email template containing the full HTML tags)\r\n- [X] There's a section about \"Dynamic Delivery Options\" that shows how to pass SMTP & etc. configs, but the configuration section is later in the guide, this could be reorganized to better flow, or at least linked.\r\n- [X] There's some information about views, layouts, rendering without a template, etc., scattered, maybe it makes sense to group these related pieces a little bit better.\r\n- [X] Under the configuration section, deliveries is not really a configuration but something to use in dev/test., not sure it's where it should be mentioned.\r\n- [X] A new section about rescuing errors could be added too. [Here's the API](https://github.com/rails/rails/blob/3efae445196da943c0532a00f6dfbafc74ae879d/actionmailer/lib/action_mailer/base.rb#L353-L374) for reference.\r\n- [X] No mention of I18n, maybe could have at very brief section or paragraph/note somewhere that points to the [I18n guide on the matter](https://edgeguides.rubyonrails.org/i18n.html#translations-for-action-mailer-e-mail-subjects).",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52905/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1966473,
        "label_ids": [
            150377,
            6434393529
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 1,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52905.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52905.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2089217366,
        "number": 50796,
        "title": "Add customized prompt for Rails console",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-18T23:00:43Z",
        "updated_at": "2024-09-20T15:06:45Z",
        "closed_at": "2024-01-19T19:11:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n**Update**\r\n\r\nThere were 2 more follow up PRs on this:\r\n\r\n- https://github.com/rails/rails/pull/50825\r\n- https://github.com/rails/rails/pull/50855\r\n\r\nSo the resulted prompt now looks like this instead:\r\n\r\n![Screenshot 2024-01-26 at 23 00 56](https://github.com/rails/rails/assets/5079556/36359953-e0dc-4f76-aa97-e27a914be721)\r\n\r\n### Motivation / Background\r\n\r\nAs discussed in #50770, Rails console's prompt is not easily distinguishable from normal IRB console. It also doesn't provide Rails-specific information to assist developers.\r\n\r\nCloses #50770 \r\n\r\n### Detail\r\n\r\n- A new IRB prompt called `RAILS_PROMPT` is added, which looks like:\r\n    - `dev:001>` in development\r\n    - `prod:001>` in production\r\n    - `test:001>` in test\r\n- The `RAILS_PROMPT` is only selected when the user doesn't specify another custom prompt.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50796/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5079556,
        "closed_by_id": 44640,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 24,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 22,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 1,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50796.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50796.patch",
        "pull_request_merged_at": "2024-01-19T19:11:51Z"
    },
    {
        "id": 2536357421,
        "number": 52973,
        "title": "\"Cannot expire connection, it is owned by a different thread\" in Rails 7.2 tests",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-19T13:29:36Z",
        "updated_at": "2024-09-20T14:15:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nAfter upgrading 7.1.4 -> 7.2.1, we've started seeing some sporadic failures in our test suite. I've narrowed it down to happening when a Capybara system test is followed by a unit test that sets `use_transactional_tests = false`, followed by another Capybara system test. Capybara then fails to load pages, with errors along the lines of:\r\n\r\n\r\n```\r\n  ActiveRecord::ActiveRecordError:\r\n  Cannot expire connection, it is owned by a different thread: #<Thread:0x000000010051b0e8 sleep>. Current thread: #<Thread:0x0000000110dc03c8 /Users/jon/Developer/web/vendor/bundle/nix-bundle/ruby/3.2.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:113 run>.\r\n\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract_adapter.rb:316:in `expire'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:555:in `block (3 levels) in checkin'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:110:in `run_callbacks'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:913:in `_run_checkin_callbacks'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:554:in `block (2 levels) in checkin'\r\n# /nix/store/cvwv2rkas498bv81lrd2wxdr50kfkqhv-ruby-3.2.4/lib/ruby/3.2.0/monitor.rb:202:in `synchronize'\r\n# /nix/store/cvwv2rkas498bv81lrd2wxdr50kfkqhv-ruby-3.2.4/lib/ruby/3.2.0/monitor.rb:202:in `mon_synchronize'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:551:in `block in checkin'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:550:in `checkin'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:367:in `release_connection'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/query_cache.rb:48:in `block in complete'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_handler.rb:108:in `block (2 levels) in each_connection_pool'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/pool_manager.rb:31:in `each_value'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/pool_manager.rb:31:in `block in each_pool_config'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/pool_manager.rb:30:in `each_value'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/pool_manager.rb:30:in `each_pool_config'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_handler.rb:107:in `block in each_connection_pool'\r\n# ./vendor/bundle/ruby/3.2.0/gems/concurrent-ruby-1.3.4/lib/concurrent-ruby/concurrent/map.rb:265:in `block in each_value'\r\n# ./vendor/bundle/ruby/3.2.0/gems/concurrent-ruby-1.3.4/lib/concurrent-ruby/concurrent/collection/map/non_concurrent_map_backend.rb:101:in `block in each_pair'\r\n# ./vendor/bundle/ruby/3.2.0/gems/concurrent-ruby-1.3.4/lib/concurrent-ruby/concurrent/collection/map/non_concurrent_map_backend.rb:100:in `each_pair'\r\n# ./vendor/bundle/ruby/3.2.0/gems/concurrent-ruby-1.3.4/lib/concurrent-ruby/concurrent/collection/map/non_concurrent_map_backend.rb:100:in `each_pair'\r\n# ./vendor/bundle/ruby/3.2.0/gems/concurrent-ruby-1.3.4/lib/concurrent-ruby/concurrent/map.rb:276:in `each_pair'\r\n# ./vendor/bundle/ruby/3.2.0/gems/concurrent-ruby-1.3.4/lib/concurrent-ruby/concurrent/map.rb:265:in `each_value'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_handler.rb:106:in `each_connection_pool'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activerecord-7.2.1/lib/active_record/query_cache.rb:47:in `complete'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/execution_wrapper.rb:36:in `before'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:385:in `block in make_lambda'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:179:in `block in call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:668:in `block (2 levels) in default_terminator'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:667:in `catch'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:667:in `block in default_terminator'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:180:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:559:in `block in invoke_before'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:559:in `each'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:559:in `invoke_before'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/callbacks.rb:109:in `run_callbacks'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/execution_wrapper.rb:142:in `complete'\r\n# ./vendor/bundle/ruby/3.2.0/gems/activesupport-7.2.1/lib/active_support/execution_wrapper.rb:136:in `complete!'\r\n# ./vendor/bundle/ruby/3.2.0/gems/actionpack-7.2.1/lib/action_dispatch/middleware/executor.rb:28:in `ensure in call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/actionpack-7.2.1/lib/action_dispatch/middleware/executor.rb:28:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/actionpack-7.2.1/lib/action_dispatch/middleware/static.rb:27:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/rack-3.1.7/lib/rack/sendfile.rb:114:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/actionpack-7.2.1/lib/action_dispatch/middleware/host_authorization.rb:143:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/rack-cors-2.0.2/lib/rack/cors.rb:102:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/rack-mini-profiler-3.3.1/lib/mini_profiler.rb:191:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/railties-7.2.1/lib/rails/engine.rb:535:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/rack-3.1.7/lib/rack/urlmap.rb:76:in `block in call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/rack-3.1.7/lib/rack/urlmap.rb:60:in `each'\r\n# ./vendor/bundle/ruby/3.2.0/gems/rack-3.1.7/lib/rack/urlmap.rb:60:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/rack-3.1.7/lib/rack/builder.rb:277:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/capybara-3.40.0/lib/capybara/server/middleware.rb:60:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/puma-6.4.2/lib/puma/configuration.rb:272:in `call'\r\n# ./vendor/bundle/ruby/3.2.0/gems/puma-6.4.2/lib/puma/request.rb:100:in `block in handle_request'\r\n# ./vendor/bundle/ruby/3.2.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:378:in `with_force_shutdown'\r\n# ./vendor/bundle/ruby/3.2.0/gems/puma-6.4.2/lib/puma/request.rb:99:in `handle_request'\r\n# ./vendor/bundle/ruby/3.2.0/gems/puma-6.4.2/lib/puma/server.rb:464:in `process_client'\r\n# ./vendor/bundle/ruby/3.2.0/gems/puma-6.4.2/lib/puma/server.rb:245:in `block in run'\r\n# ./vendor/bundle/ruby/3.2.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:155:in `block in spawn_thread'\r\n```\r\n\r\nThe puma thread seems to be trying to expire a connection owned by the main thread.\r\n\r\nI've also occasionally seen the error reported being \"Cannot expire connection, it is not currently leased\".\r\n\r\nI've bisected the Rails issue down to starting at https://github.com/rails/rails/pull/51725 - prior to that commit, I don't see any of these errors.\r\n\r\nThe transactionless test could be as simple as:\r\n\r\n```ruby\r\nRSpec.describe User, type: :model do\r\n  self.use_transactional_tests = false\r\n  it \"can handle simultaneous transactions\" do\r\n    Array.new(5) {\r\n      Thread.new { User.first }\r\n    }.map(&:join)\r\n  end\r\nend\r\n```\r\n\r\nI'm still working on a reproduction script, but having tried to narrow it down for several hours without any luck I thought I'd post this in the hope that someone might immediately recognise the problem. \r\n\r\n@casperisfine I don't suppose this rings any bells for you? Sorry, I appreciate it's a vague question - I'll carry on trying to come up with a demo app if not.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.4\r\n\r\n**Ruby version**: 3.2.4\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52973/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2377,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2538903063,
        "number": 52989,
        "title": "ActionCable stream_from handlers not called in test ",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T13:57:14Z",
        "updated_at": "2024-09-20T13:57:14Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hi! I'm hoping to improve my test coverage for ActionCable, including the execution of `stream_from { ... }` handlers. But, I can't find a way to make those handlers called in my test cases. Is there something else I should do so that those will be executed? Or, is there another recommended way to test this? \r\n\r\nThanks for taking a look! \r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/object/blank\"\r\nrequire \"minitest/autorun\"\r\nrequire \"action_cable\"\r\n\r\n# Stub some things so that the test will run:\r\nActionCable.server.instance_variable_set(:@pubsub,  \"test\")\r\nActionCable.server.config.logger = Logger.new($stdout)\r\n\r\nclass MyChannel < ActionCable::Channel::Base\r\n  attr_reader :was_subscribed, :stream_from_called_with\r\n  def subscribed\r\n    @was_subscribed = true\r\n    stream_from(\"some-broadcasting\") do |message|\r\n      @stream_from_called_with = message\r\n    end\r\n  end\r\nend\r\n\r\nclass MyChannelTest  < ActionCable::Channel::TestCase\r\n  test \"it calls stream_from handlers\" do\r\n    subscribe\r\n\r\n    assert subscription.confirmed?\r\n    assert subscription.was_subscribed\r\n\r\n    ActionCable.server.broadcast(\"some-broadcasting\", \"some-message\")\r\n\r\n    assert_equal \"some-message\", subscription.stream_from_called_with\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect `stream_from_called_with` to be equal to `\"some-message\"` in that test \r\n\r\n### Actual behavior\r\n\r\nInstead, it's `nil`: \r\n\r\n```\r\n$ ruby bug_report.rb\r\nFetching gem metadata from https://rubygems.org/...........\r\nResolving dependencies...\r\n3.1.1\r\n7.2.1\r\nRun options: --seed 55085\r\n\r\n# Running:\r\n\r\nD, [2024-09-20T09:53:12.385537 #51022] DEBUG -- : [ActionCable] Broadcasting to some-broadcasting: \"some-message\"\r\nF\r\n\r\nFinished in 0.009610s, 104.0583 runs/s, 312.1748 assertions/s.\r\n\r\n  1) Failure:\r\nMyChannelTest#test_it_calls_stream_from_handlers [bug_report.rb:40]:\r\nExpected: \"some-message\"\r\n  Actual: nil\r\n\r\n1 runs, 3 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.1.1\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52989/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2231765,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 795406316,
        "number": 41258,
        "title": "Expose `primary_abstract_class` public API",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-01-27T20:06:49Z",
        "updated_at": "2024-09-20T13:37:18Z",
        "closed_at": "2021-02-04T14:47:35Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "followup to #41030, cc @rafaelfranca \r\n\r\nWe went with primary_abstract_class because we want that to set the class that is the primary abstract class, not have to look for which one is set to true. We'd have to store the class name somewhere, so figured better on the caller.\r\n\r\n---\r\n\r\nPreviously Rails was treating `ApplicationRecord` as special in the\r\n`primary_class?` check. The reason we need to treat it differently than\r\nother connection classes is that `ActiveRecord::Base` will establish a\r\nconnection to the primary database on boot. The established connection\r\nis to your primary database, or the first database defined in your\r\nconfiguration. We need to do this so that 2 connections aren't opened to\r\nthe same database since `ActiveRecord::Base` and `ApplicationRecord`\r\nare different classes, on connection the connection_specification_name\r\nwould be different.\r\n\r\nHowever, there is no guarantee that an application is using\r\n`ApplicationRecord` as it's primary abstract class. This exposes a\r\npublic method for setting a class to a `primary_abstract_class` like\r\nthis:\r\n\r\n```\r\nclass PrimaryApplicationRecord < ActiveRecord::Base\r\n  self.primary_abstract_class\r\nend\r\n```\r\n\r\nCalling `primary_abstract_class` will automatically set\r\n`self.abstract_class = true`. This change is backwards compatible\r\nbecause we weren't supporting multiple application records previously,\r\nand if you had an `ApplicationRecord` we assumed that was the primary\r\nclass. This change continues to assume that `ApplicationRecord` is your\r\nprimary class. You only need to set `primary_abstract_class` if your\r\napplication record is not ApplicationRecord and you're using multiple\r\ndatabases.\r\n\r\nCo-authored-by: John Crepezzi <john.crepezzi@gmail.com>",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/41258/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1080678,
        "closed_by_id": 1080678,
        "label_ids": [
            107191,
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/41258.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/41258.patch",
        "pull_request_merged_at": "2021-02-04T14:47:34Z"
    },
    {
        "id": 2538273159,
        "number": 52985,
        "title": "Precision and scale not detected for custom DOMAIN types [PostgreSQL]",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T09:00:39Z",
        "updated_at": "2024-09-20T13:25:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This issue is specific to database servers that support creating custom domains or types. My use case and experience are with PostgreSQL, though SQL Server and Oracle also appear to have the same feature.\r\n\r\n- PostgreSQL [`CREATE DOMAIN`](https://www.postgresql.org/docs/current/sql-createdomain.html)\r\n- Microsoft SQL Server [`CREATE TYPE`](https://learn.microsoft.com/en-us/sql/t-sql/statements/create-type-transact-sql?view=sql-server-ver16) may be the same thing?\r\n\r\nA `DOMAIN` is a lightweight custom database type based on built-in types, with optional constraints. This allows you to DRY-up database column schema and function args by defining a commonly-used type once and then using that domain as a column type.\r\n\r\nAn example plucked from my real-world use case is a domain called `fxrate` to store foreign exchange rates. This defines the underlying type as being `numeric(16, 4)` and that the value can't be negative.\r\n\r\nCurrently, Rails does not recognise the `precision` and `scale` for a `DOMAIN` based on a `numeric` type. This causes type casting and rounding on DOMAIN-based columns to be different to plain `numeric`-based columns.\r\n\r\n\r\n### Steps to reproduce\r\n\r\nThis requires a running PostgreSQL instance:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"postgresql\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute(\"DROP TABLE IF EXISTS exchange_rates\")\r\n  execute(\"DROP DOMAIN IF EXISTS fxrate\")\r\n\r\n  execute(\"CREATE DOMAIN fxrate AS NUMERIC(16, 4) CHECK (VALUE IS NULL OR VALUE > 0)\")\r\n\r\n  create_table :exchange_rates, force: true do |t|\r\n    t.string :currency_code\r\n    t.column :rate, :fxrate\r\n  end\r\nend\r\n\r\nclass ExchangeRate < ActiveRecord::Base\r\n  # Adding this type override causes tests to pass\r\n  # attribute :rate, :decimal, precision: 16, scale: 4\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_decimal_casting\r\n    record = ExchangeRate.create!(currency_code: \"EUR\", rate: BigDecimal(\"0.123456789\"))\r\n\r\n    assert_equal BigDecimal(\"0.1235\"), record.rate\r\n  end\r\n\r\n  def test_numeric_domain_type_discovery\r\n    type = ExchangeRate.attribute_types[\"rate\"]\r\n\r\n    assert_equal 16, type.precision\r\n    assert_equal 4, type.scale\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nFor _domain_ types based on `numeric`, the `precision` and `scale` are automatically detected and configured for the related types of columns that use that domain, allowing built-in casting for decimals to work as usual. \r\n\r\n### Actual behavior\r\n\r\nThe `precision` and `scale` are both left as `nil`.\r\n\r\n### Workarounds\r\n\r\n#### Model-level\r\n\r\nThe precision and scale can be overridden for each column that uses the custom domain, e.g.:\r\n\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  attribute :rate, :decimal, precision: 16, scale: 9\r\nend\r\n```\r\n\r\n#### Custom type registration\r\n\r\nRails doesn't (AFAIK?) have an interface to register custom types, but it can be done anyway with a custom initializer that forces the custom domain to be registered.\r\n\r\n```ruby\r\n# config/initializers/ar_types.rb\r\n\r\nActiveSupport.on_load(:active_record) do\r\n  PGAdapter = ActiveRecord::ConnectionAdapters::PostgreSQLAdapter\r\n\r\n  PGAdapter.singleton_class.prepend(Module.new do\r\n    def initialize_type_map(m)\r\n      super(m)\r\n      m.register_type(\"fxrate\", PGAdapter::OID::Decimal.new(precision: 16, scale: 9))\r\n    end\r\n  end)\r\nend\r\n```\r\n\r\n\r\nSince I currently only have one column with this issue, I hardcoded the precision and scale. This could be read from the database though:\r\n\r\n```sql\r\nselect domain_name, numeric_precision, numeric_scale\r\nfrom information_schema.domains\r\nwhere domain_schema = 'public'\r\nand data_type = 'numeric';\r\n```\r\n\r\n### Related issues\r\n\r\n#### String lengths\r\n\r\nThis issue extends to domains based on text types that have a limit, as Rails will not be aware of the length limit.\r\n\r\nExample to create such a type that is exactly 2 chars long:\r\n\r\n```sql\r\nCREATE DOMAIN iso2char AS varchar(2) CHECK (VALUE IS NULL OR VALUE ~ '^[A-Z]{2}$');\r\n```\r\n\r\n#### Defaults\r\n\r\nAnother issue is when a `DOMAIN` declare a default values, Rails is not aware of it and will attempt to insert `NULL` into the column.\r\n\r\nHere's a real-world `DOMAIN` I use for columns that store record counts i.e. counter cache columns. \r\n\r\n```sql\r\nCREATE DOMAIN record_count AS bigint NOT NULL DEFAULT 0 CHECK (VALUE >= 0);\r\n```\r\n\r\nWith raw SQL, the default defined on the domain is used\r\n\r\n```sql\r\ncreate table albums (name text, song_count record_count);\r\ninsert into albums (name) values('Midnights') returning song_count;\r\n song_count \r\n------------\r\n          0\r\n```\r\n\r\nBut Rails doesn't know about this:\r\n\r\n```ruby\r\nAlbum.columns_hash[\"song_count\"].default\r\n=> nil\r\n```\r\n\r\nSo it tries to insert null\r\n\r\n```\r\nAlbum.create!(name: \"Midnights\")\r\n\r\n  Album Create (0.7ms)  INSERT INTO \"albums\" (\"name\", \"song_count\") VALUES ('Midnights', NULL)\r\n  PG::NotNullViolation: ERROR:  domain record_count does not allow null values\r\n```\r\n\r\n### System configuration\r\n**Rails version**: _main_\r\n\r\n**Ruby version**: 3.3.5\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52985/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 79006,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2536796929,
        "number": 52979,
        "title": "Add section for editor integrations to in getting started",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-19T16:13:59Z",
        "updated_at": "2024-09-20T13:25:04Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nIn #50453, it was proposed to include a language server with Rails by default. We were already working on the [Rails addon for the Ruby LSP](https://github.com/Shopify/ruby-lsp-rails) and at the time believed that Rails was the place for it to live.\r\n\r\nAfter several experiments with different approaches, we found a way to extract runtime information from Rails without the need to implement anything inside of Rails itself. This was important to us since development tools can be released at a more aggressive cadence.\r\n\r\nDespite not including the language server related code inside the Rails codebase, we should still provide documentation on setting up the development environment and getting editor integrations that help people building with Rails be as productive as they can be.\r\n\r\nWe have just finished a complete revamp of the [Ruby LSP documentation](https://shopify.github.io/ruby-lsp), which includes a section on the [Rails addon](https://shopify.github.io/ruby-lsp/rails-addon.html).\r\n\r\nAdditionally, we just shipped support for [request delegation in ERB](https://shopify.github.io/ruby-lsp/#erb-support). I'm quite excited about it as it makes all of the rich features language servers provide (like completion, definition, hover, etc) work in the embedded Ruby portion of the file, but also in the HTML parts of the file (including support for JavaScript and CSS inside relevant attributes).\r\n\r\n### Detail\r\n\r\nThis PR simply includes a new section in getting started, with a few sentences about setting up editor integrations with the Ruby LSP.\r\n\r\nBased on what the team told me, this part of the guides are due for a content review, so I didn't invest a lot of effort and just added a brief explanation with the relevant links.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52979/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 18742907,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52979.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52979.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2538560660,
        "number": 52987,
        "title": "Fix #52986 - New Rails project includes a Rubocop violation",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-20T11:18:50Z",
        "updated_at": "2024-09-20T11:23:13Z",
        "closed_at": "2024-09-20T11:23:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because a freshly generated Rails project contains a linter violation despite of its custom Rails omakase Rubocop rules.\r\n\r\n### Detail\r\nThis Pull Request edits the offending line to be compliant with the Rubocop style a new Rails project ships with.\r\n\r\n### Additional information\r\nWhile the commented-out rule in a new Rails project’s .rubocop.yml suggests that exactly this rule is subject to some controversy, it seems odd to have `rails new` generate a project that already contains violations.\r\n\r\nI see four options:\r\n\r\n- Un-comment the custom rule from the generated .rubocop.yml that would not make this fail\r\n- Exclude config/environments/production.rb from rubocop linting (of this rule)\r\n- Disable the rule for the line in /config/environments/production.rb\r\n- Use spaces to conform to the rule\r\n\r\nOut of the four, this PR suggests to conform to the rules the project ships with by standard.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52987/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 919278,
        "closed_by_id": 919278,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52987.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52987.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2536781210,
        "number": 52978,
        "title": "Fix infinite loop computing ERB dependencies with non-trailing interpolations",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-19T16:06:24Z",
        "updated_at": "2024-09-20T09:09:00Z",
        "closed_at": "2024-09-19T22:54:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nFix infinite loop computing ERB dependencies with non-trailing interpolations\r\n\r\n### Detail\r\n\r\nCalling\r\n```ruby\r\nActionView::DependencyTracker::ERBTracker#add_static_dependency( [], \"test/\\#{bucket.bucketable_name.pluralize}/status/show\", \"\\\"\")\r\n```\r\nWill loop indefinitely. I noticed it because after a Rails bump our CI timed out 😅. Fixes it by parsing only template strings with a trailing template interpolation.\r\n\r\nFrom my understrading of https://github.com/rails/rails/pull/50944 this is the desired behaviour but I've a naive knowledge of this part of Rails so please correct me if I'm wrong. \r\n\r\n/cc @skipkayhil @jhawthorn \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52978/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1753245,
        "closed_by_id": 131752,
        "label_ids": [
            3666649
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52978.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52978.patch",
        "pull_request_merged_at": "2024-09-19T22:54:22Z"
    },
    {
        "id": 1254453200,
        "number": 45231,
        "title": "Allows associations to be automatically preloadable.",
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eileencodes",
            "id": 1080678,
            "followers_url": "https://api.github.com/users/eileencodes/followers",
            "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
            "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
            "organizations_url": "https://api.github.com/users/eileencodes/orgs",
            "repos_url": "https://api.github.com/users/eileencodes/repos",
            "received_events_url": "https://api.github.com/users/eileencodes/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eileencodes",
                "id": 1080678,
                "followers_url": "https://api.github.com/users/eileencodes/followers",
                "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
                "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
                "organizations_url": "https://api.github.com/users/eileencodes/orgs",
                "repos_url": "https://api.github.com/users/eileencodes/repos",
                "received_events_url": "https://api.github.com/users/eileencodes/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "gmcgibbon",
                "id": 5162312,
                "followers_url": "https://api.github.com/users/gmcgibbon/followers",
                "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
                "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
                "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
                "repos_url": "https://api.github.com/users/gmcgibbon/repos",
                "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 23,
        "created_at": "2022-05-31T21:52:47Z",
        "updated_at": "2024-09-20T08:57:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nBefore we load an association for the first time, we can preload\r\nthe association. This will eliminate most standard N+1 queries in Rails\r\napps.\r\n\r\nWe do this by capturing the group of records returned by a query in an\r\nAutomaticPreloader and having each record have a reference to it.\r\n\r\nOnce a record has been flagged to allow automatic preloading, subsequent\r\nassociations are also flagged the same so this will allow deeply nested\r\nassociations to all be dynamically preloaded\r\n\r\nThis is off by default and can be opted in with each relation. There\r\nis also a global option to enable it by default\r\n\r\nFor example: \r\nThis code snippet:\r\n```ruby\r\ndevelopers = Developer.order(:id).limit(2).to_a\r\ndevelopers.each do |developer|\r\n  developer.contracts.to_a.first.company\r\nend\r\n```\r\nwould typically result in a few N+1 queries.  The queries would look something like:\r\n```sql\r\nSELECT \"developers\".* FROM \"developers\" ORDER BY \"developers\".\"id\" ASC LIMIT 2\r\nSELECT \"contracts\".* FROM \"contracts\" WHERE \"contracts\".\"developer_id\" = 1 \r\nSELECT \"companies\".* FROM \"companies\" WHERE \"companies\".\"id\" = 1 LIMIT 1\r\nSELECT \"contracts\".* FROM \"contracts\" WHERE \"contracts\".\"developer_id\" = 2 \r\nSELECT \"companies\".* FROM \"companies\" WHERE \"companies\".\"id\" = 2 LIMIT 1\r\n```\r\n\r\nWith `automatic_preloading` added (`Developer.order(:id).automatic_preloading.limit(2).to_a`), the same code would generate queries like:\r\n```sql\r\nSELECT \"developers\".* FROM \"developers\" ORDER BY \"developers\".\"id\" ASC LIMIT 2\r\nSELECT \"contracts\".* FROM \"contracts\" WHERE \"contracts\".\"developer_id\" IN (1, 2)\r\nSELECT \"companies\".* FROM \"companies\" WHERE \"companies\".\"id\" IN (1, 2)\r\n```\r\n\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/45231/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1671796,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/45231.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/45231.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1718157178,
        "number": 48263,
        "title": "Add down only and migrating helpers to migration",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-20T12:27:00Z",
        "updated_at": "2024-09-20T03:21:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nIn migrations, the `up_only` helper and the `reverting?` predicate allow constraining operations in either direction. Adding `down_only` and `migrating?` allows defining blocks that need to run when reverting, or running one-liners when migrating without using double negatives. Plus, you no longer need to remember which ones exist and which ones don't.\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\nFixes #48245 \r\n\r\n### Detail\r\n\r\nThis Pull Request adds `down_only` and `migrating?`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change.\r\n* [x] Commit message has a detailed description of what changed and why.\r\n* [x] Tests are added or updated if you fix a bug or add a feature. (Original methods are not tested)\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48263/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 419086,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/48263.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/48263.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2526470615,
        "number": 52929,
        "title": "Eject most Active Job adapters into separate gems",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 11,
        "created_at": "2024-09-14T15:18:06Z",
        "updated_at": "2024-09-20T02:36:17Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "We used to ship with a million database adapters in the box, but eventually settled on just offering official support for mysql/pgsql/sqlite. Folks can of course use whatever database they desire, but the work to maintain db2 or sqlserver or oracle falls to those vendors or the broader community.\r\n\r\nWith Solid Queue becoming the default for Rails 8, it's time to do the same for Active Job. For starters, I think we can boil it down to the single-process adapters (inline/async/test) and then adapters for resque, sidekiq, and then of course Solid Queue (which actually just has the adapter in the gem!). Everything else should be extracted into separate adapter gems, like activejob-suckerpunch or whatever.\r\n\r\nTracking the work:\r\n\r\n| Adapter                |  Task   | PR |\r\n|------------------------|---------|----|\r\n| backburner_adapter     | Extract |  PDI  |\r\n| resque_adapter         | Upstream   | PDI   |\r\n| sneakers_adapter       | Extract |  PDI  |\r\n| delayed_job_adapter    | Extract | PDI   |\r\n| queue_classic_adapter  | Extract |  PDI |\r\n| sidekiq_adapter        | Depends   |  PDI  |\r\n| sucker_punch_adapter   | Remove | https://github.com/rails/rails/pull/52935  |",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52929/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "label_ids": [
            123812746,
            149514554
        ],
        "reactions_total_count": 4,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 1,
        "reactions_eyes": 0
    },
    {
        "id": 1460766957,
        "number": 46555,
        "title": "Small PR: Apply Rails backtrace cleaner to ActiveJob backtrace printout",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-11-23T00:45:44Z",
        "updated_at": "2024-09-19T23:30:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nActiveJob produces a large amount of log noise, because errors that are emitted from ActiveJob don't have the standard Rails BacktraceCleaner applied. This is especially apparent when using Sorbet for Ruby types, since each application method call is wrapped by multiple Sorbet typechecking functions. My application's activejob error backtraces would typically log 4 non-relevant Sorbet function calls for each application function call. My workaround has been to monkey-patch Rails in our application. However, it seems to make sense to simply bring this behavior into ActiveJob as the default, as the backtrace cleaner is a pretty standard piece of Rails machinery that is used for most other backtraces in Rails.\r\n\r\n### Additional information\r\n\r\nWhen ActiveJob encounters an error performing a job, rather than printing the full unfiltered (and noisy) exception backtrace, print the cleaned backtrace using Rails's BacktraceCleaner.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] CI is passing.\r\n\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/46555/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 75187597,
        "label_ids": [
            123812746
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/46555.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/46555.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2177925782,
        "number": 51291,
        "title": "Empty embeds when RichText is set to an empty content",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-03-10T22:05:51Z",
        "updated_at": "2024-09-19T23:05:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fix #51269\r\n\r\nAction Text supports saving a RichText model with empty content. Passing _almost_ empty content (such as a space) flushes the embeds, but passing truly empty content does not. This defies expectations.\r\n\r\nThis change ensures that the embeds are flushed when empty content is passed\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51291/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1518299,
        "label_ids": [
            1180817762
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51291.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51291.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2202930057,
        "number": 51392,
        "title": "`ActiveRecord::Suppressor` not working on associations that are loaded via `inverse_of` on unsaved records",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 5,
        "created_at": "2024-03-22T17:00:08Z",
        "updated_at": "2024-09-19T21:42:07Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nThis issue comes from [this comment](https://github.com/rails/rails/pull/50284#issuecomment-2004506200), and started happening after #50284. @rafaelfranca confirmed this behaviour (outlined by @andrewyoo) is intended:\r\n\r\n```ruby\r\nLoading development environment (Rails 7.2.0.alpha)\r\numami(dev)> u = User.new\r\n=> \r\n#<User:0x000000012c399b30\r\n...\r\numami(dev)> s = Shift.new user: u\r\n=> #<Shift:0x0000000129e31d98 id: nil, user_id: nil>\r\numami(dev)> s.user\r\n=> \r\n#<User:0x000000012c399b30>\r\numami(dev)> u.shifts\r\n=> [#<Shift:0x0000000129e31d98 id: nil, user_id: nil>]\r\n```\r\n\r\nHowever, this has the side effect of breaking `ActiveRecord::Suppressor` if you happen to modify the association owner outside the suppression block. Here's a minimal reproduction script:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\nrequire \"debug\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nActiveRecord::Base.has_many_inversing = true\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :events, force: true do |t|\r\n    t.string :action, limit: 255\r\n    t.references :recording\r\n\r\n    t.timestamps\r\n  end\r\n\r\n  create_table :recordings, force: true do |t|\r\n    t.string :content\r\n\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Recording < ActiveRecord::Base\r\n  has_many :events, dependent: :destroy\r\n\r\n  after_create :track_created\r\n\r\n  def track_event(action)\r\n    Event.create! recording: self, action: action\r\n  end\r\n\r\n  def copy\r\n    transaction do\r\n      recording = Event.suppress { Recording.create!(content: content) }\r\n      recording.update!(updated_at: updated_at)\r\n      recording.track_event(:copied_copy)\r\n      track_event(:copied_original)\r\n    end\r\n  end\r\n\r\n  private\r\n    def track_created\r\n      track_event :created\r\n    end\r\nend\r\n\r\nclass Event < ActiveRecord::Base\r\n  belongs_to :recording, required: false\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_suppress_events_on_copies\r\n    recording = Recording.create!(content: \"original\")\r\n    assert_equal 1, Event.count\r\n\r\n    recording.copy\r\n\r\n    assert_equal 3, Event.count\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nUnless it's decided that this is now the expected behaviour for suppression as well, and needs to be documented, I'd expect the above test to pass. \r\n\r\nI think, ideally, we'd fix `ActiveRecord::Suppressor` to deal with this case: a record that was set but not saved while the model was suppressed shouldn't be saved afterwards indirectly via the association owner. \r\n\r\n### Actual behavior\r\nThe test fails with \r\n```\r\nFailure:\r\nBugTest#test_suppress_events_on_copies [test.rb:75]:\r\nExpected: 3\r\n  Actual: 4\r\n```\r\nbecause we added a `created` event to the copy when we save the original recording outside the `Event.suppress` block. \r\n\r\n### System configuration\r\n**Rails version**:  Rails version: `main` (7c68c52)\r\n**Ruby version**: 3.3.0 (though it should happen with any version).\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51392/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 813033,
        "label_ids": [],
        "reactions_total_count": 4,
        "reactions_plus1": 4,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2367165890,
        "number": 52187,
        "title": "Parallelized generator tests fail in race condition because destination is not worker aware",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-06-21T19:57:04Z",
        "updated_at": "2024-09-19T21:33:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nWrite generator tests and turn on parallel testing.\r\n\r\n Rails::Generators::TestCase expects a class level `destination` https://github.com/rails/rails/blob/main/railties/lib/rails/generators/testing/behavior.rb#L46 but inherits from ActiveSupport::TestCase so if parallel testing is on https://guides.rubyonrails.org/testing.html#parallel-testing-with-processes the test cases can race creating/destroying the directory \r\n\r\n### Expected behavior\r\nPer parallel executor destinations\r\n\r\nMy hack to get around this for now in the test case:\r\n\r\n```\r\n    def prepare_destination\r\n      self.destination_root = File.expand_path(\"../tmp\", __dir__) + \"-#{Process.pid}\"\r\n      super\r\n    end\r\n```\r\n\r\nMaybe destination should use the after fork hook like https://github.com/rails/rails/blob/main/activerecord/lib/active_record/test_databases.rb#L7 ?  Or maybe a cleaned up version of my workaround would suffice? \r\n\r\n### System configuration\r\n**Rails version**:\r\n7.1.8.4\r\n\r\n**Ruby version**:\r\n3.1.6",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52187/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 699616,
        "label_ids": [
            107195,
            12449438
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2520044020,
        "number": 52883,
        "title": "Kamal 2 compatible configuration",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-09-11T15:17:15Z",
        "updated_at": "2024-09-19T21:04:39Z",
        "closed_at": "2024-09-19T21:04:36Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Kamal 2 is bringing auto-SSL and multi-app deploys to the party. Along with other updates like simpler builders, aliases, and secrets. Update Rails 8 defaults to match.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52883/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 20,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 20,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52883.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52883.patch",
        "pull_request_merged_at": "2024-09-19T21:04:36Z"
    },
    {
        "id": 2535250360,
        "number": 52969,
        "title": "Ensure consistent sort order in `ActiveModel#serializable_hash` when using `only` option",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-19T04:20:05Z",
        "updated_at": "2024-09-19T20:59:12Z",
        "closed_at": "2024-09-19T18:28:42Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "This is a bit of a nitpick, but say you do this:\r\n\r\n```ruby\r\nuser.as_json(only: [:email, :name]).keys\r\n```\r\n\r\nThe result will depend on the order that the columns were added to your database (or in a test environment, the order of the columns in your `structure.sql`). ie. you might get `[\"email\", \"name\"]` or `[\"name\", \"email\"]`.\r\n\r\nIn the specific case that you've provided `only` you are being explicit about which fields should be returned, so we can also be explicit about the order that they are returned in. This PR implements that. Now it will always return fields based on the order they're provided to the `only` argument, so in this case it would always be `[\"email\", \"name\"]`.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52969/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 509837,
        "closed_by_id": 131752,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52969.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52969.patch",
        "pull_request_merged_at": "2024-09-19T18:28:41Z"
    },
    {
        "id": 2536630089,
        "number": 52977,
        "title": "Rewind IO stream before computing its checksum",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-19T15:03:23Z",
        "updated_at": "2024-09-19T20:08:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Background\r\n\r\nThe `ActiveStorage::Blob.create_and_upload!` method calculates a checksum of the IO stream it's given before storing it. Once the IO stream has been stored, it performs an integrity check by comparing the checksum it has calculated against the checksum of the stored object. If the two differ, it raises an `ActiveStorage::IntegrityError`.\r\n\r\nWhen the IO stream given to the method has been partially or fully consumed, the integrity check will systematically fail. That's because the checksum is not computed on the whole stream but the part that hasn't been consumed (which is typically empty if the stream has been fully consumed).\r\n\r\n### Solution\r\n\r\nI'm proposing to rewind the IO stream before computing its checksum.\r\n\r\n### Additional information\r\n\r\nMultiple people seem to have run into this issue: https://stackoverflow.com/questions/52335835/when-is-activestorageintegrityerror-raised\r\n\r\nAn alternative approach I considered was raising an error hinting the caller to rewind the stream but I can't see any downside of doing that on behalf of the caller, given that the `compute_checksum_in_chunks` method already rewinds the stream when it's done calculating the checksum.\r\n\r\n### Checklist\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message.\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52977/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 890117,
        "label_ids": [
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52977.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52977.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2529631524,
        "number": 52952,
        "title": "Add broadcast_to_list and stream_for_list to ActionCable API",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-16T22:51:19Z",
        "updated_at": "2024-09-19T20:03:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nI encountered a scenario where I needed to subscribe to multiple models (N models) because the UI on the client side renders a table where each row corresponds to a specific model. My backend can broadcast updates for any of these models in real-time.\r\n\r\nRather than creating N individual subscriptions (and subsequently N unsubscriptions), I propose a more efficient approach: a single subscription that can handle updates for a list of models. Executing N separate pub/sub operations risks performance bottlenecks, as threads may become locked due to mutex contention.\r\n\r\nTo implement this, we would need a mechanism that allows broadcasting to a shared channel representing multiple models. For example, if a subscriber is interested in models with IDs 5, 10, and 55, it should be possible to broadcast updates to this group without requiring each model to individually track or manage this association. Requiring ActionCable users to track such relationships on the backend would introduce unnecessary complexity and be inconsistent with the simplicity expected from the ActionCable API.\r\n\r\n### Detail\r\n\r\nThis pull request introduces multiple enhancements to the Action Cable API to support multi-model subscriptions:\r\n\r\n`stream_for_list(broadcasting_list, callback = nil, coder: nil, &block)` which has the same interface than `stream_for`, but it takes a list of models instead of a single model.\r\n\r\n`stop_stream_for_list(broadcasting_list)` which has the same interface than `stop_stream_for`, but it takes a list of models instead of a single model. \r\n\r\n`broadcast_to_list(model, message)` which has the same interface than `broadcast_to`, but it will broadcast the message to any broadcasting which includes model identifier.\r\n\r\nLet's take a full-stack example :\r\n\r\n- I have a `PostChannel` and a `Comment` model, and a clients want to subscribe to every `Comment` in my database. I execute `stream_for_list(Comment.all)` in `PostChannel` which executes only one subscription\r\n- If I want to broadcast `Comment.find(5)` to this client, I can execute `PostChannel.broadcast_to_list(Comment.find(5), \"updated!\")`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52952/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 34269296,
        "label_ids": [
            150377,
            300028327
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52952.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52952.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1557023753,
        "number": 47140,
        "title": "Given a String sanitize_sql_for_order Sill Requires Calling `Arel.sql` on Its Return Value",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-01-25T17:26:15Z",
        "updated_at": "2024-09-19T19:40:47Z",
        "closed_at": "2023-01-25T18:20:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```rb\r\nModel.order(sanitize_sql_for_order(q))\r\n```\r\n\r\n### Expected behavior\r\n\r\n`sanitize_sql_for_order` should call `Arel.sql` when given a `String` like it does in [the other case](https://github.com/rails/rails/blob/f0c5e60aed8bdce96c385cad05b1e34d7d757038/activerecord/lib/active_record/sanitization.rb#L75). \r\n\r\n### Actual behavior\r\n\r\nResults in an `ActiveRecord::UnknownAttributeReference` error. \r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/47140/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 17570,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2537021750,
        "number": 52980,
        "title": "Display list of Rails development tools",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-19T17:52:12Z",
        "updated_at": "2024-09-19T19:40:44Z",
        "closed_at": "2024-09-19T19:40:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nRails includes a number of tools to help development but there is no single page that lists them. These tools include:\r\n\r\n- Routes (/rails/info/routes)\r\n   - Instead of going to the routes page I personally just enter a garbage URL that brings me to the \"Routing Error\" page that also includes the routes.\r\n- Notes (/rails/info/notes) \r\n   - After more than a decade of using Rails I never knew that this useful tool existed. \r\n- Properties (/rails/info/properties)\r\n   - Never knew this existed either.\r\n- Preview Mailers (/rails/mailers/)\r\n   - Always ended up looking in the Rails Guides to find this path. \r\n\r\nIt would be handy for developers, especially new developers, if there was a single page that listed these tools. \r\n\r\nThe \"/rails\" path is not currently being used and is simple to remember. The path is only available when the application is in development mode like the tools listed above.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52980/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1769416,
        "closed_by_id": 2741,
        "label_ids": [
            107195,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52980.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52980.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2344500235,
        "number": 52081,
        "title": "HasMany/HasOne associations: combining `:through` and a scope including a `.merge` leads to missing table",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-10T17:48:30Z",
        "updated_at": "2024-09-19T19:34:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\", \"~> 1.4\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :lineups, force: true do |t|\r\n  end\r\n\r\n  create_table :arena_requests, force: true do |t|\r\n    t.integer :lineup_id\r\n  end\r\n\r\n  create_table :challengers, force: true do |t|\r\n    t.integer :lineup_id\r\n    t.integer :challenge_id\r\n  end\r\n\r\n  create_table :challenges, force: true do |t|\r\n    t.boolean :arena\r\n  end\r\nend\r\n\r\nclass Lineup < ActiveRecord::Base\r\n  has_many :challengers\r\n\r\n  has_many :arena_challengers, -> { arena }, class_name: 'Challenger'  # works\r\n  has_one :arena_challenger, -> { arena }, class_name: 'Challenger'  # works\r\n\r\n  has_many :arena_challengers_no_merge, -> { arena_no_merge }, class_name: 'Challenger' \r\n  has_one :arena_challenger_no_merge, -> { arena_no_merge }, class_name: 'Challenger' \r\nend\r\n\r\nclass Challenger < ActiveRecord::Base\r\n  belongs_to :lineup, optional: true\r\n  belongs_to :challenge\r\n\r\n  scope :arena, -> { joins(:challenge).merge(Challenge.arena) }\r\n  scope :arena_no_merge, -> { joins(:challenge).where(challenges: { arena: true }) }\r\nend\r\n\r\nclass Challenge < ActiveRecord::Base\r\n  has_many :challengers\r\n\r\n  scope :arena, -> { where(arena: true) }\r\nend\r\n\r\n# ArenaRequest -> Lineup -> Challengers (+ join Challenges)\r\nclass ArenaRequest < ActiveRecord::Base\r\n  belongs_to :lineup\r\n\r\n  has_many :arena_challengers, through: :lineup, source: :arena_challengers # fails\r\n  has_one :arena_challenger, through: :lineup # fails\r\n\r\n  has_many :arena_challengers_no_merge, through: :lineup, source: :arena_challengers_no_merge # works\r\n  has_one :arena_challenger_no_merge, through: :lineup # works\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n\r\n  ### Raise error with merge ### \r\n\r\n  def test_has_many_through_with_scope_merge\r\n    lineup = Lineup.create!\r\n    arena_request = ArenaRequest.create!(lineup:)\r\n    challenge = Challenge.create!(arena: true)\r\n    challenger = Challenger.create!(lineup:, challenge:)\r\n\r\n    assert_equal [challenger], arena_request.arena_challengers\r\n  end\r\n\r\n  def test_has_one_through_with_scope_merge\r\n    lineup = Lineup.create!\r\n    arena_request = ArenaRequest.create!(lineup:)\r\n    challenge = Challenge.create!(arena: true)\r\n    challenger = Challenger.create!(lineup:, challenge:)\r\n\r\n    assert_equal challenger, arena_request.arena_challenger\r\n  end\r\n\r\n  ### Works without merge ### \r\n\r\n  def test_has_many_through_with_scope_no_merge\r\n    lineup = Lineup.create!\r\n    arena_request = ArenaRequest.create!(lineup:)\r\n    challenge = Challenge.create!(arena: true)\r\n    challenger = Challenger.create!(lineup:, challenge:)\r\n\r\n    assert_equal [challenger], arena_request.arena_challengers_no_merge\r\n  end\r\n\r\n  def test_has_one_through_with_scope_no_merge\r\n    lineup = Lineup.create!\r\n    arena_request = ArenaRequest.create!(lineup:)\r\n    challenge = Challenge.create!(arena: true)\r\n    challenger = Challenger.create!(lineup:, challenge:)\r\n\r\n    assert_equal challenger, arena_request.arena_challenger_no_merge\r\n  end\r\n\r\n  ### Works without through ### \r\n\r\n  def test_has_many_with_scope_merge\r\n    lineup = Lineup.create!\r\n    challenge = Challenge.create!(arena: true)\r\n    challenger = Challenger.create!(lineup:, challenge:)\r\n\r\n    assert_equal [challenger], lineup.arena_challengers\r\n  end\r\n\r\n  def test_has_one_with_scope_merge\r\n    lineup = Lineup.create!\r\n    challenge = Challenge.create!(arena: true)\r\n    challenger = Challenger.create!(lineup:, challenge:)\r\n\r\n    assert_equal challenger, lineup.arena_challenger\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nDeclaring a has_many/has_one with a through option should not raise an error if the association uses a scope based on a merge.\r\n\r\n### Actual behavior\r\nIt fails to include the table joined and on which the merge is applied, raising a \"SQLException: no such column\"\r\n\r\nIt works if:\r\n* the `.merge` is replaced by a `.where`\r\n* the association is not defined with a `:through`\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.4\r\n\r\n**Ruby version**: 3.2.0\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52081/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "user_id": 5188983,
        "closed_by_id": 28418009,
        "label_ids": [
            41328116
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 1
    },
    {
        "id": 2535204293,
        "number": 52968,
        "title": "Mapping column manually like type/class to c_type/c_class",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-19T03:38:39Z",
        "updated_at": "2024-09-19T19:29:47Z",
        "closed_at": "2024-09-19T18:11:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "How can i map the the class column to smth like c_class?\r\n```ruby\r\n#  class                          :integer          default(0), unsigned, not null\r\n```\r\n\r\nI tried adding \r\n\r\n```ruby\r\nself.ignored_columns = %w[class]\r\n```\r\n\r\nbut then I cannot read/write it anymore.\r\n\r\nI cannot change the column name, because it's used by the azerothcore server\r\n\r\nhttps://github.com/sebyx07/rails-on-azerothcore/blob/main/app/models/characters/character.rb#L16\r\n\r\nIf there isn't support I can look more into and make a PR for `alias_attribute` or `map_attribute`(new) to support any kind of combination",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52968/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 5052549,
        "closed_by_id": 5657035,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2535923985,
        "number": 52972,
        "title": "Optimize AR uniqueness validator class hierarchy lookup",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-19T10:24:49Z",
        "updated_at": "2024-09-19T18:18:35Z",
        "closed_at": "2024-09-19T18:06:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Avoid maintaining an Array with hierarchy classes in memory. Use a loop with 2 local variables instead.\r\nUpdated method comment accordingly.\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because  AR `uniqueness` validator performance can be improved.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `AR::Validations::UniquenessValidator#find_finder_class_for` private method.\r\n\r\n### Additional information\r\n\r\nhttps://gist.github.com/bogdan/a0e13a4d9393462ed7ce2c0b6ceb4568\r\n\r\n```\r\nRehearsal ---------------------------------------\r\nOld   0.186911   0.009178   0.196089 (  0.208730)\r\nNew   0.068379   0.005153   0.073532 (  0.079435)\r\n------------------------------ total: 0.269621sec\r\n\r\n          user     system      total        real\r\nOld   0.093931   0.004764   0.098695 (  0.105592)\r\nNew   0.062388   0.003181   0.065569 (  0.070396)\r\nRun options: --seed 58923\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52972/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 122436,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52972.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52972.patch",
        "pull_request_merged_at": "2024-09-19T18:06:31Z"
    },
    {
        "id": 2536424342,
        "number": 52974,
        "title": "docs: add one sentence reason for having accelerated sendfile",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-19T13:53:43Z",
        "updated_at": "2024-09-19T18:14:29Z",
        "closed_at": "2024-09-19T18:14:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nWhile reading https://guides.rubyonrails.org/api_app.html I was confused about accelerated sendfile part. From description I started to wrongly suspect it's a http feature and will send files faster. Perhaps adding this one sentence can help describing how does it work and reason to use it.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds one sentence describing reason to use accelerated sendfinle\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52974/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5403694,
        "closed_by_id": 12642,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52974.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52974.patch",
        "pull_request_merged_at": "2024-09-19T18:14:29Z"
    },
    {
        "id": 2536454567,
        "number": 52976,
        "title": "docs: update jQuery ajax to fetch in api app guide",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-19T14:05:33Z",
        "updated_at": "2024-09-19T18:10:32Z",
        "closed_at": "2024-09-19T18:10:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nWhile reading https://guides.rubyonrails.org/api_app.html I spotted jQuery ajax call, that can be done without any library in current days.\r\n\r\n### Detail\r\n\r\nThis Pull Request updates jQuery example with fetch api\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52976/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5403694,
        "closed_by_id": 12642,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52976.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52976.patch",
        "pull_request_merged_at": "2024-09-19T18:10:32Z"
    },
    {
        "id": 2536449253,
        "number": 52975,
        "title": "Updated `rails_info_controller_test.rb` test so it tests correctly",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-19T14:03:23Z",
        "updated_at": "2024-09-19T18:06:34Z",
        "closed_at": "2024-09-19T18:04:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThere are two tests in `railties/test/rails_info_controller_test.rb` that perform the same test: \r\n\r\n```ruby\r\n  test \"info controller allows requests when all requests are considered local\" do\r\n    get :properties\r\n    assert_response :success\r\n  end\r\n\r\n  test \"info controller allows local requests\" do\r\n    get :properties\r\n    assert_response :success\r\n  end\r\n```\r\n\r\nThis PR updates the `info controller allows requests when all requests are considered local` test so that it tests the scenario described.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52975/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1769416,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52975.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52975.patch",
        "pull_request_merged_at": "2024-09-19T18:04:34Z"
    },
    {
        "id": 1589523404,
        "number": 47422,
        "title": "Stop serializing columns as YAML by default",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-02-17T15:18:42Z",
        "updated_at": "2024-09-19T17:39:16Z",
        "closed_at": "2023-02-24T08:52:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Followup: https://github.com/rails/rails/pull/47463\r\n\r\nYAML is great for configuration and such, but for serializing arbitrary data it has many problem, both in term of performance and efficiency but also in term of security.\r\n\r\nAs such, we shouldn't let it be the default.\r\n\r\nThe open question is wether we should provide another default, or just let users chose what they want based on their own tradeoffs.\r\n\r\nMany people would probably suggest JSON as the new default, unfortunately I don't think it's a good fit either because the parsers available in Ruby have some wonky behaviors:\r\n\r\n```ruby\r\n>> ActiveSupport::JSON.decode(ActiveSupport::JSON.encode(Object.new))\r\n=> {}\r\n>> JSON.load(JSON.dump(Object.new))\r\n=> \"#<Object:0x000000012b61a068>\"\r\n```\r\n\r\nIf we were to select another default, I beleive it would need several properties:\r\n\r\n  - It should only serialized a safe list of primitive types.\r\n  - It should explictly raise if attempting to serialize complex types.\r\n\r\nNB: I have quite a lot of documentation to update, but making sure CI passes first.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/47422/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19192189,
        "closed_by_id": 44640,
        "label_ids": [
            107191,
            107195,
            150377,
            1180817762
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/47422.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/47422.patch",
        "pull_request_merged_at": "2023-02-24T08:52:14Z"
    },
    {
        "id": 2534687094,
        "number": 52966,
        "title": "Render rdoc code example for routing `defaults` method [ci skip]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-18T20:40:01Z",
        "updated_at": "2024-09-19T13:41:06Z",
        "closed_at": "2024-09-19T04:07:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I suspect we actually want this example code to be rendered as code by rdoc, and yet due to the lack of a newline, that is not what is happening.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes a code comment by adding an extra blank line.\r\n\r\n### Additional information\r\n\r\nBefore:\r\n\r\n<img width=\"1076\" alt=\"Screenshot 2024-09-18 at 16 38 13\" src=\"https://github.com/user-attachments/assets/ba5e2e93-db9a-4353-a469-d788c5f36a17\">\r\n\r\nAfter:\r\n\r\n<img width=\"807\" alt=\"Screenshot 2024-09-18 at 16 38 26\" src=\"https://github.com/user-attachments/assets/ff55bc7d-1ee1-4f80-a3b3-dd5f447b3e6b\">\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52966/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 225,
        "closed_by_id": 12642,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52966.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52966.patch",
        "pull_request_merged_at": "2024-09-19T04:07:35Z"
    },
    {
        "id": 2501351447,
        "number": 52773,
        "title": "Allow drop_table to accept an array of table names",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2024-09-02T17:06:05Z",
        "updated_at": "2024-09-19T12:33:25Z",
        "closed_at": "2024-09-17T01:19:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because I want to drop more than one table at the same time by using Ruby and Rails instead of raw SQL.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds support to multiple tables on `drop_table` on ActiveRecord.\r\n\r\n### Additional information\r\n\r\nThis will ensure that the caching is also cleared which doesn't happen if you do manually like this:\r\n\r\n```ruby\r\nActiveRecord::Base.connection.execute 'DROP TABLE a, b, c'\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52773/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 26460,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 4,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 3,
        "reactions_rocket": 1,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52773.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52773.patch",
        "pull_request_merged_at": "2024-09-17T01:19:51Z"
    },
    {
        "id": 2534689660,
        "number": 52967,
        "title": "Update ActionDispatch::SSL documentation",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-18T20:41:35Z",
        "updated_at": "2024-09-19T12:32:56Z",
        "closed_at": "2024-09-19T04:05:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because we have the `/up` native on Rails these days and also suggesting to use regexp might lead to a bad decision of using:\r\n\r\n```\r\nconfig.ssl_options = { redirect: { exclude: -> request { /up/.match?(request.path) } } }\r\n```\r\n\r\nWhich would make the app vulnerable to non-SSL at paths like `/uploads`.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the documentation to use raw string comparison and the native `/up` endpoint.\r\n\r\n### Additional information\r\n\r\nN/A\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [*] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [*] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [*] Tests are added or updated if you fix a bug or add a feature.\r\n* [*] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52967/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 26460,
        "closed_by_id": 12642,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52967.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52967.patch",
        "pull_request_merged_at": "2024-09-19T04:05:33Z"
    },
    {
        "id": 2535666975,
        "number": 52971,
        "title": "Allow for configurable active strorage blob keys to use prefix",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-19T08:33:57Z",
        "updated_at": "2024-09-19T09:42:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nWe use rails with multiple tenants and wanted a way to segregate stored files within a bucket by tenant id. This pull requests adds a global configuration option that allows to set this prefix on active storage blob key model:\r\n```ruby\r\n# Can be a string or a block\r\nRails.application.configure.active_storage.key_prefix = \"tenant/\"\r\n```\r\nThis generates following blob key: `tenant/mh9n0fker6q7k0qjd2ctgc42n2mo`\r\n\r\nOn some s3 providers, a prefix separated with `/` is treated like a folder\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52971/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1148165,
        "label_ids": [
            150377,
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52971.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52971.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2535627068,
        "number": 52970,
        "title": "Fix: Replace static tables names in ActiveStorage db migrations",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-19T08:18:18Z",
        "updated_at": "2024-09-19T08:44:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThe db migrations for ActiveStorage use static plural table names. If Rails runs with `config.active_record.pluralize_table_names = false`, this leads to an error as soon as ActiveStorage tries to access the DB.\r\n\r\n### Detail\r\n\r\nThe static strings for the table names in the migrations are replaced by the `table_name` method of the corresponding model class. This ensures that the tables are named correctly in plural or singular respectively.\r\n\r\n### Additional information\r\n\r\nEarlier versions (prior to Rails 7.1) are not affected by this issue. However, as soon as a project is updated, the tables must be renamed with a separate database migration.\r\n\r\n### Checklist\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52970/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 8604410,
        "label_ids": [
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52970.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52970.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2533065918,
        "number": 52963,
        "title": "Loosen time assertions",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-18T08:26:56Z",
        "updated_at": "2024-09-19T05:57:26Z",
        "closed_at": "2024-09-19T05:57:26Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "The time it takes to come back from sleep can be quite variable, but we can guarantee that it is _at least_ that long. On my mac the previous test assertions almost always failed.\r\n\r\nI loosened this from a 0.5 millisecond buffer to a 10 millisecond buffer, it's possible that isn't even enough on some platforms.\r\n\r\nI also shortened the sleep duration from 100ms each to 10ms, to make our test suite faster.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52963/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 131752,
        "closed_by_id": 131752,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52963.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52963.patch",
        "pull_request_merged_at": "2024-09-19T05:57:26Z"
    },
    {
        "id": 2533454295,
        "number": 52964,
        "title": "Remove QueAdapter autoload from AJ::QueueAdapters",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-18T11:19:23Z",
        "updated_at": "2024-09-19T04:34:43Z",
        "closed_at": "2024-09-19T04:08:59Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "QueAdapter was removed in #46005, therefore we no longer need this autoload.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52964/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "closed_by_id": 12642,
        "label_ids": [
            123812746
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52964.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52964.patch",
        "pull_request_merged_at": "2024-09-19T04:08:59Z"
    },
    {
        "id": 2431458145,
        "number": 52423,
        "title": "[ci-skip][Docs][retry] Add description for CTE to querying guide",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-07-26T05:34:11Z",
        "updated_at": "2024-09-19T02:39:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because the current querying guide has no entries for CTE and the link to `with` method.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds the entry for CTE.\r\n\r\nNote that this PR is a retry of https://github.com/rails/rails/pull/49630, including the following updates:\r\n\r\n- Changed the code examples from `Post` and `Comment` models to `Book` and `Review` to be consistent with https://github.com/rails/rails/pull/39406\r\n- Added the minimum version of SQLite to work with CTE\r\n- Revised some English sentences with a little help of Claude 3.5 Sonnet\r\n\r\nThe SQL queries in this PR were actually generated using a local Rails application running Rails 7.1.3.4 and Ruby 3.3.4.\r\n\r\ncc @zzak \r\n\r\n### Additional information\r\n\r\nref: https://github.com/rails/rails/pull/37944\r\nref: https://github.com/rails/rails/pull/46843\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52423/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 4289625,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52423.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52423.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2531655052,
        "number": 52958,
        "title": "Add active_storage_direct_uploads_controller load hook",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-17T17:04:43Z",
        "updated_at": "2024-09-19T00:07:45Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nReference https://github.com/rails/rails/issues/34961\r\n\r\nAllows users to restrict direct uploads with their own authentication and/or rate limiting.\r\n\r\n```ruby\r\nActiveSupport.on_load :active_storage_direct_uploads_controller do\r\n  before_action :authenticate_user!\r\n  rate_limit to: 10, within: 3.minutes\r\nend\r\n```\r\n\r\n### Additional information\r\n\r\n@slimgee suggested using class_eval to extend the `DirectUploadsController` class, like this:\r\n\r\n```ruby\r\n# config/initializers/active_storage.rb\r\nRails.application.config.to_prepare do\r\n  ActiveStorage::DirectUploadsController.class_eval do\r\n    before_action :authenticate_user!\r\n    rate_limit to: 20, within: 20.minutes, by: -> { current_user.id }\r\n  end\r\nend\r\n```\r\n\r\nHowever, we took this approach because this is the most flexible approach for Rails applications and there is also precedence of using load_hooks in Active Storage.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52958/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 7331511,
        "label_ids": [
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52958.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52958.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1779265516,
        "number": 48601,
        "title": "Test Fixture Not Decrypting Properly with store_accessor",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-28T16:07:31Z",
        "updated_at": "2024-09-18T21:18:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n1. Create new rails app with postgresql as db\r\n2. Add jsonb field to model via migration with name `settings`\r\n3. Add store_accessor to model\r\n4. encrypt store_accessor field with `encrypts` \r\n5. Add encryption keys to envs as per [docs](https://guides.rubyonrails.org/active_record_encryption.html#setup)\r\n6. Add `config.active_record.encryption.encrypt_fixtures = true` to `test.rb`\r\n7. Add data to test fixture (posts.yml) with the field that needs to be encrypted\r\n8. Write test to obtain test fixture and ensure it is being encrypted/decrypted properly\r\n9. Test fails with `Minitest::UnexpectedError: ActiveRecord::Encryption::Errors::Decryption: ActiveRecord::Encryption::Errors::Decryption`\r\n\r\n### Executable Test Case\r\nYou will also need a value in the `posts.yml` file as such: \r\n```yml\r\none:\r\n  name: Hello World\r\n  settings:\r\n    public_key: \"some-fake-public-key\"\r\n```\r\n\r\nTest Case\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"postgresql\", database: \"jsonb-test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nActiveRecord::Encryption.configure \\\r\n      primary_key: \"nYlllafgBdhQ7Vn37dlWAoqfDbTPl4Fl\",\r\n      deterministic_key: \"CK7x2oUEeu06bKehhKGiKYAHoytPaOPg\",\r\n      key_derivation_salt: \"Fol1dR03ZXnL8k4hEUYj7IMr0UlgOMHC\"\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.jsonb :settings\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n\r\n  store_accessor :settings, [:public_key], suffix: :setting\r\n  encrypts :settings\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = posts(:one)\r\n    assert_equal \"some-fake-public-key\", post.public_key_setting\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\nThe test should be able to store the value for the fixture, encrypted and then it should be able to retrieve it and decrypt it.\r\n\r\n### Actual behavior\r\nTest fails with error: `Minitest::UnexpectedError: ActiveRecord::Encryption::Errors::Decryption: ActiveRecord::Encryption::Errors::Decryption`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.5.1\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48601/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 91827,
        "label_ids": [
            107191,
            126910270,
            5511275119
        ],
        "reactions_total_count": 5,
        "reactions_plus1": 5,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2520768025,
        "number": 52888,
        "title": "Can't rollback if migration contains `add_reference` when foreign_key.to_table uses schema path",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-11T21:03:35Z",
        "updated_at": "2024-09-18T18:56:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I ran into an issue where migrations containing references to tables that are using a schema path (e.g. `my_schema.my_table`) are not able to be rolled back, because Rails cannot find the association, even though it exists.\r\n\r\nThis seems to only occur when the referenced table has a schema path - in the below example, if you update the table name from `test.users` to `:users` where applicable, the rollback occurs with no issues.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create new Rails project with postgres as db adapter\r\n2. add `schema_search_path: \"public,test\"` to database.yml configuration\r\n3. Add the following migrations:\r\n\r\n```ruby\r\n# 20240911180934_create_test_schema_and_tables.rb\r\n\r\nclass CreateTestSchemaAndTables < ActiveRecord::Migration[7.1]\r\n  def up\r\n    execute \"CREATE SCHEMA IF NOT EXISTS test;\"\r\n\r\n\r\n    create_table 'test.users' do |t|\r\n      t.timestamps\r\n    end\r\n\r\n    create_table :orders do |t|\r\n      t.timestamps\r\n    end\r\n  end\r\n\r\n  def down\r\n    execute \"DROP SCHEMA IF EXISTS test;\"\r\n  end\r\nend\r\n```\r\n\r\n```ruby\r\n# 20240911200634_add_reference.rb\r\n\r\nclass AddReference < ActiveRecord::Migration[7.1]\r\n  def change\r\n    add_reference :orders,\r\n              :user,\r\n              null: false,\r\n              foreign_key: { to_table: 'test.users' },\r\n              index: true\r\n  end\r\nend\r\n```\r\n4. `rails db:create; rails db:migrate; rails db:rollback STEP=1`\r\n5. Observe the following error:\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n### Expected behavior\r\n\r\nMigration should be rolled back.\r\n\r\n### Actual behavior\r\n\r\nMigration fails, with the following error:\r\n\r\n```sh\r\nArgumentError: Table 'orders' has no foreign key for test.users (ArgumentError)\r\n\r\n            raise(ArgumentError, \"Table '#{from_table}' has no foreign key for #{to_table || options}\")\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\n\r\n7.1.4\r\n\r\n**Ruby version**:\r\n\r\nruby 3.2.3 (2024-01-18 revision 52bb2ac0a6) [arm64-darwin23]\r\n\r\n**Postgres version**:\r\n\r\n13.16",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52888/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 16829413,
        "label_ids": [
            107191,
            70310659,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2527341658,
        "number": 52942,
        "title": "[Bug][Railties] Generating scaffold don't apply tailwindcss template if rails new command with '--css=tailwind --javascript=esbuild'",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-16T01:35:14Z",
        "updated_at": "2024-09-18T15:35:08Z",
        "closed_at": "2024-09-18T15:35:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nI created new rails application with `--css=tailwind --javascript=esbuild` command line options. Then I run `bin/rails generate scaffold Diary written_on:date:uniq content:string`. After that, it created *.html without tailwindcss's classes.\r\n\r\napp/views/diaries/index.html.erb:\r\n```html\r\n<p style=\"color: green\"><%= notice %></p>\r\n\r\n<% content_for :title, \"Diaries\" %>\r\n\r\n<h1>Diaries</h1>\r\n\r\n<div id=\"diaries\">\r\n  <% @diaries.each do |diary| %>\r\n    <%= render diary %>\r\n    <p>\r\n      <%= link_to \"Show this diary\", diary %>\r\n    </p>\r\n  <% end %>\r\n</div>\r\n\r\n<%= link_to \"New diary\", new_diary_path %>\r\n```\r\n\r\nBecause generated Gemfile miss `tailwindcss-rails` gem.\r\n\r\nRelated codes are here:\r\nhttps://github.com/rails/rails/blob/ac4dfd23d6f046ff522eca655a02557de3fa5b18/railties/lib/rails/generators/app_base.rb#L613-L619\r\n\r\nThis is my fix.\r\n\r\n```ruby\r\n      def css_gemfile_entry\r\n        return if options[:api]\r\n        return unless options[:css]\r\n\r\n        if !using_js_runtime? && options[:css] == \"sass\"\r\n          return GemfileEntry.floats \"dartsass-rails\", \"Use Dart SASS [https://github.com/rails/dartsass-rails]\"\r\n        else\r\n\r\n        gemfile_entries = []\r\n        if using_js_runtime? || options[:css] != \"tailwind\"\r\n          gemfile_entries <<  GemfileEntry.floats \"cssbundling-rails\", \"Bundle and process CSS [https://github.com/rails/cssbundling-rails]\"\r\n        end\r\n        if options[:css] == \"tailwind\"\r\n          gemfile_entries << GemfileEntry.floats \"tailwindcss-rails\", \"Use Tailwind CSS [https://github.com/rails/tailwindcss-rails]\"\r\n        end\r\n        gemfile_entries\r\n      end\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\n- new rails application with `--css=tailwind --javascript=esbuild` command line options\r\n- run `bin/rails generate scaffold Diary written_on:date:uniq content:string`\r\n- generated *.html **with** tailwindcss's classes\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\n- new rails application with `--css=tailwind --javascript=esbuild` command line options\r\n- run `bin/rails generate scaffold Diary written_on:date:uniq content:string`\r\n- generated *.html **without** tailwindcss's classes\r\n\r\nworkaround:\r\n\r\nAfter rails new, run below command.\r\n\r\n```bash\r\nbin/bundle add tailwindcss-rails\r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.2.1\r\n\r\n**Ruby version**:\r\n3.3.5\r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52942/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 52317,
        "closed_by_id": 8207,
        "label_ids": [
            1071962662
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2533466532,
        "number": 52965,
        "title": "Errors reported when ActionMailer emails are sent via ActiveJob do not filter mailer params, potentially leak sensitive data",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2024-09-18T11:25:22Z",
        "updated_at": "2024-09-18T15:25:44Z",
        "closed_at": "2024-09-18T15:25:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "When ActiveJob fails trying to send an ActionMailer email it does not filter mailer params, potentially leaking sensitive data.\r\n\r\n### Steps to reproduce\r\n\r\nFor example:\r\n\r\n```ruby\r\n\r\nRails.application.config.filter_parameters = [\"email_address\"]\r\n\r\nclass ExampleMailer < ActionMailer::Base\r\n  default to: -> { params.fetch(:email_address) }\r\n\r\n  def hello\r\n    @message = \"Hello, world\"\r\n\r\n    mail from: \"test@example.com\"\r\n    raise \"hell\"\r\n  end\r\nend\r\n\r\nExampleMailer.with(email_address: 'recipient@example.com').hello.deliver_later\r\n```\r\n\r\nThe reported error will include the params from the email unfiltered in the serialised params, even with `\"email_address\"` configured in `Rails.application.config.filter_parameters`.\r\n\r\n### Expected behavior\r\n\r\nThe same parameter filtering applied to web requests should also be applied to serialised mailer params.\r\n\r\n### Actual behavior\r\n\r\nThe params from the mailer are included unfiltered in the reported parameters from the job:\r\n\r\n```ruby\r\n[\r\n  \"ExampleMailer\",\r\n  \"hello\",\r\n  \"deliver_now\",\r\n  {\r\n    \"_aj_ruby2_keywords\": [\r\n      \"params\",\r\n      \"args\"\r\n    ],\r\n    \"args\": [],\r\n    \"params\": {\r\n      \"_aj_symbol_keys\": [\r\n        \"email_address\",\r\n      ],\r\n      \"email_address\": \"recipient@example.com\"\r\n    }\r\n  }\r\n]\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52965/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 3687,
        "closed_by_id": 3687,
        "label_ids": [
            123812746
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2528606420,
        "number": 52946,
        "title": "Can't use ActiveRecord::Base.connection to check the existence of the DB  in Rails 7.2.1",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-16T14:13:48Z",
        "updated_at": "2024-09-18T13:43:24Z",
        "closed_at": "2024-09-16T21:54:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi all!\r\nI have a problem when checking the DB existence after upgrading to Rails 7.2.1.\r\nWith Rails 7.1.3.4, I had this method to check if the DB exists:\r\n\r\n```\r\ndef self.database_exists?\r\n    ActiveRecord::Base.connection\r\n  rescue ActiveRecord::NoDatabaseError\r\n    false\r\n  else\r\n    true\r\nend\r\n```\r\n\r\nAfter the update, whether the DB exists or not, with `ActiveRecord::Base.connection` I got this output:\r\n\r\n`#<ActiveRecord::ConnectionAdapters::Mysql2Adapter:0x00000000021e80 env_name=\"test\" role=:writing>`\r\n\r\nAt the moment, I run that check with a raw query, which I would like to avoid:\r\n\r\n```\r\ndef self.database_exists?\r\n    ActiveRecord::Base.connection.execute(\"SHOW DATABASES\").any?\r\n  rescue ActiveRecord::NoDatabaseError\r\n    false\r\nend  \r\n```\r\n\r\nWhat method should I use to emulate my old behavior in Rails 7.2.1?\r\n\r\nThanks!\r\n\r\n### System configuration\r\n**Rails version**: 3.3.4\r\n\r\n**Ruby version**: 7.2.1\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52946/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 47932570,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2520242925,
        "number": 52885,
        "title": "[RF-DOCS] Update Rails Error Reporting Guide [ci skip] ",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-11T16:48:39Z",
        "updated_at": "2024-09-18T10:08:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis PR updates the [Rails Error Reporting guide](https://guides.rubyonrails.org/error_reporting.html).\r\n\r\n### Additional information\r\n\r\n- 'For Libraries' is made into a top section and renamed 'Error-reporting Libraries'\r\n- Various important paragraphs are reformatted into notes.\r\n- To aid understanding for beginners, links are added when various concepts are referenced e.g. 'railties', 'jobs' etc.\r\n- Sections are added on unexpected, unsubscribe and disable.\r\n- Various wording tweaks are made for improved readability and easier understanding.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52885/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 73295547,
        "label_ids": [
            150377,
            6434393529
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52885.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52885.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2228096494,
        "number": 51499,
        "title": "[ci skip] Improve accessibility",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 32,
        "created_at": "2024-04-05T13:53:30Z",
        "updated_at": "2024-09-18T09:54:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nAs requested by @AmandaPerino, this PR aims to improve the accessibility of the guides. It continues on the work in #51341 #51372 #51385 and #51444. It also addresses whatever wasn't addressed from https://github.com/rails/rails/pull/51341#issuecomment-2007717282.\r\n\r\n### Detail\r\n\r\nEach commit in the PR has a descriptive title and often a message why the change was made, which I recommend we keep when merging instead of squashing it. Screenshots are listed below. A few of the commits that introduce fixes or features are listed here:\r\n\r\n* [Add label and accessible content](https://github.com/rails/rails/commit/4f2b25ba54d82bc897fb33f681214f5bf05cb0bd) \r\n  \r\n  Having a select element without a label outside a form isn't directly problematic, but the text Version is the label of the select and should act as such.\r\n\r\n  Because the select element is set up to browse to a different page which loses the current focus position, users must be instructed about this context change. It would be much better to display this content to everyone, but having this for screenreaders only is better than not having it at all.\r\n\r\n* [Fix accessible text for voice commands](https://github.com/rails/rails/commit/1863e5590cecac6ecfd0c4c031f1c4c967d0d768) \r\n  \r\n  Using the title attribute means some screenreaders will not be able to show the expanded accessible text at all, but using aria-label loses the hover text currently available.\r\n\r\n  If the title attribute is still used, the accessible label should start with the same content as the visible label. This is necessary for most voice operated tooling which only match starting text.\r\n\r\n  Having \"Return\" as the start of the accessible label and \"Guides\" as the start of the visible label means in most cases users that rely on voice commands will not be able to browse here.\r\n\r\n* [Add landmarks to all guide pages](https://github.com/rails/rails/commit/9669f4be012f34488d52e16d0b6e40a11399e414) \r\n  \r\n  Landmarks such as header, section, footer, article, and the main content landmark help navigating when using assistive tooling.\r\n\r\n  Since each guide is a self-contained article, a header section with the guide introduction and navigation, a footer section which is not part of the content but a call to action, and the rest can be clearly separated, landmarks here are appropriate.\r\n\r\n* [Make back-to-top work without JavaScript](https://github.com/rails/rails/commit/b33278c01384a7612d0adf2270456718181b5acb) \r\n\r\n  By doing feature detection on animation timeline CSS, the graceful degradation can take care of the visibility of the back-to-top button. In case no JavaScript is available, it should always be shown.\r\n\r\n* [Enable back-to-top without JavaScript](https://github.com/rails/rails/commit/430f27c959f0df30b6baeea3d688d8fa5448f842) \r\n\r\n  And add an accessible label to the button. It would be better to just show the text back to top underneath the arrow, but this change is again better than not having it at all.\r\n\r\n* [Consistent scrolling behaviour respecting pref](https://github.com/rails/rails/commit/f2ae0318736a286a13d896cad8527bd2d1443c50) \r\n\r\n  Use the preference to detect if a user wants reduced motion and if not enable smooth scrolling. This takes care of the back-to-top smooth scrolling, and also adds it to anchor links. If this is unwanted, the change can be reverted and a matchmedia check should be done in JavaScript instead before smooth scrolling\r\n\r\n* [Add skip links to quickly navigate past navs](https://github.com/rails/rails/commit/653b292ac26b2df59ebeb44fc9415ebc8130243b) \r\n  \r\n  Skip links are a common practice to allow keyboard and other users to skip past large blocks of content that are present on every page, which in this case are the secondary navigation at the top,\r\nthe version selector, and the chapter navigation.\r\n\r\n  The skip links only show when focused.\r\n\r\n* [Wrap tables to make them responsive](https://github.com/rails/rails/commit/e2cfe8fdfccfcb47aec2f358b0badab79c817981)\r\n\r\n* [Make back-to-top link to skip link](https://github.com/rails/rails/commit/ad966a42de9e166ab33026b28fc8dda64f5fbdd1) \r\n\r\n  This allow screen readers to announce something, because linking to an empty fragment or the body element doesn't announce anything useful.\r\n\r\n* [Add branded selectable color](https://github.com/rails/rails/commit/2557614d872629462e354b2bd1536736aa2077be) \r\n\r\n  Fixes selecting text in dark mode and brands it for both modes.\r\n\r\n* [Make more info and guides index accessible](https://github.com/rails/rails/commit/f9eaeb18d8c5712ae0f2edf351ff9829c996bf78) \r\n\r\n  * Adds aria-controls, which binds the control to the content.\r\n  * Adds aria-expanded, which signals the current expansion state.\r\n  * Adds focus handling, which focuses the first link or the button\r\n    depending on the expansion state.\r\n  * Adds keyboard closing for the more info button.\r\n  * Adds outside click tracking to close the expanded content.\r\n  * Fixes the more info button to not be focusable.\r\n\r\n* [Fix dark mode for guide selector](https://github.com/rails/rails/commit/9c4cfd00492a2bd55db9ed5b5a9a616a962c153a)\r\n\r\n* [Add accessible label for guide navigator](https://github.com/rails/rails/commit/93f9819c62890301f398e752b6083c9d2c9f6c40)\r\n\r\n### Additional information\r\n\r\nPlease note that this PR doesn't necessarily make the guides completely accessible and we should continue to improve on this, but this gets us (a big) part of the way there, together with the changes that were already made prior.\r\n\r\n| Before | After |\r\n| ------ | ----- |\r\n| You could not focus the selector pressing \"Version\" | ![a11y-focusable-label-version](https://github.com/rails/rails/assets/1964376/58f5d1a7-a6ef-47e2-86ac-6e1e0288a18c) |\r\n| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-desktop](https://github.com/rails/rails/assets/1964376/0a93871b-c55a-4f9b-a524-86f6024f39b7) |\r\n| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-mobile](https://github.com/rails/rails/assets/1964376/5075e1ac-c888-496e-8fa4-4f9066d6aa43) |\r\n| ![a11y-before-table-wrap](https://github.com/rails/rails/assets/1964376/29e41733-60ce-4933-9d4f-36a9fad972e8) | ![a11y-after-table-wrap](https://github.com/rails/rails/assets/1964376/303818b1-d3af-45e3-9ea7-08121c91f04c) |\r\n| You could not skip past the secondary top navigation | ![a11y-main-skip-link](https://github.com/rails/rails/assets/1964376/8d2c1af0-7575-4089-8e89-e7cfb42c8975) |\r\n| You could not skip past the chapter navigation | ![a11y-chapter-skip-link](https://github.com/rails/rails/assets/1964376/87cccb26-f7ae-4ae9-a382-145d6cbd963e) |\r\n| ![a11y-selectable-text-before](https://github.com/rails/rails/assets/1964376/e9e9b56f-08de-45d8-955f-c7884b33a387) | ![a11y-selectable-text](https://github.com/rails/rails/assets/1964376/c938bbde-54ee-480b-b295-6a91bdd8c7e7) |\r\n| There was no label indicating what the select does | ![a11y-guide-selector](https://github.com/rails/rails/assets/1964376/cfaf0501-516b-4ad3-bc30-d77701f01164) |\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51499/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1964376,
        "label_ids": [
            150377,
            1072773639,
            6434393529
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51499.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51499.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1560093276,
        "number": 47161,
        "title": "Add support for `RETURNING` to `INSERT`/`UPDATE`/`DELETE` statements",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-01-27T16:59:33Z",
        "updated_at": "2024-09-18T09:12:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis pull request adds support for `RETURNING` clauses to `INSERT`/`UPDATE`/`DELETE` statements in Arel. This is useful to build queries that modify data and return it (or something else) in the same query. \r\n\r\nThe following example builds a query that deletes all data from a counter queue table and returns the aggregated counter delta values. \r\n\r\n```ruby \r\ncounter_queue = Arel::Table.new(:counter_queue)\r\nflush = Arel::Table.new(:flush)\r\n\r\ndelete_manager = Arel::DeleteManager.new \r\n  .from(counter_queue)\r\n  .returning([counter_queue[:post_id], counter_queue[:delta]])\r\n\r\nselect_manager = Arel::SelectManager.new \r\n  .with(Arel::Nodes::TableAlias.new(Arel::Nodes::Grouping.new(delete_manager.ast), flush.name))\r\n  .from(flush)\r\n  .project(flush[:post_id], flush[:delta].sum) \r\n  .group(flush[:post_id])\r\n```\r\n\r\n```sql \r\nWITH \"flush\" AS (\r\n  DELETE FROM\r\n    \"counter_queue\" \r\n  RETURNING \r\n    \"counter_queue\".\"post_id\",\r\n    \"counter_queue\".\"delta\"\r\n)\r\nSELECT\r\n  \"flush\".\"post_id\",\r\n  SUM(\"flush\".\"delta\")\r\nFROM\r\n  \"flush\"\r\nGROUP BY\r\n  \"flush\".\"post_id\"\r\n```\r\n\r\n\r\n### Detail\r\n\r\nTo add support for `RETURNING`, this pull request adds a returning method to the sStatement and manager classes for insert, upsert, and delete. It also modifies the ToSql and Dot visitors to incorporate the returning statement (should there be one) into their output. \r\n\r\n### Additional information\r\n\r\nThe `RETURNING` syntax is supported in both PostgreSQL ([INSERT](https://www.postgresql.org/docs/current/sql-insert.html), [UPDATE](https://www.postgresql.org/docs/current/sql-update.html), [DELETE](https://www.postgresql.org/docs/current/sql-delete.html)) and Sqlite3 ([INSERT](https://www.sqlite.org/lang_insert.html), [UPDATE](https://www.sqlite.org/lang_update.html), [DELETE](https://www.sqlite.org/lang_delete.html)). MySQL does not support `RETURNING` on any of these statements at the moment. \r\n\r\nThis pull request does not add `RETURNING` support to ActiveRecord itself (as discussed in #39968 and #42955). Nonetheless, I think this change to just Arel is useful in its own right to build more complex queries when needed.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/47161/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 9696,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/47161.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/47161.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2370269499,
        "number": 52208,
        "title": "[DOC] Clarify previous (type/value) in Activecord::Attributes `attribute`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-06-24T13:32:12Z",
        "updated_at": "2024-09-18T08:29:33Z",
        "closed_at": "2024-08-12T18:30:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nWhen I and my colleagues saw the API document for `attribute`,\r\nwe got difficulty understanding what exactly the `previous` value.\r\n\r\n### Detail\r\n\r\nIn order to clarify the document, I have improved the followings.\r\n\r\n* Change the wording from `previous` to `previously defined` for clarification\r\n* Add the similar description for `type` when not specified\r\n\r\n### Additional information\r\n\r\nnone\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52208/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 4468155,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52208.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52208.patch",
        "pull_request_merged_at": "2024-08-12T18:30:03Z"
    },
    {
        "id": 2529848972,
        "number": 52954,
        "title": "Syntax error on first db:migrate after upgrading to rails 6",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-17T02:35:43Z",
        "updated_at": "2024-09-18T05:43:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nafter upgrating from rails 5.2 to rails 6.1 and ruby 2.7.2 to 3.3.5 I'm facing some weird errors syntax errors when running the initial migration. The application runs fine and even run the migrations if the table ar_internal_metadata has been created in the previous rails version (tried breaking the first migration and running db:migrate to see the difference between versions. On 5.2 it creates both schema_migrations and ar_internal_metadata, while on 6.1 it only creates schema_migrations and throws an exception)\r\n\r\nThe error I see when running rails db:migrate is this:\r\n```\r\n** Execute db:load_config\r\n** Execute db:migrate\r\nrails aborted!\r\nActiveRecord::StatementInvalid: PG::SyntaxError: ERROR:  syntax error at or near \"(\"\r\nLINE 1: ...ter varying, \"created_at\" timestamp with time zone(6) NOT NU...\r\n                                                             ^\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:49:in `exec'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:49:in `block (2 levels) in execute'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-6.1.7.8/lib/active_support/dependencies/interlock.rb:48:in `block in permit_concurrent_loads'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-6.1.7.8/lib/active_support/concurrency/share_lock.rb:187:in `yield_shares'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-6.1.7.8/lib/active_support/dependencies/interlock.rb:47:in `permit_concurrent_loads'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:48:in `block in execute'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/connection_adapters/abstract_adapter.rb:696:in `block (2 levels) in log'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-6.1.7.8/lib/active_support/concurrency/load_interlock_aware_monitor.rb:26:in `block (2 levels) in synchronize'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-6.1.7.8/lib/active_support/concurrency/load_interlock_aware_monitor.rb:25:in `handle_interrupt'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-6.1.7.8/lib/active_support/concurrency/load_interlock_aware_monitor.rb:25:in `block in synchronize'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-6.1.7.8/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `handle_interrupt'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-6.1.7.8/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `synchronize'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/connection_adapters/abstract_adapter.rb:695:in `block in log'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activesupport-6.1.7.8/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/connection_adapters/abstract_adapter.rb:687:in `log'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:47:in `execute'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/connection_adapters/abstract/schema_statements.rb:322:in `create_table'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/internal_metadata.rb:49:in `create_table'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/migration.rb:1229:in `initialize'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/migration.rb:1086:in `new'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/migration.rb:1086:in `up'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/migration.rb:1061:in `migrate'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/tasks/database_tasks.rb:237:in `migrate'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/railties/databases.rake:92:in `block (3 levels) in <top (required)>'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/railties/databases.rake:90:in `each'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/activerecord-6.1.7.8/lib/active_record/railties/databases.rake:90:in `block (2 levels) in <top (required)>'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/task.rb:281:in `block in execute'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/task.rb:281:in `each'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/task.rb:281:in `execute'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/task.rb:219:in `block in invoke_with_call_chain'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/task.rb:199:in `synchronize'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/task.rb:199:in `invoke_with_call_chain'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/task.rb:188:in `invoke'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/application.rb:160:in `invoke_task'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/application.rb:116:in `block (2 levels) in top_level'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/application.rb:116:in `each'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/application.rb:116:in `block in top_level'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/application.rb:125:in `run_with_threads'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/application.rb:110:in `top_level'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/railties-6.1.7.8/lib/rails/commands/rake/rake_command.rb:24:in `block (2 levels) in perform'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/application.rb:186:in `standard_exception_handling'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/railties-6.1.7.8/lib/rails/commands/rake/rake_command.rb:24:in `block in perform'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/rake-13.0.3/lib/rake/rake_module.rb:59:in `with_application'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/railties-6.1.7.8/lib/rails/commands/rake/rake_command.rb:18:in `perform'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/railties-6.1.7.8/lib/rails/command.rb:50:in `invoke'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/gems/3.3.0/gems/railties-6.1.7.8/lib/rails/commands.rb:18:in `<top (required)>'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/3.3.0/bundled_gems.rb:75:in `require'\r\n/home/user/.asdf/installs/ruby/3.3.5/lib/ruby/3.3.0/bundled_gems.rb:75:in `block (2 levels) in replace_require'\r\nbin/rails:4:in `<main>'\r\n```\r\n\r\nand this is my gemfile\r\n\r\n\r\n```\r\nsource 'https://rubygems.org'\r\n\r\ngit_source(:github) do |repo_name|\r\n  repo_name = \"#{repo_name}/#{repo_name}\" unless repo_name.include?('/')\r\n  \"https://github.com/#{repo_name}.git\"\r\nend\r\n\r\nruby '3.3.5'\r\n\r\ngem 'rails', '~> 6.1', '>= 6.1.7.8'\r\ngem 'pg', '~> 1.5', '>= 1.5.8'\r\ngem 'puma', '~> 3.7'\r\ngem 'sassc-rails'\r\ngem 'terser'\r\ngem 'coffee-rails', '~> 4.2'\r\ngem 'coffee-script-source', '1.8.0'\r\ngem 'turbolinks', '~> 5'\r\ngem 'jbuilder', '~> 2.5'\r\ngem 'recaptcha'\r\ngem 'deep_cloneable', '~> 3.0'\r\n\r\ngroup :development, :test do\r\n  gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]\r\n  gem 'capybara'\r\n  gem 'selenium-webdriver', '~> 3.142'\r\n  gem 'database_cleaner-active_record'\r\n  gem 'capybara-select2'\r\n  gem 'webmock'\r\n  gem 'factory_bot_rails'\r\n  gem 'uniform_notifier'\r\n  gem 'bullet'\r\n  gem 'rails-controller-testing'\r\n  gem 'fake_ftp', '~> 0.3.0'\r\n  gem 'readapt'\r\nend\r\n\r\ngroup :development do\r\n  gem 'web-console', '>= 3.3.0'\r\n  gem 'capistrano', '= 3.14.1', require: false\r\n  gem 'capistrano-rails', '~> 1.3', require: false\r\n  gem 'capistrano3-puma', require: false\r\n  gem 'capistrano-rvm', require: false\r\n  gem 'rufo'\r\n  gem 'htmlbeautifier'\r\nend\r\n\r\ngem 'tzinfo-data'\r\ngem 'twitter-bootstrap-rails'\r\ngem 'rails-i18n', '~> 7.0', '>= 7.0.9'\r\ngem 'jquery-ui-rails'\r\ngem 'will_paginate'\r\ngem 'will_paginate-bootstrap4'\r\ngem 'will_paginate-bootstrap'\r\ngem 'momentjs-rails'\r\ngem 'datetime_picker_rails', '~> 0.0.7'\r\ngem 'cpf_cnpj'\r\ngem 'rest-client'\r\ngem 'devise'\r\ngem 'devise_token_auth'\r\ngem 'pundit', '~> 2.0', '>= 2.0.1'\r\ngem 'activesupport-decorators', '~> 2.1'\r\ngem 'rufus-scheduler', '~> 3.4.0'\r\ngem 'redis', '~> 4.0'\r\ngem 'ros-apartment', require: 'apartment'\r\ngem \"sidekiq\", \"~> 6.4.0\"\r\ngem 'ros-apartment-sidekiq', require: 'apartment-sidekiq'\r\ngem 'sidekiq-cron'\r\ngem 'sidekiq-status'\r\ngem 'activejob-uniqueness', require: 'active_job/uniqueness/sidekiq_patch'\r\ngem 'sendgrid-ruby'\r\ngem 'wkhtmltopdf-binary', '~> 0.12.6'\r\ngem 'wicked_pdf'\r\ngem 'correios-cep'\r\ngem 'rspec-rails', '~> 6.1', '>= 6.1.5'\r\ngem 'rails_db', '~> 2.3', '>= 2.3.1'\r\ngem 'roo', '~> 2.7', '>= 2.7.1'\r\ngem 'caxlsx'\r\ngem 'caxlsx_rails'\r\ngem 'combine_pdf', '1.0.15'\r\ngem 'newrelic_rpm'\r\ngem 'mini_magick'\r\ngem 'aws-sdk-s3'\r\ngem 'awesome_print'\r\ngem 'dropbox_api', '~> 0.1.17'\r\ngem 'fast_jsonapi'\r\ngem 'date_validator', '~> 0.9.0'\r\ngem 'audited', '~> 4.9'\r\ngem 'exception_handler', '~> 0.8.0.0'\r\ngem 'exception_notification'\r\ngem 'slack-notifier'\r\ngem 'httparty'\r\ngem 'rack-cors'\r\ngem 'dotiw', '~> 4.0', '>= 4.0.1'\r\ngem 'ean'\r\ngem 'discordrb', '~> 3.4'\r\ngem 'rake', '= 13.0.3'\r\ngem 'net-ftp'\r\ngem 'net-sftp'\r\ngem 'rubyzip'\r\ngem 'ajax-datatables-rails'\r\ngem 'rack-attack'\r\ngem 'timecop'\r\ngem \"viacep\"\r\ngem 'oj', '3.12.3'\r\ngem 'bigdecimal', '2.0.2'\r\ngem \"inertia_rails\", \"~> 3.2\"\r\ngem \"vite_rails\"\r\ngem 'overmind', '~> 2.5', '>= 2.5.1'\r\n```\r\n\r\n### Expected behavior\r\nMigration being run correctly\r\n\r\n### Actual behavior\r\nsyntax error on something outside of my code\r\n\r\n### System configuration\r\n**Rails version**: 6.1.7.8\r\n\r\n**Ruby version**: 3.3.5\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52954/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19368721,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2478991974,
        "number": 52675,
        "title": "Deprecate `config.active_job.enqueue_after_transaction_commit` config",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 2,
        "created_at": "2024-08-21T20:09:31Z",
        "updated_at": "2024-09-18T04:10:38Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "This config now accepts the following values:\r\n\r\n* `:never` - Never defer the enqueue.\r\n* `:always` - Always defer the enqueue.\r\n* `:default` - Let the queue adapter define the behaviour.\r\n\r\nWe believe that his behavior should not be defined by the adapter, and changing its value globally to all jobs can be too much of a sharp knife.\r\n\r\nWe should still allow specific jobs to change `enqueue_after_transaction_commit` between `true` and `false`, but document explicitly what are the issues that messing with this value could cause.\r\n\r\nSee discussion in https://github.com/rails/rails/pull/52659#issuecomment-2302422632",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52675/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47848,
        "label_ids": [
            123812746,
            149514554
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2529775994,
        "number": 52953,
        "title": "Add validations to email address field on authentication generator",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-09-17T01:28:04Z",
        "updated_at": "2024-09-18T03:32:57Z",
        "closed_at": "2024-09-17T03:31:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n\r\n### Motivation / Background\r\n\r\nWith the default generated model, when adding a blank or duplicated email, Active Record throws a database error, instead of gracefully validating and adding errors to the model.\r\n\r\n### Detail\r\n\r\nThese validations reflect the database constraints present on the `email_address` field in the generated migration.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52953/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 20938712,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52953.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52953.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2526539887,
        "number": 52931,
        "title": "SQLite3Adapter: Ensure fork-safety",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 23,
        "created_at": "2024-09-14T17:48:20Z",
        "updated_at": "2024-09-18T02:08:55Z",
        "closed_at": "2024-09-15T06:57:27Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nCurrently, `SQLite3Adapter` is not fork-safe and can result in database file corruption when a Rails process forks under certain circumstances.\r\n\r\nhttps://github.com/rails/solid_queue/issues/324 described sqlite database corruption happening while dealing with solid_queue job management. An investigation demonstrated that a likely cause of that corruption is sqlite's lack of fork-safety, a situation which was ironically made worse when the sqlite3-ruby driver improved its memory management with https://github.com/sparklemotion/sqlite3-ruby/pull/392 in v2.0.0.\r\n\r\nAny `SQLite3::Database` objects that are inherited from the parent process are unsafe to properly close and may impact either the parent or the child and potentially lead to database corruption.\r\n\r\nYou can read more about sqlite's lack of fork-safety in [How To Corrupt An SQLite Database File §2.6](https://www.sqlite.org/howtocorrupt.html#_carrying_an_open_database_connection_across_a_fork_), and reproduce corruption yourself with https://github.com/flavorjones/2024-09-13-sqlite-corruption.\r\n\r\n\r\n### Detail\r\n\r\nIn this commit, a pre-fork callback `prepare_to_fork!` is introduced for the connection pools and adapters to take any necessary actions before forking. The callback is only implemented by `SQLite3Adapter` which now invokes `disconnect!` to close all open prepared statements and database connections.\r\n\r\nThis pull request has a lot going on. The commits, in order, do the following:\r\n\r\n1. Prefactor `activesupport/test/fork_tracker_test.rb`.\r\n2. Introduce `ActiveSupport::ForkTracker.before_fork` for registering callbacks before a Rails process forks.\r\n3. Introduce the `prepare_to_fork!` callback and `SQLite3Adapter`'s specialized version of that method.\r\n\r\n\r\n### Additional information\r\n\r\nAs a side effect, the parent process will end up having to re-open database connections if it continues to do work, which may be a small performance overhead for some use cases, but is necessary in order to prevent database corruption.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52931/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 8207,
        "closed_by_id": 8207,
        "label_ids": [
            107191,
            107194
        ],
        "reactions_total_count": 6,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 5,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52931.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52931.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2527251841,
        "number": 52939,
        "title": "Fix: JSON Column In-Place Update Issue by Adding Type Casting to changed_in_place?",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-15T23:12:21Z",
        "updated_at": "2024-09-18T00:43:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": " ### Motivation / Background\r\n When a JSON column is partially updated in place, the new_value is not type-casted, leading to symbol values being incorrectly detected as changes.\r\n This PR resolves the issue by ensuring consistent behavior between ActiveRecord::Type::Json.changed_in_place? and changed?, as the new_value is type-casted by default during full attribute assignment.\r\n\r\n ### Detail\r\n This Pull Request updates the `changed_in_place?` method in `ActiveRecord::Type::Json` to type-cast the new_value before comparing it with the old_value.\r\n \r\n ### Additional information\r\n\r\n before:\r\n\r\n![image](https://github.com/user-attachments/assets/fec1cbac-915b-4a2a-a7e3-def13679c159)\r\n\r\ntest: \r\n<img width=\"914\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4c89ba7e-94c9-4456-8c63-de0e67b6c86d\">\r\n\r\n after:\r\n \r\n![image](https://github.com/user-attachments/assets/956007dd-9a86-448f-898d-163b04ec2b9f)\r\n\r\ntest:\r\n <img width=\"992\" alt=\"image\" src=\"https://github.com/user-attachments/assets/18aa77c1-c98f-4ea1-8376-0494f7d7be41\">\r\n\r\n ### Checklist\r\n Before submitting the PR make sure the following are checked:\r\n \r\n * [x]  This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n * [x]  Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n * [x]  Tests are added or updated if you fix a bug or add a feature.\r\n * [x]  CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52939/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 34799755,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52939.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52939.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2531829154,
        "number": 52960,
        "title": "Add ability to use multiple rate limits per controller",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-17T18:33:40Z",
        "updated_at": "2024-09-18T00:00:03Z",
        "closed_at": "2024-09-17T23:58:33Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #52957.\r\n\r\nCurrently, when the controller have multiple rate limits, for example https://github.com/rails/rails/blob/4aa78117fa427ec6d761b81fb1d3877a20703b9e/actionpack/test/controller/rate_limiting_test.rb#L5-L17\r\n\r\nit is not working as expected. It is expected that each rate limit applies only to the actions specified in `:only`, but since the cache key contains the controller path, the rate limiting cache key is shared between the rate limits. So sending a request to one action we actually increment rate limiting counter for other rate limit too.\r\n\r\nI propose to add an explicit name for each rate limiter (if more than 1) via `:name`, so we use separate cache keys for each of them.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52960/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 2741,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 4,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 4,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52960.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52960.patch",
        "pull_request_merged_at": "2024-09-17T23:58:33Z"
    },
    {
        "id": 2531324645,
        "number": 52957,
        "title": "Multiple rate-limits share same cache key so it increments multiple time for single request",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-17T14:29:20Z",
        "updated_at": "2024-09-17T23:58:34Z",
        "closed_at": "2024-09-17T23:58:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/\" => \"test#index\"\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  self.cache_store = ActiveSupport::Cache::MemoryStore.new\r\n\r\n  rate_limit to: 2, within: 1.minute # short-term limit\r\n  rate_limit to: 5, within: 1.hour   # long-term limit\r\n\r\n  def index\r\n    render plain: \"Home\"\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\nrequire 'active_support/testing/time_helpers'\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n  include ActiveSupport::Testing::TimeHelpers\r\n\r\n  def test_rate_limits_are_independent\r\n    freeze_time do\r\n      # Assuming we have 0 request logged in short-term rate-limit\r\n      # Assuming we have 0 request logged in long-term rate-limit\r\n      # Make 1 request\r\n      get \"/\"\r\n      assert last_response.ok?\r\n\r\n      # Assuming we can make yet 1 out of 2 requests for short-term limit\r\n      # Assuming we can make yet 4 out of 5 requests for long-term limit\r\n      # Make second request\r\n      get \"/\"\r\n      assert last_response.ok? # failed\r\n    end\r\n  end\r\n\r\n  private\r\n\r\n  def app\r\n    Rails.application\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach of added rate-limits should have own unique cache key\r\n\r\n### Actual behavior\r\nWhen multiple rate-limits added, the cache key is incremented multiple times for one request\r\nleading to 429 errors earlier than expected\r\n\r\n### Possible solution\r\n`opts[:to]` and `opts[:within]` can be added to cache key\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.2.1\r\n**Ruby version**:  3.3.5\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52957/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 3481507,
        "closed_by_id": 2741,
        "label_ids": [
            107189,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2349814970,
        "number": 52110,
        "title": "ActionCable: Invalid channel causes repeated subscription attempts",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-12T23:04:28Z",
        "updated_at": "2024-09-17T23:58:20Z",
        "closed_at": "2024-09-17T23:58:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When subscribing to an ActionCable channel, if the channel name doesn't exist, Rails doesn't send anything back to the client, which enters an infinite loop where it continually tries to subscribe.\r\n\r\n### Steps to reproduce\r\n\r\n- Connect to an ActionCable consumer\r\n- Subscribe to a channel that doesn't exist\r\n\r\n### Expected behavior\r\n\r\nThe connection should reject the subscription, so the JS client can stop trying to connect, and run any relevant callbacks.\r\n\r\n### Actual behavior\r\n\r\nThe connection outputs `Subscription class not found: \"InvalidChannelName\"` to the logs, and nothing is transmitted back to the client.\r\n\r\nIn the web inspector, we can see the constant stream of connection attempts:\r\n\r\n![Screenshot 2024-06-13 at 09 00 21](https://github.com/rails/rails/assets/1049190/21fec748-8b95-4231-aa9a-4a03ecae342b)\r\n\r\nFrom my basic understanding of the internals, this could be fixed transmitting a rejection here: https://github.com/rails/rails/blob/827f4ef15cfde1c42d75ed9521023a5c5cfe91d6/actioncable/lib/action_cable/connection/subscriptions.rb#L46\r\n\r\nI'd be happy to submit a PR if this would be acceptable.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.3.1\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52110/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 1049190,
        "closed_by_id": 28418009,
        "label_ids": [
            12449438
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2438909939,
        "number": 52459,
        "title": "Enhance bin/dev to run server in foreground AND still use foreman",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 34,
        "created_at": "2024-07-31T01:09:09Z",
        "updated_at": "2024-09-17T22:42:43Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "The key problem with using foreman for development with Rails is that the debugger is no longer directly available in-process. You have to attach a remote debugger, which is both a hassle, and doesn't work with IRB.\r\n\r\nBut I think we can have our cake and eat it too. Consider this bin/dev:\r\n\r\n```\r\n#!/usr/bin/env bash\r\nforeman start -f Procfile.dev <&0 &\r\nbin/rails server \"$@\"\r\n```\r\n\r\nThis will start the processes, like tailwind and esbuild watch processes, via foreman, but keep the rails server as the active process directly, so the debugger still works.\r\n\r\nThere are a few things we need to fix to make this fully usable. The first is that usually the Procfile.dev will list a web process that we of course don't want to run again. The second is that we want to configure foreman not to output timestamps when running in this mode.\r\n\r\nBut I think we can either find a way to preprocess/wrap the parsing of Procfile.dev to extract the web role, run that directly, and then only run the rest via foreman, or we can enhance foreman to provide the option of marking a given process as the primary. So it works like this.\r\n\r\nSolving this issue is particularly urgent for Rails 8 because we're going to ship with Solid Queue as the default. SQ needs a runner process. It would be very nice if we didn't have to do something custom just for SQ, like a puma process extension. If we could instead just ship a default Procfile.dev (and perhaps even Procfile too?), which worked like described above, we'd sidestep a lot of complexity, wouldn't tie ourselves explicitly to puma extensions, and have a uniform running setup for all ways of using Rails (whether you're on importmaps or esbuild).",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52459/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "label_ids": [],
        "reactions_total_count": 22,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 22,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2529537892,
        "number": 52951,
        "title": "[RF-DOCS]Active Record Validations [ci skip]",
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "MatheusRich",
            "id": 20938712,
            "followers_url": "https://api.github.com/users/MatheusRich/followers",
            "following_url": "https://api.github.com/users/MatheusRich/following{/other_user}",
            "starred_url": "https://api.github.com/users/MatheusRich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MatheusRich/subscriptions",
            "organizations_url": "https://api.github.com/users/MatheusRich/orgs",
            "repos_url": "https://api.github.com/users/MatheusRich/repos",
            "received_events_url": "https://api.github.com/users/MatheusRich/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "MatheusRich",
                "id": 20938712,
                "followers_url": "https://api.github.com/users/MatheusRich/followers",
                "following_url": "https://api.github.com/users/MatheusRich/following{/other_user}",
                "starred_url": "https://api.github.com/users/MatheusRich/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatheusRich/subscriptions",
                "organizations_url": "https://api.github.com/users/MatheusRich/orgs",
                "repos_url": "https://api.github.com/users/MatheusRich/repos",
                "received_events_url": "https://api.github.com/users/MatheusRich/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-16T21:34:34Z",
        "updated_at": "2024-09-17T21:18:08Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because we need to update the Validation docs.\r\n\r\nNote that I'll start a bigger discussion in Basecamp about: \r\n\r\n> Another, bigger picture discussion we can have: should we have an Active Model validations guide that covers most of these, and then keep this Active Record one that is more specific to the validations only provided by Active Record, their relation to the database, etc., as well as links to the Active Model one? For discussion: [Active Model Validations - Documentation Updates](https://3.basecamp.com/3076981/buckets/35498807/todos/7051651276)\r\n\r\n### Detail\r\n\r\n- Initial examples should probably use Person.new instead of Person.create (create already runs validations under the hood, and will insert the record in the DB if all pass)\r\n-  Rails team => Rails framework\r\n-  `exclusion` has a paragraph about using procs, lambdas, etc. that `inclusion` doesn't... they use the same logic for validation.\r\n-  We have a [guide on I18n](https://edgeguides.rubyonrails.org/i18n.html), including info about error messages, that we could maybe link from the validations when talking about messages.\r\n-  We talk about using errors in views by the end, could be an opportunity to mention `[field_error_proc](https://edgeguides.rubyonrails.org/configuring.html#config-action-view-field-error-proc)` since that seems to only be mentioned in the configuring guide.\r\n-  Add a section called Custom Contexts\r\n\r\n-  The \"Why Use Validations?\" section mentions alternatives to validations. This could probably use an extra header: \"Alternatives to Validations\"\r\n-  The line mentioning more use-cases for :on can probably be removed: \"We will cover more use-cases for on: in the [callbacks guide](https://edgeguides.rubyonrails.org/active_record_callbacks.html).\", as we'll add a section for \"Validation Contexts\" as mentioned above.\r\n-  Should \"Conditional Validations\" be mentioned before \"Strict Validations\" and \"Common Validation Options\"? Conditionals are common validations options and probably more common than `allow_nil` and `strict`. \"Common Validation Options\" isn't very descriptive either. (I moved Conditional Validations before Strict Validations but kept Common Validation Options where it is for the natural flow)\r\n-  \"Listing Validators\" doesn't seem related to \"Performing Custom Validations\". Maybe it should it's own top-level section?\r\n-  The [Errors where and error object](https://edgeguides.rubyonrails.org/active_record_validations.html#errors-where-and-error-object) section uses both 2 and 3 in the example, but should be 3 everywhere?\r\n-  Move usage of `errors.add` to the top, as it's used before the explanation in \"Working with Validation Errors\"?\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52951/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2786819,
        "label_ids": [
            150377,
            6434393529
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52951.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52951.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2526596638,
        "number": 52932,
        "title": "Revert params.fetch to params.expect conversions in scaffold",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-14T20:28:25Z",
        "updated_at": "2024-09-17T20:32:04Z",
        "closed_at": "2024-09-16T21:57:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\n In rails/jbuilder#573 we stumbled on the case where the scaffold was generating `params.expect(table_name: {})` which has the unintended consequence of requiring that a param is given when there are no expected params.\r\n\r\n### Detail\r\n\r\nThis PR reverts 2 small changes to the scaffold templates introduced by #51674 so that default scaffolds don't return 400 Bad Request upon creation with no attributes.\r\n\r\n### Additional information\r\n\r\nThanks to @jeromedalbert for noticing that I had made the very changes that I pointed out as problematic in his PR in jbuilder. Teamwork!\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52932/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 989,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52932.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52932.patch",
        "pull_request_merged_at": "2024-09-16T21:57:14Z"
    },
    {
        "id": 2357599252,
        "number": 52142,
        "title": "Infinite loop passing form_builder in partial as local after update to 7.1.3.4 (was 7.0.8.4)",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2024-06-17T15:13:53Z",
        "updated_at": "2024-09-17T19:21:50Z",
        "closed_at": "2024-09-17T19:21:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nWhen I try to pass the form_builder to a partial as local, I've got an infinite loop with this error:\r\n```\r\nCompleted 500  in 1701ms (ActiveRecord: 1314.9ms | Allocations: 163362)\r\n\r\n\r\n\r\nSystemStackError (stack level too deep):\r\n\r\napp/views/admin/authors/_form.html.erb:357\r\n```\r\nThe code is:\r\n\r\n```\r\n<%= form_for [:admin, @author], html: { class: 'form form-horizontal', multipart: true, style: 'margin-bottom: 0' } do |f| %>\r\n  <%= render partial: 'my_partial', locals: { f: f } %>\r\n<% end %>\r\n```\r\nI noticed this problem after updating to Rails 7.1.3.4 (was 7.0.8.4)\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.4\r\n\r\n**Ruby version**: 3.3.2\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52142/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 47932570,
        "closed_by_id": 47848,
        "label_ids": [
            131864,
            12449438
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2510902431,
        "number": 52821,
        "title": "Add support for IPv4 mapped IPv6 addresses",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-06T17:33:23Z",
        "updated_at": "2024-09-17T14:16:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nWe made a puma config change to bind to IPv6 in production and the change leaked to local development. It turned out Firefox on my Mac chose to connect through `::ffff:127.0.0.1` instead of `::1`. I suspect something to do with our internet connection still pending IPv6 configuration and tripping an odd edge case. However, this identified that `::ffff:127.0.0.1` is a valid local loopback address.\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc5952#section-5\r\nhttps://en.wikipedia.org/wiki/IPv6_address#Special_addresses\r\n\r\n### Detail\r\n\r\nThis change allows `request.local?` to recognize these addresses correctly as local. I also expanded the testing around `request.local?` a lot.\r\n\r\n### Additional information\r\n\r\nI'm not sold on how I broke out the multi-line but I couldn't place what the expected style is here.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52821/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 7812,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52821.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52821.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2531056226,
        "number": 52956,
        "title": "Create sitemap.markdown",
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-17T12:39:41Z",
        "updated_at": "2024-09-17T13:31:28Z",
        "closed_at": "2024-09-17T13:29:43Z",
        "author_association": "NONE",
        "active_lock_reason": "spam",
        "draft": false,
        "body": "Deleted because spam.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52956/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 181850106,
        "closed_by_id": 1080678,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52956.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52956.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2528004942,
        "number": 52945,
        "title": "Show feedback for `bin/rails boot` command",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-16T09:56:23Z",
        "updated_at": "2024-09-17T10:13:14Z",
        "closed_at": "2024-09-17T10:12:16Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\nThere currently is no feedback when `bin/rails boot` is successful.\r\n\r\n### Detail\r\nPrint \"Booting the application.\" before booting.\r\nPrint \"All is good!\" when boot was successful, similar to `bin/rails zeitwerk:check`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52945/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 3387,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52945.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52945.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2530519093,
        "number": 52955,
        "title": "Migrate all databases on PendingMigrationError",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-17T09:12:22Z",
        "updated_at": "2024-09-17T09:12:28Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nProblem:\r\n\r\n`PendingMigrationError` defines the \"Run pending migrations\" action to run pending migrations. But it only run migrations against the primary database. Thus, when there are multiple databases, \"Run message migrations\" actions won't resolve `PendingMigrationError`.\r\n\r\nSolution:\r\n\r\nRun migrations on all databases.\r\n\r\n### Detail\r\n\r\n\r\n### Additional information\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52955/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 99586,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52955.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52955.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2526047589,
        "number": 52927,
        "title": "Do not create `scan_js` workflow for API-only apps #52900",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T07:21:53Z",
        "updated_at": "2024-09-17T05:10:30Z",
        "closed_at": "2024-09-16T22:11:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because it fixes #52900.\r\n\r\n### Detail\r\n\r\nThis Pull Request will now only generate the `scan_js` CI workflow for the full-stack rails app using importmaps as javascript bundling. \r\n\r\nPreviously the `scan_js` workflow was generated for the API-only apps resulting in the `bin/importmap: No such file or directory` error when pushing the code to the GitHub repo.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52927/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 10782481,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52927.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52927.patch",
        "pull_request_merged_at": "2024-09-16T22:11:16Z"
    },
    {
        "id": 2492809882,
        "number": 52735,
        "title": "[ci skip] docs: Fix has_one association basics guide",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-28T19:09:35Z",
        "updated_at": "2024-09-17T02:46:06Z",
        "closed_at": "2024-08-28T19:28:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nI found this when reading [4.2.5 When are Objects Saved? of Active Record Associations Guide](https://guides.rubyonrails.org/association_basics.html#has-one-association-reference-when-are-objects-saved-questionmark).\r\n\r\n### Detail\r\n\r\nThis Pull Request changes \"They will automatically when the parent object is saved.\" to \"They will automatically **be saved** when the parent object is saved.\"\r\n\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52735/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 56626111,
        "closed_by_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52735.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52735.patch",
        "pull_request_merged_at": "2024-08-28T19:28:38Z"
    },
    {
        "id": 1784594954,
        "number": 48628,
        "title": "PostgreSQL reload virtual columns on update via RETURNING clause",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-02T11:30:36Z",
        "updated_at": "2024-09-17T01:35:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Extends Active Record to automatically reload virtual columns on update when using PostgreSQL. This is done by issuing a single UPDATE query that includes a RETURNING clause.\r\n\r\n### Motivation\r\n\r\nSaves an extra round trip to the database for reload and removes a developer pitfall around stale values.\r\n\r\n### Detail\r\n\r\nGiven a `Post` model represented by the following schema:\r\n```ruby\r\ncreate_table :posts do |t|\r\n  t.integer :upvotes_count\r\n  t.integer :downvotes_count\r\n  t.virtual :total_votes_count, type: :integer, as: \"upvotes_count + downvotes_count\", stored: true\r\nend\r\n```\r\n`total_votes_count` will reflect the sum of upvotes and downvotes after `update` is successfully called. Prior to this change calling `reload` would have been necessary to obtain the value calculated by the database.\r\n```ruby\r\npost = Post.find(1)\r\npost.update(upvotes_count: 2, downvotes_count: 2)\r\n# Calling `post.reload` no longer necessary\r\npost.total_votes => 4\r\n```\r\n\r\n* At this moment MySQL and SQLite adapters do not support this behavior\r\n\r\n### Additional information\r\n\r\n* Follow-up from PR #48241\r\n* Related to PR #48434\r\n* Closes #48423 when using Postgresql\r\n\r\nCC: @nvasilevski\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48628/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 15172605,
        "label_ids": [
            107191,
            1072773639
        ],
        "reactions_total_count": 18,
        "reactions_plus1": 11,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 7,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/48628.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/48628.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2371362228,
        "number": 52211,
        "title": "Fix creating a CTE with 3 or more relations that are unioned together",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-25T00:35:22Z",
        "updated_at": "2024-09-17T01:29:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nIf you try to create a cte that unions for than 2 relationships you get a NoMethodError of \r\n```\r\nundefined method `union' for an instance of Arel::Nodes::UnionAll\r\n```\r\n\r\n### Detail\r\n\r\nThis fix allows you to pass more than 2 relationships to a cte to union them together.\r\n\r\nIm calling ast on the nodes because passing the SelectManager around caused the selects to be wrapped in parenthesis which causes a syntax error in sqlite. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52211/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5059927,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52211.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52211.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2526915003,
        "number": 52937,
        "title": "Skip tests that raises \"cannot get AST for ISEQ compiled by prism\" if Ruby parse is Prism",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-15T13:28:11Z",
        "updated_at": "2024-09-17T00:17:23Z",
        "closed_at": "2024-09-17T00:17:22Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "## Motivation / Background\r\n\r\nThis commit addresses these Rails Nightly CI failures\r\nhttps://buildkite.com/rails/rails-nightly/builds/1023#0191ed31-1d8d-41e5-906b-e3b88aab79da\r\n\r\nRuby 3.4.0dev default parser has been switched to Prism, After the default parser is switched from parse.y to Prism some of Active Support tests get failed with \"cannot get AST for ISEQ compiled by prism\" message.\r\n\r\nAccording to https://github.com/ruby/ruby/pull/9934, this seems to be the expected behavior of Ruby with the Prism parser. This commit adds the `prism_skip` method following the naming convention of `jruby_skip` that has been removed via https://github.com/rails/rails/pull/49454 .\r\n\r\n\r\n### Detail\r\n\r\n\r\n- This commit addresses these failures against Ruby 3.4.0dev with Prism parser.\r\n```ruby\r\n$ ruby -v\r\nruby 3.4.0dev (2024-09-15T01:06:11Z master 532af89e3b) +PRISM [x86_64-linux]\r\n$ cd activesupport\r\n$ bin/test -n \"/^(?:TestOrderTest#(?:test_test_order_is_global)|AssertionsTest#(?:test_assert_changes_message_with_lambda|test_assert_difference_message_with_lambda|test_assert_no_changes_message_with_lambda|test_assert_no_changes_message_with_multi_line_lambda|test_assert_no_difference_with_multiple_expressions_fail)|ExceptionsInsideAssertionsTest#(?:test_warning_is_not_logged_if_assertions_are_nested_correctly))$/\"\r\n/home/yahonda/.gem/ruby/3.4.0+0/gems/json-2.7.1/lib/json/common.rb:3: warning: ostruct was loaded from the standard library, but will no longer be part of the default gems starting from Ruby 3.5.0.\r\nYou can add ostruct to your Gemfile or gemspec to silence this warning.\r\nWARNING: Nokogiri was built against libxml version 2.12.9, but has dynamically loaded 2.9.14\r\n\r\nRun options: -n \"/^(?:TestOrderTest#(?:test_test_order_is_global)|AssertionsTest#(?:test_assert_changes_message_with_lambda|test_assert_difference_message_with_lambda|test_assert_no_changes_message_with_lambda|test_assert_no_changes_message_with_multi_line_lambda|test_assert_no_difference_with_multiple_expressions_fail)|ExceptionsInsideAssertionsTest#(?:test_warning_is_not_logged_if_assertions_are_nested_correctly))$/\" --seed 65502\r\n\r\nF\r\n\r\nFailure:\r\nExceptionsInsideAssertionsTest#test_warning_is_not_logged_if_assertions_are_nested_correctly [test/test_case_test.rb:508]:\r\n[Minitest::Assertion] exception expected, not\r\nClass: <RuntimeError>\r\nMessage: <\"cannot get AST for ISEQ compiled by prism\">\r\n---Backtrace---\r\n<internal:ast>:97:in 'RubyVM::AbstractSyntaxTree.of'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:304:in 'ActiveSupport::Testing::Assertions#_callable_to_source_string'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:270:in 'block in ActiveSupport::Testing::Assertions#assert_no_changes'\r\n---------------\r\n\r\nbin/test test/test_case_test.rb:507\r\n\r\nF\r\n\r\nFailure:\r\nAssertionsTest#test_assert_changes_message_with_lambda [test/test_case_test.rb:252]:\r\n[Minitest::Assertion] exception expected, not\r\nClass: <RuntimeError>\r\nMessage: <\"cannot get AST for ISEQ compiled by prism\">\r\n---Backtrace---\r\n<internal:ast>:97:in 'RubyVM::AbstractSyntaxTree.of'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:304:in 'ActiveSupport::Testing::Assertions#_callable_to_source_string'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:213:in 'block in ActiveSupport::Testing::Assertions#assert_changes'\r\n---------------\r\n\r\nbin/test test/test_case_test.rb:249\r\n\r\nF\r\n\r\nFailure:\r\nAssertionsTest#test_assert_no_changes_message_with_multi_line_lambda [test/test_case_test.rb:427]:\r\n[Minitest::Assertion] exception expected, not\r\nClass: <RuntimeError>\r\nMessage: <\"cannot get AST for ISEQ compiled by prism\">\r\n---Backtrace---\r\n<internal:ast>:97:in 'RubyVM::AbstractSyntaxTree.of'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:304:in 'ActiveSupport::Testing::Assertions#_callable_to_source_string'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:270:in 'block in ActiveSupport::Testing::Assertions#assert_no_changes'\r\n---------------\r\n\r\nbin/test test/test_case_test.rb:422\r\n\r\nF\r\n\r\nFailure:\r\nAssertionsTest#test_assert_no_changes_message_with_lambda [test/test_case_test.rb:380]:\r\n[Minitest::Assertion] exception expected, not\r\nClass: <RuntimeError>\r\nMessage: <\"cannot get AST for ISEQ compiled by prism\">\r\n---Backtrace---\r\n<internal:ast>:97:in 'RubyVM::AbstractSyntaxTree.of'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:304:in 'ActiveSupport::Testing::Assertions#_callable_to_source_string'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:270:in 'block in ActiveSupport::Testing::Assertions#assert_no_changes'\r\n---------------\r\n\r\nbin/test test/test_case_test.rb:377\r\n\r\nF\r\n\r\nFailure:\r\nAssertionsTest#test_assert_no_difference_with_multiple_expressions_fail [test/test_case_test.rb:78]:\r\n[Minitest::Assertion] exception expected, not\r\nClass: <RuntimeError>\r\nMessage: <\"cannot get AST for ISEQ compiled by prism\">\r\n---Backtrace---\r\n<internal:ast>:97:in 'RubyVM::AbstractSyntaxTree.of'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:304:in 'ActiveSupport::Testing::Assertions#_callable_to_source_string'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:122:in 'block (2 levels) in ActiveSupport::Testing::Assertions#assert_difference'\r\n---------------\r\n\r\nbin/test test/test_case_test.rb:76\r\n\r\nF\r\n\r\nFailure:\r\nAssertionsTest#test_assert_difference_message_with_lambda [test/test_case_test.rb:176]:\r\n[Minitest::Assertion] exception expected, not\r\nClass: <RuntimeError>\r\nMessage: <\"cannot get AST for ISEQ compiled by prism\">\r\n---Backtrace---\r\n<internal:ast>:97:in 'RubyVM::AbstractSyntaxTree.of'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:304:in 'ActiveSupport::Testing::Assertions#_callable_to_source_string'\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/assertions.rb:122:in 'block (2 levels) in ActiveSupport::Testing::Assertions#assert_difference'\r\n---------------\r\n\r\nbin/test test/test_case_test.rb:173\r\n\r\n.\r\n\r\nFinished in 0.044451s, 157.4784 runs/s, 629.9136 assertions/s.\r\n7 runs, 28 assertions, 6 failures, 0 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n\r\nRefer to https://github.com/ruby/ruby/pull/9934\r\nhttps://github.com/ruby/ruby/pull/11497/\r\nhttps://bugs.ruby-lang.org/issues/20564\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52937/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 73684,
        "closed_by_id": 73684,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52937.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52937.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2529090820,
        "number": 52949,
        "title": "Time.find_zone has inconsistent behavior between mac and linux environments for \"America/Indianapolis\"",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-16T17:49:07Z",
        "updated_at": "2024-09-16T23:14:00Z",
        "closed_at": "2024-09-16T22:15:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHey folks,\r\n\r\nI've encountered some strange behavior in a rails console between a linux environment and a darwin (m1 macbook) environment. When trying to do a \r\n\r\n```ruby\r\nTime.find_zone(\"America/Indianapolis\")\r\n```\r\n\r\nI get different behavior between the two environments. On the macbook environment, the method returns a timezone object with the expected timezone. On the linux environment, the method returns as `nil`. See below:\r\n\r\nLinux:\r\n<img width=\"714\" alt=\"Screenshot 2024-09-16 at 1 35 35 PM\" src=\"https://github.com/user-attachments/assets/3c3b2be2-462e-4544-8b30-0964453f602a\">\r\n\r\n<img width=\"409\" alt=\"Screenshot 2024-09-16 at 1 35 43 PM\" src=\"https://github.com/user-attachments/assets/1e91e964-07ba-4629-b385-219cc85b46e9\">\r\n\r\n\r\nDarwin:\r\n<img width=\"707\" alt=\"Screenshot 2024-09-16 at 1 35 10 PM\" src=\"https://github.com/user-attachments/assets/7c2720b3-b18b-4b16-930f-19b09132720a\">\r\n\r\n<img width=\"1062\" alt=\"Screenshot 2024-09-16 at 1 35 26 PM\" src=\"https://github.com/user-attachments/assets/3d50ee48-7924-4caa-9261-12de494bd1c4\">\r\n\r\nThe gem version of ActiveSupport is 7.2.1 on both machines as well. This seems like a bug but I wanted to open an issue here to see what folks thought.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nReproduction script in a rails console:\r\n```ruby\r\nTime.find_zone(\"America/Indianapolis\")\r\n```\r\n\r\n### Expected behavior\r\nBoth environments should either return `nil` or a proper timezone object\r\n\r\n### Actual behavior\r\nThe darwin environment returns a proper timezone object while the linux environment returns `nil`.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.1\r\n\r\n**ActiveSupport version**: 7.2.1\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52949/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 6140083,
        "closed_by_id": 1034,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2525432367,
        "number": 52914,
        "title": "Wrap database seeding in a reload",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-13T18:32:20Z",
        "updated_at": "2024-09-16T22:51:28Z",
        "closed_at": "2024-09-16T22:51:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nIt is possible that database seeding may run jobs inline. In that case a reload will be attempted. For an app that is set to `reload_classes_only_on_change` this would normally not initiate a reload, since no files would have been changed. However, it is common to run the seeds as part of one command that also sets up the database (eg `bin/rails db:prepare db:seed`). In that case, the `schema.rb` file may have changes. [By default that file is watched by the reloader](https://github.com/rails/rails/blob/6f7f624b84d8cfa8a1d6166878c902d1fcb0655c/activerecord/lib/active_record/railtie.rb#L318). So, the application will be reloaded at the time the first job (or other reload) occurs. Reloading the application during the middle of running seeds can lead to unexpected and buggy behaviour.\r\n\r\n### Detail\r\n\r\nWe should wrap the entire seeds task in a reload so that the reload only occurs at the end of seeding.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52914/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39735028,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52914.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52914.patch",
        "pull_request_merged_at": "2024-09-16T22:51:26Z"
    },
    {
        "id": 2491794972,
        "number": 52731,
        "title": "Use thread pool for ActionController::Live",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-08-28T11:16:06Z",
        "updated_at": "2024-09-16T22:39:38Z",
        "closed_at": "2024-09-16T22:39:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nCurrently, all controllers that use `ActionController::Live` create a new thread to process every request. Creating threads is somewhat expensive. We can avoid that by using a thread pool, which we do already elsewhere in rails.\r\n\r\n\r\n### Detail\r\n\r\nThis PR introduces `ActionController::Live.live_thread_pool_executor`, which can contain any number of threads, keeping them around for a while (60s is the default in concurrent-ruby).\r\n\r\nI also clean up the thread locals we copy over from the parent thread. This is a bit messy. There are probably some tests required, though I'm not entirely sure where to put them.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52731/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 660706,
        "closed_by_id": 47848,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52731.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52731.patch",
        "pull_request_merged_at": "2024-09-16T22:39:38Z"
    },
    {
        "id": 2360279368,
        "number": 52148,
        "title": "Add a dummy encryption key for ActiveRecord::Encryption",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-18T16:40:01Z",
        "updated_at": "2024-09-16T22:26:41Z",
        "closed_at": "2024-09-16T22:26:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nRunning in Docker, we have SECRET_KEY_BASE_DUMMY=1, which skips the check for the master key; ideally, we have something similar for ActiveRecord::Encryption keys, so we do not have to define dummy values for the primary_key etc. Or we could reuse that same dummy key to skip ActiveRecord::Encryption key checks.\r\n\r\nIf you load your config.active_record.encryption from environment variables, these are typically not available at build time; they are only available on runtime, which throws an error when compiling assets.\r\n\r\n### Expected behavior\r\nAssets should compile\r\n\r\n### Actual behavior\r\n\r\n```\r\nKeyError: key not found: \"ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\" (KeyError)\r\n```\r\n### System configuration\r\n\r\n**Rails version**:\r\n7.1.3\r\n\r\n**Ruby version**:\r\n3.3.1",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52148/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 215,
        "closed_by_id": 47848,
        "label_ids": [
            12449438
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2506001400,
        "number": 52801,
        "title": "Set `attributes_for_inspect` to `:all` in the console",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-04T18:14:11Z",
        "updated_at": "2024-09-16T22:23:08Z",
        "closed_at": "2024-09-16T22:23:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n\r\n### Motivation / Background\r\n\r\nFixes https://github.com/rails/rails/issues/52728\r\n\r\nThis Pull Request has been created because we received feedback on a few things about the `attributes_for_inspect` feature introduced in https://github.com/rails/rails/pull/49765, specifically around the default settings for this feature, which is `[:id]` in production and `:all` in test and dev. The issues are:\r\n\r\n1. This feature should be opt in, and be `:all` in production for upgrading apps.\r\n2. We should always use `:all` in the production console to not hinder debugging/\r\n3. We should not use `consider_all_requests_local` to determine what to set it to\r\n\r\n### Detail\r\n\r\nTo address 1 and 3, I changed how the defaults are set. Now the default value is `:all`, and I set it to `[:id]` in `production.rb`. This means it is also opt in as upgrading apps will need to add that line to their `production.rb`.\r\n\r\nFor 2, I used the `console` method in the active record railtie to set this it to `:all` in production in the console\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52801/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39735028,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            107195
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52801.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52801.patch",
        "pull_request_merged_at": "2024-09-16T22:23:06Z"
    },
    {
        "id": 2491352970,
        "number": 52728,
        "title": "Only `id` is shown  when inspecting records in Rails console in production",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2024-08-28T07:53:57Z",
        "updated_at": "2024-09-16T22:23:07Z",
        "closed_at": "2024-09-16T22:23:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n1. Create a new Rails app (with either Rails 7.2.1 or 8.0.0.alpha): `rails new test-app`\r\n2. Modify `config/database.yml` so that the production database points to the development database (it's fine to keep sqlite for this demonstration):\r\n   ```yml\r\n   default: &default\r\n   adapter: sqlite3\r\n   pool: <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %>\r\n   timeout: 5000\r\n\r\n   development:\r\n     <<: *default\r\n     database: storage/development.sqlite3\r\n   production:\r\n     <<: *default\r\n     database: storage/development.sqlite3\r\n  \r\n3. Create a dummy model: `bin/rails g model User name surname`\r\n\r\nNow, if you enter the dev console with `bin/rails c` this is what you'll see:\r\n```rb\r\ntest-app(dev)> User.create(name: \"John\", surname: \"Doe\")\r\ntest-app(dev)> User.first\r\n=> #<User:0x0000000120d516c0 id: 1, name: \"John\", surname: \"Doe\", created_at: \"2024-08-28 07:12:10.878368000 +0000\", updated_at: \"2024-08-28 07:12:10.878368000 +0000\">\r\n```\r\n\r\nAnd if you enter the console in production with `bin/rails c -e production`, you'll see this:\r\n```rb\r\ntest-ap(prod)> User.first\r\n=> #<User:0x000000011f7f8760 id: 1>\r\n```\r\n\r\nAs you see, while inspecting the user I only get back the `id`.\r\n\r\nNote that if you follow those steps with Rails 7.1, the output of the development and production console match (they both show all the attributes).\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nI expect to see all the object attributes even on production. This behavior has changed from Rails 7.2.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nFrom Rails 7.2 onwards, when inspecting a model instance in the production console you only get back the id and not the whole set of attributes.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.2.1\r\n\r\n**Ruby version**:\r\n3.3.4",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52728/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 97030518,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 3,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2522851792,
        "number": 52901,
        "title": "Changed behaviour if CurrentAttributes caused by new default functionality",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-12T16:28:25Z",
        "updated_at": "2024-09-16T22:20:52Z",
        "closed_at": "2024-09-13T18:46:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nNow in Ruby.7.2 when I create a new CurrentAttributes it automatically sets the every attribute to nil, due to a new default feature\r\nhttps://github.com/rails/rails/blob/3d2510359c37b2d84a8b33b0b3964ae60f6653f0/activesupport/lib/active_support/current_attributes.rb#L112 \r\n\r\nIt is quite a breaking change in a larger codebase like our where we have many calls of `Current.attribute.key?(:something)` or passing the whole `Current.attributes` somewhere. \r\n\r\nUnfortunately this (from my perspective breaking) change was not enough documented in release notes nor in the doc https://api.rubyonrails.org/classes/ActiveSupport/CurrentAttributes.html\r\n\r\n### Expected behavior\r\n\r\n```\r\n# Rails 7.1.4\r\n\r\nclass Test < ActiveSupport::CurrentAttributes\r\n  attribute :a, :b\r\nend\r\n# => [:a, :b]\r\n\r\nTest.attributes\r\n# => {}\r\n```\r\n\r\n### Actual behavior\r\n\r\n```\r\n```ruby\r\n# Rails 7.2\r\n\r\nclass Test < ActiveSupport::CurrentAttributes\r\n  attribute :a, :b\r\nend\r\n\r\nTest.attributes\r\n# => { a: nil, b: nil}\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.5\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52901/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 11453,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2527467175,
        "number": 52943,
        "title": "Address `DebugExceptionsTest` failures against Ruby with Prism parser",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-16T04:20:29Z",
        "updated_at": "2024-09-16T22:13:17Z",
        "closed_at": "2024-09-16T22:13:17Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis commit addresses Rails Nightly CI failure of Action Pack. https://buildkite.com/rails/rails-nightly/builds/1023#0191ed31-1d6e-4f20-8cfd-b5f39bfa8187/1175-1217\r\n\r\nThis is due to syntax error related message differences between these two parsers. This commit allows both error messages.\r\n\r\n- Ruby 3.4.0dev with parse.y parser raises `syntax error, unexpected end-of-input, expecting`\r\n```ruby\r\n$ ruby -v\r\nruby 3.4.0dev (2024-09-15T01:06:11Z master 532af89e3b) +PRISM [x86_64-linux]\r\n$ RUBYOPT=--parser=parse.y ruby -w -e 'puts (\"Hello, world!\"'\r\n-e:1: syntax error, unexpected end-of-input, expecting ')'\r\nputs (\"Hello, world!\"\r\nruby: compile error (SyntaxError)\r\n```\r\n\r\n- Ruby 3.4.0dev with Prism parser raises `syntax errors found`\r\n```ruby\r\n$ ruby -v\r\nruby 3.4.0dev (2024-09-15T01:06:11Z master 532af89e3b) +PRISM [x86_64-linux]\r\n$ RUBYOPT=--parser=prism ruby -w -e 'puts (\"Hello, world!\"'\r\n-e:1: warning: possibly useless use of a literal in void context\r\n-e: -e:2: syntax errors found (SyntaxError)\r\n  1 | puts (\"Hello, world!\"\r\n> 2 |\r\n    | ^ expected a matching `)`\r\n\r\n    | ^ unexpected end-of-input, assuming it is closing the parent top level context\r\n```\r\n\r\n### Detail\r\n\r\nThis commit addresses these two failures below:\r\n\r\n```ruby\r\n$ cd actionpack\r\n$ bin/test test/dispatch/debug_exceptions_test.rb -n \"/^(?:DebugExceptionsTest#(?:test_debug_exceptions_app_shows_all_the_nested_exceptions_in_source_view|test_display_backtrace_when_error_type_is_SyntaxError|test_display_backtrace_when_error_type_is_SyntaxError_wrapped_by_ActionView::Template::Error))$/\"\r\n/home/yahonda/.gem/ruby/3.4.0+0/gems/json-2.7.1/lib/json/generic_object.rb:2: warning: ostruct was loaded from the standard library, but will no longer be part of the default gems starting from Ruby 3.5.0.\r\nYou can add ostruct to your Gemfile or gemspec to silence this warning.\r\n/home/yahonda/.gem/ruby/3.4.0+0/gems/capybara-3.39.2/lib/capybara/session/config.rb:95: warning: URI::RFC3986_PARSER.make_regexp is obsoleted. Use URI::RFC2396_PARSER.make_regexp explicitly.\r\n/home/yahonda/.rbenv/versions/trunk/lib/ruby/gems/3.4.0+0/gems/selenium-webdriver-4.22.0/lib/selenium/webdriver/common/target_locator.rb:104: warning: possibly useless use of a variable in void context\r\n2024-09-16 13:08:30 INFO Selenium [:logger_info] Details on how to use and modify Selenium logger:\r\n  https://selenium.dev/documentation/webdriver/troubleshooting/logging\r\n\r\n2024-09-16 13:08:30 WARN Selenium [:selenium_manager] The geckodriver version (0.34.0) detected in PATH at /home/yahonda/bin/geckodriver might not be compatible with the detected firefox version (130.0); currently, geckodriver 0.35.0 is recommended for firefox 130.*, so it is advised to delete the driver in PATH and retry\r\n/home/yahonda/.rbenv/versions/trunk/lib/ruby/gems/3.4.0+0/gems/rack-3.1.7/lib/rack/lint.rb:15: warning: URI::RFC3986_PARSER.make_regexp is obsoleted. Use URI::RFC2396_PARSER.make_regexp explicitly.\r\nRunning 42 tests in a single process (parallelization threshold is 50)\r\nRun options: -n \"/^(?:DebugExceptionsTest#(?:test_debug_exceptions_app_shows_all_the_nested_exceptions_in_source_view|test_display_backtrace_when_error_type_is_SyntaxError|test_display_backtrace_when_error_type_is_SyntaxError_wrapped_by_ActionView::Template::Error))$/\" --seed 16885\r\n\r\nF\r\n\r\nFailure:\r\nDebugExceptionsTest#test_display_backtrace_when_error_type_is_SyntaxError [test/dispatch/debug_exceptions_test.rb:724]:\r\n--- expected\r\n+++ actual\r\n@@ -1 +1,37 @@\r\n-/syntax error, unexpected/\r\n+\"/home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:114: (eval at /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:114):1: syntax errors found\r\n+[1;31m> [m[38;5;102m1 | [mbroke_syntax =\r\n+  [38;5;102m  | [m             [1;31m^[m expected an expression after `=`\r\n+  [38;5;102m  | [m              [1;31m^[m unexpected end-of-input, assuming it is closing the parent top level context\r\n+\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:114:in 'Kernel#eval'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:114:in 'DebugExceptionsTest::Boomer#call'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/middleware/debug_exceptions.rb:31:in 'ActionDispatch::DebugExceptions#call'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/testing/integration.rb:287:in 'ActionDispatch::Integration::Session#process'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/testing/integration.rb:19:in 'ActionDispatch::Integration::RequestHelpers#get'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/testing/integration.rb:378:in 'ActionDispatch::Integration::Runner#get'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:721:in 'block in <class:DebugExceptionsTest>'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/line_filtering.rb:10:in 'Rails::LineFiltering#run'\"\r\n.\r\nExpected 0 to be >= 1.\r\n\r\nbin/test test/dispatch/debug_exceptions_test.rb:718\r\n\r\n.F\r\n\r\nFailure:\r\nDebugExceptionsTest#test_display_backtrace_when_error_type_is_SyntaxError_wrapped_by_ActionView::Template::Error [test/dispatch/debug_exceptions_test.rb:751]:\r\n--- expected\r\n+++ actual\r\n@@ -1 +1,37 @@\r\n-/syntax error, unexpected/\r\n+\"/home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:117: (eval at /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:117):1: syntax errors found\r\n+[1;31m> [m[38;5;102m1 | [mbroke_syntax =\r\n+  [38;5;102m  | [m             [1;31m^[m expected an expression after `=`\r\n+  [38;5;102m  | [m              [1;31m^[m unexpected end-of-input, assuming it is closing the parent top level context\r\n+\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:117:in 'Kernel#eval'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:117:in 'DebugExceptionsTest::Boomer#call'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/middleware/debug_exceptions.rb:31:in 'ActionDispatch::DebugExceptions#call'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/testing/integration.rb:287:in 'ActionDispatch::Integration::Session#process'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/testing/integration.rb:19:in 'ActionDispatch::Integration::RequestHelpers#get'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/testing/integration.rb:378:in 'ActionDispatch::Integration::Runner#get'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:748:in 'block in <class:DebugExceptionsTest>'\r\n+\r\n+\r\n+\r\n+            /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/line_filtering.rb:10:in 'Rails::LineFiltering#run'\"\r\n.\r\nExpected 0 to be >= 1.\r\n\r\nbin/test test/dispatch/debug_exceptions_test.rb:745\r\n\r\nFinished in 0.261984s, 11.4511 runs/s, 64.8895 assertions/s.\r\n3 runs, 17 assertions, 2 failures, 0 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\nNone\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52943/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 73684,
        "closed_by_id": 47848,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52943.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52943.patch",
        "pull_request_merged_at": "2024-09-16T22:13:17Z"
    },
    {
        "id": 2522688594,
        "number": 52900,
        "title": "CI fails with the code generated by Rails version >= 7.2.0",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T15:12:33Z",
        "updated_at": "2024-09-16T22:11:17Z",
        "closed_at": "2024-09-16T22:11:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nLet's create a new Rails API application with the system configuration as mentioned:\r\n```bash\r\nrails new my_rails_app --api && cd my_rails_app\r\n```\r\n\r\nAdding files to a GitHub repo\r\n\r\n```bash\r\ngit add . && git commit -m \"initiate repo\"\r\n```\r\nCreate a new repository on GitHub and push all changes to it\r\n\r\n```bash\r\ngit remote add origin git@github.com:JuzerShakir/my_rails_app.git\r\ngit branch -M main\r\ngit push -u origin main\r\n```\r\n\r\nAfter pushing the code to the repo, the CI gets triggered and runs the following jobs:\r\n1. scan_ruby\r\n2. scan_js\r\n3. lint\r\n\r\n### Expected behavior\r\nSince this is an API-only application & doesn't generate assets, CSS, JS, etc, it should also not generate the `scan_js` job. It should only generate the other 2 jobs:\r\n\r\n1. scan_ruby\r\n2. lint\r\n\r\nWhen the code generated by the rails command is pushed to the remote repository w/o any modification by the user, it should pass all the tests.\r\n\r\n![Screenshot from 2024-09-12 20-23-27](https://github.com/user-attachments/assets/3ff93906-69d6-4149-83f4-2f0db8786b8f)\r\n\r\n### Actual behavior\r\nWhen the CI executes and runs the `scan_js` job with the command `bin/importmap audit`, it exits with the following error:\r\n```bash\r\n/home/runner/work/_temp/cf012b6b-5dcc-4bc8-aebb-75596782e7fe.sh: line 1: bin/importmap: No such file or directory\r\n```\r\n\r\n![Screenshot from 2024-09-12 20-27-02](https://github.com/user-attachments/assets/cdbeebec-0109-4ee2-80b1-2411c7818531)\r\n\r\nThe error makes sense since Rails doesn't generate that file while initializing it as an API-only application.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.1\r\n\r\nIf I could be assigned to resolve this issue, I would be very grateful! :)",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52900/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 10782481,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2526614418,
        "number": 52934,
        "title": "Do not include redis by default in dev container",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T21:33:12Z",
        "updated_at": "2024-09-16T21:48:12Z",
        "closed_at": "2024-09-16T21:48:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nRails 8 will use the solid gems by default for job queue and action cable, which do not depend on redis. So we don't need to include redis in the dev container by default. \r\n\r\n### Detail\r\n\r\nFor new apps, we will not include redis by default. If the app is using `--skip-solid` and either active job or action cable, then we will include redis.\r\n\r\nWhen generating a dev container for an existing app, we will check if either of the solid gems is in use to decide if redis is needed.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52934/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39735028,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52934.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52934.patch",
        "pull_request_merged_at": "2024-09-16T21:48:10Z"
    },
    {
        "id": 2529272676,
        "number": 52950,
        "title": "Make it possible for ConnectionPool#disconnect to avoid reconnection",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-16T19:15:53Z",
        "updated_at": "2024-09-16T20:27:28Z",
        "closed_at": "2024-09-16T20:27:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "We have a PostgreSQL database load balancer built on top of ActiveRecord that monitors replication lag. Each database host has a `ConnectionPool`, and when the load balancer detects that a host is offline or has too high replication, it calls`ConnectionPool#disconnect!`.\r\n\r\nWe observed that in production when replication lag increases, the database gets into an unhealthy state. The stack trace below suggests that `ConnectionPool#disconnect!` might have an unintended side effect in that when a thread marks the host as offline, it  needs to call `checkout_and_verify` on each connection in the ActiveRecord `ConnectionPool`. When many threads do this simultaneously, this saturates the limited PgBouncer connection pool, degrading the system even further:\r\n\r\n```json\r\n \"exception.backtrace\": [\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/postgresql_adapter.rb:87:in `rescue in new_client'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/postgresql_adapter.rb:77:in `new_client'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/postgresql_adapter.rb:852:in `connect'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/postgresql_adapter.rb:329:in `rescue in block in reconnect!'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/postgresql_adapter.rb:324:in `block in reconnect!'\",\r\n        \"activesupport (7.0.8.4) lib/active_support/concurrency/load_interlock_aware_monitor.rb:25:in `handle_interrupt'\",\r\n        \"activesupport (7.0.8.4) lib/active_support/concurrency/load_interlock_aware_monitor.rb:25:in `block in synchronize'\",\r\n        \"activesupport (7.0.8.4) lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `handle_interrupt'\",\r\n        \"activesupport (7.0.8.4) lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `synchronize'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/postgresql_adapter.rb:323:in `reconnect!'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract_adapter.rb:579:in `verify!'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:705:in `block in checkout_and_verify'\",\r\n        \"activesupport (7.0.8.4) lib/active_support/callbacks.rb:107:in `run_callbacks'\",\r\n        \"activesupport (7.0.8.4) lib/active_support/callbacks.rb:929:in `_run_checkout_callbacks'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:704:in `checkout_and_verify'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:341:in `checkout'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:574:in `checkout_for_exclusive_access'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:542:in `block (3 levels) in attempt_to_checkout_all_existing_connections'\",\r\n        \"/usr/lib/ruby/3.1.0/monitor.rb:202:in `synchronize'\",\r\n        \"/usr/lib/ruby/3.1.0/monitor.rb:202:in `mon_synchronize'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:538:in `block (2 levels) in attempt_to_checkout_all_existing_connections'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:537:in `loop'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:537:in `block in attempt_to_checkout_all_existing_connections'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool/queue.rb:183:in `with_a_bias_for'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:536:in `attempt_to_checkout_all_existing_connections'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:522:in `block in with_exclusively_acquired_all_connections'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:598:in `with_new_connections_blocked'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:521:in `with_exclusively_acquired_all_connections'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:247:in `disconnect'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:269:in `disconnect!'\",\r\n        \"lib/gitlab/database/load_balancing/host.rb:120:in `offline!'\",\r\n        \"lib/gitlab/database/load_balancing/load_balancer.rb:96:in `rescue in read'\",\r\n        \"lib/gitlab/database/load_balancing/load_balancer.rb:63:in `read'\",\r\n        \"lib/gitlab/database/load_balancing/connection_proxy.rb:110:in `read_using_load_balancer'\",\r\n        \"lib/gitlab/database/load_balancing/connection_proxy.rb:48:in `select_all'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/querying.rb:54:in `_query_by_sql'\",\r\n        \"activerecord (7.0.8.4) lib/active_record/querying.rb:50:in `find_by_sql'\",\r\n```\r\n\r\nIn this backtrace, we see that:\r\n\r\n1. `ConnectionPool#disconnect!` is called.\r\n2. This causes `ConnectionPool#attempt_to_checkout_all_existing_connections` to be called.\r\n3. This attempts to retrieve all connections **and** verify that they are working with a single `;` SQL statement.\r\n4. However, if that connection is bad (e.g. idle for too long, closed by the server) for some reason, then ActiveRecord will attempt to call `reconnect!` and talk to that server again.\r\n5. The `reconnect!`, in turn, issues several `SET` commands, which under normal conditions work quickly. However, these queries might cause a flood of connections on PgBouncer and load the host even more, further degrading the database.\r\n\r\nWe're trying to add a faster statement timeout for the reconnection phase so that the failure to reconnect will fail faster, but I think it would be better in our use case to avoid reconnection entirely since we're just tying to shut down existing, working connections and don't care about bad connections. I see that there is `ConnectionPool#discard!`, but that may not shut down  connections used by other threads gracefully.\r\n\r\nA possible solution may be to add a `verify_connections` parameter:\r\n\r\n```diff\r\ndiff --git a/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb b/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb\r\nindex 43043b3ec1..68a0500c22 100644\r\n--- a/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb\r\n+++ b/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb\r\n@@ -243,8 +243,8 @@ def connections\r\n       # - ActiveRecord::ExclusiveConnectionTimeoutError if unable to gain ownership of all\r\n       #   connections in the pool within a timeout interval (default duration is\r\n       #   <tt>spec.db_config.checkout_timeout * 2</tt> seconds).\r\n-      def disconnect(raise_on_acquisition_timeout = true)\r\n-        with_exclusively_acquired_all_connections(raise_on_acquisition_timeout) do\r\n+      def disconnect(raise_on_acquisition_timeout = true, verify_connections = true)\r\n+        with_exclusively_acquired_all_connections(raise_on_acquisition_timeout, verify_connections) do\r\n           synchronize do\r\n             @connections.each do |conn|\r\n               if conn.in_use?\r\n@@ -265,8 +265,8 @@ def disconnect(raise_on_acquisition_timeout = true)\r\n       # do so within a timeout interval (default duration is\r\n       # <tt>spec.db_config.checkout_timeout * 2</tt> seconds), then the pool is forcefully\r\n       # disconnected without any regard for other connection owning threads.\r\n-      def disconnect!\r\n-        disconnect(false)\r\n+      def disconnect!(verify_connections = true)\r\n+        disconnect(false, verify_connections)\r\n       end\r\n \r\n       # Discards all connections in the pool (even if they're currently\r\n@@ -337,8 +337,10 @@ def clear_reloadable_connections!\r\n       #\r\n       # Raises:\r\n       # - ActiveRecord::ConnectionTimeoutError no connection can be obtained from the pool.\r\n-      def checkout(checkout_timeout = @checkout_timeout)\r\n-        checkout_and_verify(acquire_connection(checkout_timeout))\r\n+      def checkout(checkout_timeout = @checkout_timeout, verify_connections)\r\n+        conn = acquire_connection(checkout_timeout)\r\n+        checkout_and_verify(conn, verify_connections)\r\n       end\r\n \r\n       # Check-in a database connection back into the pool, indicating that you\r\n@@ -517,14 +519,14 @@ def current_thread\r\n         # reload/disconnect can be performed safely. It is no longer enough to\r\n         # wrap it in +synchronize+ because some pool's actions are allowed\r\n         # to be performed outside of the main +synchronize+ block.\r\n-        def with_exclusively_acquired_all_connections(raise_on_acquisition_timeout = true)\r\n+        def with_exclusively_acquired_all_connections(raise_on_acquisition_timeout = true, verify_connections = true)\r\n           with_new_connections_blocked do\r\n-            attempt_to_checkout_all_existing_connections(raise_on_acquisition_timeout)\r\n+            attempt_to_checkout_all_existing_connections(raise_on_acquisition_timeout, verify_connections)\r\n             yield\r\n           end\r\n         end\r\n \r\n-        def attempt_to_checkout_all_existing_connections(raise_on_acquisition_timeout = true)\r\n+        def attempt_to_checkout_all_existing_connections(raise_on_acquisition_timeout = true, verify_connections = true)\r\n           collected_conns = synchronize do\r\n             # account for our own connections\r\n             @connections.select { |conn| conn.owner == Thread.current }\r\n@@ -539,7 +541,7 @@ def attempt_to_checkout_all_existing_connections(raise_on_acquisition_timeout =\r\n                 return if collected_conns.size == @connections.size && @now_connecting == 0\r\n                 remaining_timeout = timeout_time - Process.clock_gettime(Process::CLOCK_MONOTONIC)\r\n                 remaining_timeout = 0 if remaining_timeout < 0\r\n-                conn = checkout_for_exclusive_access(remaining_timeout)\r\n+                conn = checkout_for_exclusive_access(remaining_timeout, verify_connections)\r\n                 collected_conns   << conn\r\n                 newly_checked_out << conn\r\n               end\r\n@@ -570,8 +572,8 @@ def attempt_to_checkout_all_existing_connections(raise_on_acquisition_timeout =\r\n \r\n         #--\r\n         # Must be called in a synchronize block.\r\n-        def checkout_for_exclusive_access(checkout_timeout)\r\n-          checkout(checkout_timeout)\r\n+        def checkout_for_exclusive_access(checkout_timeout, verify_connections)\r\n+          checkout(checkout_timeout, verify_connections)\r\n         rescue ConnectionTimeoutError\r\n           # this block can't be easily moved into attempt_to_checkout_all_existing_connections's\r\n           # rescue block, because doing so would put it outside of synchronize section, without\r\n@@ -700,9 +702,9 @@ def checkout_new_connection\r\n           new_connection\r\n         end\r\n \r\n-        def checkout_and_verify(c)\r\n+        def checkout_and_verify(c, verify)\r\n           c._run_checkout_callbacks do\r\n-            c.verify!\r\n+            c.verify! if verify\r\n           end\r\n           c\r\n         rescue\r\n```\r\n\r\nThoughts?\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52950/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 963826,
        "closed_by_id": 963826,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2398367458,
        "number": 52297,
        "title": "Add setting for logging redirect source locations",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-07-09T14:22:46Z",
        "updated_at": "2024-09-16T20:21:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis introduces a new config setting: `action_dispatch.verbose_redirect_logs`. It logs the source location of redirects. It works similarly to `active_record.verbose_query_logs` and `active_job.verbose_enqueue_logs`.\r\n\r\nRedirects are of course used a lot. They are often defined in different locations. For example in your authentication code, authorization code, fallbacks for resources that can't be found, and to redirect users to a different page after performing an action, possibly with multiple redirect options in one controller action.\r\n\r\nI think it would be beneficial to know exactly which line of code triggered a redirect. \r\n\r\n### Detail\r\n\r\nThis adds a config setting that logs the source location of the redirect.\r\n\r\nThere are three main use cases, they would look like this:\r\n\r\n1. Redirects in filters (these already have a \"filter chain halted\" log as well, which points you in the right direction a bit, but the exact code location can still be useful):\r\n\r\n```\r\nRedirected to http://localhost:3000/\r\n↳ app/controllers/posts_controller.rb:76:in `check_something'\r\nFilter chain halted as :redirect rendered or redirected\r\nCompleted 302 Found in 18ms (ActiveRecord: 0.1ms (1 query, 0 cached) | GC: 0.0ms)\r\n```\r\n\r\n2. Redirects in controller actions:\r\n\r\n```\r\nRedirected to http://localhost:3000/posts/7\r\n↳ app/controllers/posts_controller.rb:32:in `block (2 levels) in create'\r\nCompleted 302 Found in 36ms (ActiveRecord: 1.3ms (1 query, 0 cached) | GC: 0.0ms)\r\n```\r\n\r\n3. Redirects in routes:\r\n\r\n```\r\nStarted GET \"/redirect\" for ::1 at 2024-07-09 12:40:23 +0200\r\nRedirected to http://localhost:3000/\r\n↳ /Users/dennis/Code/rails-test-app/config/routes.rb:14\r\nCompleted 301 Moved Permanently in 9ms\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n---\r\n\r\nThere are a few points I'm not sure how to approach and like some guidance in:\r\n\r\n1. ~~The test for for dispatch (`actionpack/test/dispatch/routing/log_subscriber_test.rb`) breaks currently. The code relies on [`request.routes`][2] to be set (which is true for actual applications), but it's `nil` in the tests. I'm not sure if going through `request.routes` is the best approach or what needs to change in the tests to make them pass or have the routes available.~~\r\n2. The source location for redirects from the router looks slightly different. This is because it uses [the existing `source_location` implementation][1], which for example shows the absolute path. I'm not sure if that's fine, or we want to get that in line with how the backtrace cleaner is used in other places.\r\n3. This is the 3rd very similar config setting (`verbose_query_logs`, `verbose_enqueue_logs` and now `verbose_redirect_logs`). I can imagine most people will either set all or none of them. Would it make sense to consolidate them into one setting, or maybe have a setting that sets all 3 at the same time? The code for them is also very similar. Happy to work in a direction that unifies them if that's desirable.\r\n\r\n[1]: https://github.com/rails/rails/blob/16f1222753cac0a554a2acd8f4ffa3f23d51d945/actionpack/lib/action_dispatch/routing/mapper.rb#L378-L408\r\n[2]: https://github.com/rails/rails/blob/16f1222753cac0a554a2acd8f4ffa3f23d51d945/actionpack/lib/action_dispatch/http/request.rb#L161-L163",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52297/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 170034,
        "label_ids": [
            107189,
            107195,
            150377,
            1072773639
        ],
        "reactions_total_count": 7,
        "reactions_plus1": 4,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 3,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52297.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52297.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2528979039,
        "number": 52948,
        "title": "Manifest link should use JSON format",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-16T16:55:43Z",
        "updated_at": "2024-09-16T19:57:11Z",
        "closed_at": "2024-09-16T19:50:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This fixes the commented manifest path to use JSON after it was refactored yesterday in https://github.com/rails/rails/blob/87bee3640b2a135a360c9af13f0e610bef8df131/railties/lib/rails/generators/rails/app/templates/app/views/layouts/application.html.erb.tt#L14\r\n\r\nCurrently, it will look for an HTML template, so this changes it to use the JSON format. \r\n\r\ncc @dhh ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52948/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 67093,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52948.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52948.patch",
        "pull_request_merged_at": "2024-09-16T19:50:59Z"
    },
    {
        "id": 2527490734,
        "number": 52944,
        "title": "postgresql hstore column not working with schema dump and rspec",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-16T04:44:45Z",
        "updated_at": "2024-09-16T17:31:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have created an api repo via generator that replicates the issue https://github.com/JProgrammer/pg-hstore\r\n\r\nWhen running the single [test](https://github.com/JProgrammer/pg-hstore/blob/main/spec/models/post_spec.rb#L4)\r\n\r\n### Expected behavior\r\nThe hstore column will be created with the correct values mapped from the hash\r\n\r\n### Actual behavior\r\nThe following error will be raised\r\n\r\n```\r\nFailures:\r\n\r\n  1) Post creates a new post\r\n     Failure/Error: expect { Post.create(data: { title: \"Hello, world!\" }) }.to change { Post.count }.by(1)\r\n     \r\n     TypeError:\r\n       can't cast Hash\r\n     # ./spec/models/post_spec.rb:5:in `block (3 levels) in <top (required)>'\r\n     # ./spec/models/post_spec.rb:5:in `block (2 levels) in <top (required)>'\r\n```\r\n\r\nIt appears that via rails console this will work, and with rails serve but not with `rspec` I also found an issue with a rake task where this also happens but could not replicated in the simple scenario, it could be to do with the threading used in the other parts of that rake task.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.4\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52944/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 587751,
        "label_ids": [],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2528750971,
        "number": 52947,
        "title": "ActionText adding a spurious `content: ''` to rich text attachments causing them to not preview in the editor",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-16T15:11:08Z",
        "updated_at": "2024-09-16T17:19:31Z",
        "closed_at": "2024-09-16T17:19:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n1. Create a simple app\r\n2. Install Action Text and Trix\r\n3. Add a new record with attached rich content and a form to add it.\r\n4. Create a new record with an attached image, save it, and then edit the record.\r\n\r\n### Expected behavior\r\nThe Trix editor should render images in the rich content editor.\r\n\r\n### Actual behavior\r\n\r\n![Screenshot 2024-09-16 at 10 58 57 AM](https://github.com/user-attachments/assets/3b2189db-acaa-4f4e-9037-9db32daad4a5)\r\n\r\n![Screenshot 2024-09-16 at 10 59 04 AM](https://github.com/user-attachments/assets/874a65ce-6fa4-41c1-a70e-4f4b7f0ea7f3)\r\n\r\n![Screenshot 2024-09-16 at 11 02 31 AM](https://github.com/user-attachments/assets/0e660651-d900-4511-bfd4-6d4e14339ad8)\r\n\r\n![Screenshot 2024-09-16 at 11 02 52 AM](https://github.com/user-attachments/assets/703fb91e-71bb-4867-9cbe-10eeac43149c)\r\n\r\nIt only shows the caption and delete X.\r\n\r\nThis seems to have been introduced by https://github.com/rails/rails/commit/1ac6d40d36a07b48a67bc7f8627fd1f92bffcb14\r\nin `actiontext/lib/action_text/content.rb#97`.\r\n\r\nIf the `sanitize_content_attachment(node[\"content\"])` returns a nil, it still adds `content: ''` to the node.\r\n\r\nIn Trix, https://github.com/basecamp/trix/blob/457a834808abe07058e4e8fda1b2cb0452868e2c/src/trix/models/attachment.js#L75\r\n`this.hasContent()` is called to determine if the image is previewable.\r\n\r\nhttps://github.com/basecamp/trix/blob/457a834808abe07058e4e8fda1b2cb0452868e2c/src/trix/models/attachment.js#L120\r\n`return this.attributes.has(\"content\")` returns true even though the content is an empty string. This results in Trix not returning 'preview' from `getType()`.\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.4\r\n\r\n**Ruby version**: 3.3.1\r\n\r\n**Trix js version**: 2.1.5\r\n\r\n**@rails/actiontext js version**: 7.2.100\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52947/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 5957102,
        "closed_by_id": 28561,
        "label_ids": [],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1164729661,
        "number": 44652,
        "title": "ActionCable: Repeated subscription attempts",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 20,
        "created_at": "2022-03-10T04:12:53Z",
        "updated_at": "2024-09-16T14:46:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n1. Create an actioncable subscription.\r\n2. Await subscription confirmation.\r\n3. Create another subscription with the same identifier.\r\n4. Observe websocket showing subscription attempts every second.\r\n\r\nI tried creating a small reproduction script, but involving views and action cable got too complicated. Instead, here's an app which replicates it:\r\n\r\nhttps://github.com/sj26/action_cable_test\r\n\r\nIt creates two subscriptions with the same identifier, with a timeout to be sure that the first subscription has already been confirmed:\r\n\r\n```erb\r\n<div id=\"count\"></div>\r\n<%= javascript_tag do %>\r\n  window.App.consumer.subscriptions.create({channel: \"TestChannel\"}, {\r\n    received({ count }) {\r\n      document.getElementById(\"count\").innerText = count;\r\n    }\r\n  });\r\n<% end %>\r\n\r\n<div id=\"contents\"></div>\r\n<%= javascript_tag do %>\r\n  setTimeout(function() {\r\n    window.App.consumer.subscriptions.create({channel: \"TestChannel\"}, {\r\n      received({ contents }) {\r\n        document.getElementById(\"contents\").innerText = contents;\r\n      }\r\n    });\r\n  }, 1000)\r\n<% end %>\r\n```\r\n\r\nThen a stream of subscription messages can be seen in the websocket traffic:\r\n\r\n<img width=\"1193\" alt=\"image\" src=\"https://user-images.githubusercontent.com/14028/157585817-14b2546d-0601-4faf-9334-e2615127be77.png\">\r\n\r\nbecause the guarantor considers the second subscription pending:\r\n\r\n<img width=\"1440\" alt=\"image\" src=\"https://user-images.githubusercontent.com/14028/157586067-5ce7d08d-263a-4ea7-bfe4-9ab581f589b1.png\">\r\n\r\nbecause actioncable short circuits existing subscriptions, and so doesn't submit multiple confirmations:\r\n\r\nhttps://github.com/rails/rails/blob/v7.0.2/actioncable/lib/action_cable/connection/subscriptions.rb#L32\r\n\r\n### Use case\r\n\r\nWe have a react frontend, and we want to subscribe to channels in each of the leaf components which require dynamic updates directly. Sometimes this means multiple components will be interested in the same updates, and subscribe to the same identifiers. Trying to deduplicate these subscriptions somehow requires a lot more state management which seems more fragile and uneccessary. Previous versions of actioncable before the guarantor seem to work great for this use case, and the actioncable implemenation seems to consider subscription duplication in all operations. It's the addition of the subscription guarantor in #41581 to fix #38668 which seems to have created this issue. I think it would continue to work great with some gentle adjustment.\r\n\r\n### Expected behavior\r\n\r\nSubscribing to the same channel identifier multiple times should not constantly send subscription messages.\r\n\r\n### Actual behavior\r\n\r\nA continuous stream of subscription messages are sent from the browser and arrive and are squashed at the server without any confirmation message returning. This taxes both the browser client and the action cable server unnecessarily.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.2\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Potential solution\r\n\r\nThe simplest solution seems to be to follow the pattern established in the rest of Subscriptions and avoid re-subscribing subscriptions which already exist:\r\n\r\nhttps://github.com/rails/rails/pull/44653\r\n\r\nIt's also a little confusing. The \"subscription\" in the javascript environment does not necessarily have a 1:1 relationship with the \"subscription\" on the server. This is a good thing! But it'd be nice if they had different names.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/44652/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 14028,
        "label_ids": [
            41328116,
            300028327
        ],
        "reactions_total_count": 5,
        "reactions_plus1": 5,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2021347720,
        "number": 50234,
        "title": "Rails 7.1 attached image raises error because \"Cannot get a signed_id for a new record\" in image_tag",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-12-01T17:59:47Z",
        "updated_at": "2024-09-16T14:16:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nSay I have a model with an attached image, like such:\r\n\r\n```ruby\r\nclass Company < ApplicationRecord\r\n  has_one_attached :logo\r\n  \r\n  validates :name, presence: true\r\nend\r\n```\r\n\r\n...and there is also a controller to update it using the route defined by `resources :companies` like such:\r\n\r\n```ruby\r\ndef update\r\n  @company = Company.find(params[:id])\r\n  company_params = params.require(:company).permit(:name, :logo)\r\n\r\n  if @company.update(company_params)\r\n    flash[:success] = \"Successfully updated Company!\"\r\n    redirect_to edit_company_path(@company)\r\n  else\r\n    render :edit\r\n  end\r\nend\r\n```\r\n\r\nThe `edit` form is an HTML form that looks as follows:\r\n\r\n```ruby\r\n<%= simple_form_for @company, url: edit_company_path(@company) do |f| %>\r\n  <%= f.input :name %>\r\n  <%= f.input :logo %>\r\n  <% if @company.logo.attached? %>\r\n    <%= image_tag @company.logo.variant(resize: \"200x200\") %>\r\n  <% end %>\r\n<% end %>\r\n```\r\n\r\nNow when I pass in an update payload that generates an invalid state (as per my `Company` model's validations) but has a **valid, existing, readable** logo file, the following error occurs:\r\n\r\n```\r\nActionView::Template::Error: Cannot get a signed_id for a new record\r\n\r\nFailure/Error: <%= image_tag @company.logo.variant(resize: \"200x200\") %>\r\n\r\n     ActionView::Template::Error:\r\n       Cannot get a signed_id for a new record\r\n```\r\n\r\nThis is because the `@company.update(...)` statement in the controller writes the attributes, but the actual raw _saving_ to the database fails because of validations.\r\n\r\nThe edit form then tries to display the new, updated **but not persisted** logo in the frontend, which raises the error about `signed_id`.\r\n\r\n### Expected behavior\r\nThe `edit` form should render, with the form showing errors on the `name` field according to the validators of the `company` model. Uploading a correct, readable logo should not cause the form to throw an error when rendering.\r\n\r\n### Actual behavior\r\nThe error above is being thrown.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50234/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6136469,
        "label_ids": [
            131864,
            664533972
        ],
        "reactions_total_count": 13,
        "reactions_plus1": 13,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 577049605,
        "number": 38668,
        "title": "ActionCable: Sporadically not receiving confirmation for (re)subscription to same channel",
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jeremy",
            "id": 199,
            "followers_url": "https://api.github.com/users/jeremy/followers",
            "following_url": "https://api.github.com/users/jeremy/following{/other_user}",
            "starred_url": "https://api.github.com/users/jeremy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeremy/subscriptions",
            "organizations_url": "https://api.github.com/users/jeremy/orgs",
            "repos_url": "https://api.github.com/users/jeremy/repos",
            "received_events_url": "https://api.github.com/users/jeremy/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jeremy",
                "id": 199,
                "followers_url": "https://api.github.com/users/jeremy/followers",
                "following_url": "https://api.github.com/users/jeremy/following{/other_user}",
                "starred_url": "https://api.github.com/users/jeremy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeremy/subscriptions",
                "organizations_url": "https://api.github.com/users/jeremy/orgs",
                "repos_url": "https://api.github.com/users/jeremy/repos",
                "received_events_url": "https://api.github.com/users/jeremy/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 16,
        "created_at": "2020-03-06T16:44:37Z",
        "updated_at": "2024-09-16T11:44:00Z",
        "closed_at": "2020-06-12T17:24:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I've been playing around with ActionCable and ran into a strange phenomenon. From time to time, the js triggers depending on action cable would suddenly stop. In my setup, I create a subscription ( `consumer.subscriptions.create`) in a Stimulus controller during `Controller::connect()` and unsubscribe (`subscription.unsubscribe`) in `Controller::disconnect()`. One of the websocket messages reloads the page (via Turbolinks). Turbolinks replaces parts of the DOM, thus recreating the Stimulus controller, which in turn leads to the resubscription to the same channel.\r\n\r\nAfter a long debugging session, I finally noticed that sometimes the subscription would not get confirmed. Turns out that resubscribing (i.e. unsubscribe quickly followed by subscribe) to the same channel sometimes results in the server not confirming the subscription. Screenshots from Chrome WS Messages in Network tab.\r\n\r\nNormal behavior in (confirmation received):\r\n\r\n![image](https://user-images.githubusercontent.com/2707380/76101622-0382e380-5fcf-11ea-9e28-f4155659f090.png)\r\n\r\nUnexpected behavior (no confirmation received):\r\n\r\n![image](https://user-images.githubusercontent.com/2707380/76101696-23b2a280-5fcf-11ea-9a06-ba3281041b29.png)\r\n\r\nI digged deeper into the ActionCable source, added some debug messages and it seems that in those \"subscription losing\" cases the two messages get handled by different threads  at the same time, and the `subscribe` message gets handled before the `unsubscribe` message. This is problematic since https://github.com/rails/rails/blob/b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c/actioncable/lib/action_cable/connection/subscriptions.rb#L31 is  preventing the creation of a new subscription, so the `subscribe` message is practically ignored. Meanwhile, a tiny bit later, the `unsubscribe` message will remove the only existing subscription. \r\n\r\nSo this race condition leads to an unexpected \"loss of subscription\". And it seems that even the ~40ms delay between unsubscribe and subscribe (see previous screenshot) can cause such a loss in unfortunate circumstances. I encountered this on Rails 5.2.4 with the aforementioned Stimulus+Turbolinks setup, and recreated this issue in a fresh new Rails app with 6.0.2.1, using this [piece of code](https://gist.github.com/stevschmid/e2c8b9474535c1085c8a56ddad2276a2) to automatically resubscribe until `connected()` would not get called anymore (i.e. in case of lack of confirmation). Setting the `DELAY_RESUBSCRIBE` in the Gist example to `0` causes the problem to appear nearly instantly for me. But even with a value of `10`, such a loss occurs after a couple of minutes.\r\n\r\n![image](https://user-images.githubusercontent.com/2707380/76102075-bf441300-5fcf-11ea-8ad4-8777e43aa723.png)\r\n\r\nCulprit seems to be [this return](https://github.com/rails/rails/blob/b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c/actioncable/lib/action_cable/connection/subscriptions.rb#L31), which according to blame has its origin in another race condition addressing PR #26547. Removing this line solves the issue for me, since `subscribe` simply creates a second subscription for the same channel, whereas the subsequent `unsubscribe` pops on of those, leaving me with one subscription. So in that case the order of the handling does not matter. I didn't have time yet to dig into PR #26547 and find out why that `return` is necessary. \r\n\r\n### Steps to reproduce\r\n\r\n`unsubscribe` and quickly (re)`subscribe` to the same ActionCable channel. See [Gist](https://gist.github.com/stevschmid/e2c8b9474535c1085c8a56ddad2276a2) \r\n\r\n### Expected behavior\r\n\r\nResubscription is always confirmed\r\n\r\n![image](https://user-images.githubusercontent.com/2707380/76101622-0382e380-5fcf-11ea-9e28-f4155659f090.png)\r\n\r\n### Actual behavior\r\n\r\nResubscription is sporadically not getting confirmed\r\n\r\n![image](https://user-images.githubusercontent.com/2707380/76101696-23b2a280-5fcf-11ea-9a06-ba3281041b29.png)\r\n\r\n### System configuration\r\n**Rails version**: Tested 5.2.4 and 6.0.2.1\r\n\r\n**Ruby version**: ruby 2.6.1p33\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/38668/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2707380,
        "closed_by_id": 28418009,
        "label_ids": [
            12449438
        ],
        "reactions_total_count": 8,
        "reactions_plus1": 8,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2526661943,
        "number": 52936,
        "title": "[ci-skip][docs] Use 'change_column_null' instead of 'change_column_default'",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T23:59:43Z",
        "updated_at": "2024-09-16T10:20:25Z",
        "closed_at": "2024-09-16T10:20:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the \"Changing Columns\" section in the Rails Guides contains a typo. It incorrectly mentions using `change_column_default` to change a null constraint, whereas the correct method is `change_column_null`. This correction is important to prevent confusion for developers referencing the documentation.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the method name from `change_column_default` to `change_column_null` in the \"Changing Columns\" section of the Rails Guides. This ensures that the documentation accurately reflects the proper method used to modify null constraints on a column.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52936/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 88877589,
        "closed_by_id": 12642,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52936.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52936.patch",
        "pull_request_merged_at": "2024-09-16T10:20:25Z"
    },
    {
        "id": 1267536894,
        "number": 45320,
        "title": "[Bug] ActiveRecord: Association's validations are ran only on create when assigning with *_ids=",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-06-10T13:21:30Z",
        "updated_at": "2024-09-16T10:08:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n**Models:**\r\n```\r\nclass User < ApplicationRecord\r\n  has_many :project_users, dependent: :destroy, inverse_of: :user\r\n  has_many :projects, through: :project_users\r\n  \r\n  validates :name, presence: true\r\nend\r\n\r\nclass Project < ApplicationRecord\r\n  has_many :project_users, dependent: :destroy\r\n  has_many :users, through: :project_users\r\nend\r\n\r\nclass ProjectUser < ApplicationRecord\r\n  belongs_to :project\r\n  belongs_to :user\r\nend\r\n```\r\n\r\n```\r\nu = User.new(\"email: \"test@example.com\", name: nil)\r\nu.valid? => false (name is nil)\r\nu.save(validate: false) => true\r\n\r\nGenerates an error:\r\nProject.create!(name: \"Test\", user_ids: [u.id])\r\n=> Exception because user is invalid\r\n\r\nThis doesn't generate an error\r\np = Project.create!(name: \"test\")\r\np.update!(user_ids: [u.id])\r\n=> true\r\n```\r\n\r\n### Expected behavior\r\n\r\nOne of these 2:\r\n1. Run validation in every case\r\n2. Never run validation\r\n\r\n\r\n### Actual behavior\r\n\r\nValidations are executed on create but not on update.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.0\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/45320/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "user_id": 63726983,
        "closed_by_id": 28418009,
        "label_ids": [
            107191,
            41328116
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1762165544,
        "number": 48510,
        "title": "Allow default CSP setup to work with empty sessions",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-06-18T07:50:25Z",
        "updated_at": "2024-09-16T08:10:50Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nFixes https://github.com/rails/rails/issues/48463\r\n\r\nSince https://github.com/rails/rails/pull/43227, the default CSP suggested in the initializer does not work with empty sessions. See [this comment](https://github.com/rails/rails/pull/43227#issuecomment-1191692615) for an example issue and workaround.\r\n\r\n### Detail\r\n\r\nThis PR just adds a fallback in case the session has not been loaded. I also updated the railties test to match the config in the default initializer.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48510/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 509837,
        "label_ids": [
            107189,
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/48510.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/48510.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2527299868,
        "number": 52941,
        "title": "[ci-skip][docs]Fix log message inconsistency in hash_password method",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-16T00:36:08Z",
        "updated_at": "2024-09-16T06:08:01Z",
        "closed_at": "2024-09-16T06:07:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because there was a minor inconsistency in the \"3.1.2 Save Callbacks\" section of the Active Record Callbacks guide. The log message in the `hash_password` method and the IRB output did not match, which could cause confusion for readers.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the IRB output in the documentation to match the log message in the `hash_password` method. Specifically, it updates the IRB output from:\r\n\r\n```ruby\r\nPassword encrypted for user with email: jane.doe@example.com\r\n```\r\n\r\nto:\r\n\r\n```ruby\r\nPassword hashed for user with email: jane.doe@example.com\r\n```\r\n\r\nThis ensures consistency between the code example and the IRB output.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\nNo additional changes were made. This fix improves the clarity and accuracy of the documentation.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52941/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 88877589,
        "closed_by_id": 28561,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52941.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52941.patch",
        "pull_request_merged_at": "2024-09-16T06:07:43Z"
    },
    {
        "id": 2527291972,
        "number": 52940,
        "title": "[ci-skip][docs]Fix log message inconsistency in hash_password method",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-16T00:26:01Z",
        "updated_at": "2024-09-16T00:34:49Z",
        "closed_at": "2024-09-16T00:34:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because there was a minor inconsistency in the \"3.1.2 Save Callbacks\" section of the Active Record Callbacks guide. The log message in the `hash_password` method and the IRB output did not match, which could cause confusion for readers.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the IRB output in the documentation to match the log message in the `hash_password` method. Specifically, it updates the IRB output from:\r\n\r\n```ruby\r\nPassword encrypted for user with email: jane.doe@example.com\r\n```\r\n\r\nto:\r\n\r\n```ruby\r\nPassword hashed for user with email: jane.doe@example.com\r\n```\r\n\r\nThis ensures consistency between the code example and the IRB output.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\nNo additional changes were made. This fix improves the clarity and accuracy of the documentation.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52940/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 88877589,
        "closed_by_id": 88877589,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52940.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52940.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2527216111,
        "number": 52938,
        "title": "Stop recommending Redis in the default Gemfile",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-15T21:44:58Z",
        "updated_at": "2024-09-16T00:09:11Z",
        "closed_at": "2024-09-16T00:08:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\nThanks for contributing to Rails!\n\nPlease do not make *Draft* pull requests, as they still send\nnotifications to everyone watching the Rails repo.\n\nCreate a pull request when it is ready for review and feedback\nfrom the Rails team :).\n\nIf your pull request affects documentation or any non-code\nchanges, guidelines for those changes are [available\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\n\nAbout this template\n\nThe following template aims to help contributors write a good description for their pull requests.\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\n\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\n\n### Motivation / Background\n\n<!--\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\n-->\n\nThis Pull Request has been created because recommending Redis for production environment no longer makes sense when configuring Solid Cable for production by default\n\n### Detail\n\nThis Pull Request removes Redis from the default Gemfile\n\n### Additional information\n\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\n\n### Checklist\n\nBefore submitting the PR make sure the following are checked:\n\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\n* [x] Tests are added or updated if you fix a bug or add a feature.\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52938/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 46098928,
        "closed_by_id": 46098928,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52938.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52938.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1782847017,
        "number": 48617,
        "title": "strict_loading error in Association#find_target",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-06-30T16:53:17Z",
        "updated_at": "2024-09-15T19:07:00Z",
        "closed_at": "2023-07-05T19:48:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI'm not sure what a minimal representation would be.  We've been running a large application on rails 7.0.5 for a while, but a recent change caused the following error:\r\n\r\n```\r\nThe :mode option must be one of [:all, :n_plus_one_only].\r\nruby/3.1.4/lib/ruby/gems/3.1.0/gems/activerecord-7.0.5/lib/active_record/core.rb:663:in `strict_loading!'\r\nruby/3.1.4/lib/ruby/gems/3.1.0/gems/activerecord-7.0.5/lib/active_record/associations/association.rb:237:in `block in find_target'\r\nruby/3.1.4/lib/ruby/gems/3.1.0/gems/activerecord-7.0.5/lib/active_record/core.rb:504:in `init_with_attributes'\r\nruby/3.1.4/lib/ruby/gems/3.1.0/gems/activerecord-7.0.5/lib/active_record/persistence.rb:537:in `instantiate_instance_of'\r\nruby/3.1.4/lib/ruby/gems/3.1.0/gems/activerecord-7.0.5/lib/active_record/querying.rb:76:in `block (2 levels) in _load_from_sql'\r\nruby/3.1.4/lib/ruby/gems/3.1.0/gems/activerecord-7.0.5/lib/active_record/result.rb:69:in `each'\r\n```\r\n\r\nwe're not using strict loading anywhere in our code.  It _seems_ this is due to the following in `Association#find_target`:\r\n\r\n```ruby\r\nif owner.strict_loading_n_plus_one_only? && reflection.macro == :has_many\r\n  record.strict_loading!\r\nelse\r\n  record.strict_loading!(false, mode: owner.strict_loading_mode)\r\nend\r\n```\r\n\r\nwhich should maybe be:\r\n```ruby\r\n  record.strict_loading!(false)\r\n```\r\n\r\n### Expected behavior\r\nNo ArgumentError\r\n\r\n### Actual behavior\r\nArgumentError raised\r\n\r\n### System configuration\r\n**Rails version**: 7.0.5\r\n\r\n**Ruby version**: 3.1.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48617/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 131704618,
        "closed_by_id": 22918438,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2342362517,
        "number": 52070,
        "title": "accepts_nested_attributes_for doesn't validate unchanged objects",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-06-09T16:11:48Z",
        "updated_at": "2024-09-15T18:45:47Z",
        "closed_at": "2024-09-15T18:45:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nUpdating records through nested attributes behaves differently than updating records directly if they have validations that are set to run on update only.\r\n\r\n```ruby\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  gem 'rails', '7'\r\n  gem 'sqlite3', '~> 1.7'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :lists, force: true\r\n\r\n  create_table :items, force: true do |t|\r\n    t.integer :list_id\r\n    t.text :name\r\n    t.text :description\r\n  end\r\nend\r\n\r\nclass List < ActiveRecord::Base\r\n  has_many :items\r\n  accepts_nested_attributes_for :items\r\n  \r\n  # Works as expected but with a generic \r\n  # error message (e.g. \"items is invalid\"\r\n  # instead of \"items name must be present\")\r\n  #   validates_associated :items\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  belongs_to :list\r\n  validates :name, presence: true, on: :update\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_updating_item_directly\r\n    list = List.create!\r\n    item = list.items.create!(name: \"\")\r\n\r\n    # Works as expected.\r\n    assert_raises ActiveRecord::RecordInvalid do\r\n        item.update!(name: \"\")\r\n    end\r\n  end\r\n\r\n  def test_updating_unchanged_item_through_parent\r\n    list = List.create!\r\n    item = list.items.create!(name: \"\")\r\n    \r\n    # Doesn't raise anything.\r\n    assert_raises ActiveRecord::RecordInvalid do\r\n        list.update!(\r\n            items_attributes: [\r\n                { \"id\" => item.id, name: \"\" }\r\n            ]\r\n        )\r\n    end\r\n  end\r\n  \r\n  def test_updating_changed_item_through_parent\r\n    list = List.create!\r\n    item = list.items.create!(name: \"\")\r\n    \r\n    # Works as expected if additional attributes\r\n    # of the item are updated.\r\n    assert_raises ActiveRecord::RecordInvalid do\r\n        list.update!(\r\n            items_attributes: [\r\n                { \"id\" => item.id, name: \"\", description: \"\" }\r\n            ]\r\n        )\r\n    end\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\nUpdating an `Item` with a blank name using nested attributes should raise a validation error just like it does when the `Item` is updated directly.\r\n\r\n### Actual behavior\r\nNo error is raised if the object is unchanged. Interestingly, if I include additional attributes to update it works as expected.\r\n\r\nIf I add `validates_associated` to `List` it does raise an error but the message is generic and doesn't include which attribute is invalid.\r\n\r\n### System configuration\r\n**Rails version**: 7\r\n\r\n**Ruby version**: 3\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52070/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 1533384,
        "closed_by_id": 28418009,
        "label_ids": [
            12449438
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1573022682,
        "number": 47278,
        "title": "Add configuration to use string enum as default",
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "dhh",
            "id": 2741,
            "followers_url": "https://api.github.com/users/dhh/followers",
            "following_url": "https://api.github.com/users/dhh/following{/other_user}",
            "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
            "organizations_url": "https://api.github.com/users/dhh/orgs",
            "repos_url": "https://api.github.com/users/dhh/repos",
            "received_events_url": "https://api.github.com/users/dhh/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-02-06T17:54:44Z",
        "updated_at": "2024-09-15T17:27:55Z",
        "closed_at": "2024-09-15T17:27:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This PR introduces a new configuration variable that allows setting string as the default strategy to enum attributes. Many people argue that string enums are more readable and easier to maintain.\r\n\r\n```ruby\r\nconfig.active_record.use_string_database_mapping_for_enum = true\r\n```\r\n\r\n```ruby\r\n# Before\r\nenum status: { proposed: \"proposed\", written: \"written\", published: \"published\" }\r\n\r\n# After\r\nenum status: [:proposed, :written, :published]\r\n```\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/47278/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2651240,
        "closed_by_id": 2741,
        "label_ids": [
            107191,
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/47278.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/47278.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2526611500,
        "number": 52933,
        "title": "[ci-skip][docs] Add missing period in Active Storage guide.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-14T21:21:51Z",
        "updated_at": "2024-09-15T15:09:26Z",
        "closed_at": "2024-09-15T15:09:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes a missing period that threw me off while reading :)\r\n\r\n\r\nBefore:\r\n<img width=\"549\" alt=\"Screenshot 2024-09-14 at 23 31 12\" src=\"https://github.com/user-attachments/assets/996c1821-2809-4efb-a5d9-e68c670c56d2\">\r\n\r\nAfter:\r\n<img width=\"549\" alt=\"Screenshot 2024-09-14 at 23 31 40\" src=\"https://github.com/user-attachments/assets/b065e359-f4f7-4e56-9a3a-58cc26f6b05b\">\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52933/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 323713,
        "closed_by_id": 28561,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52933.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52933.patch",
        "pull_request_merged_at": "2024-09-15T15:09:09Z"
    },
    {
        "id": 2194293557,
        "number": 51347,
        "title": "`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-03-19T08:06:22Z",
        "updated_at": "2024-09-15T13:45:47Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Managed to reproduce CI error.\r\nhttps://buildkite.com/rails/rails/builds/105748#018e558b-b895-43cc-aa80-71180e80d01b/1235-1330\r\n\r\n### Steps to reproduce\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activerecord\r\nbundle install\r\nbundle exec rake db:postgresql:rebuild\r\nARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n \"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/\" --seed 38135\r\n```\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\n`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`.\r\n\r\n```ruby\r\n$ ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n \"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/\" --seed 38135\r\nUsing postgresql\r\nRun options: -n \"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/\" --seed 38135\r\n\r\n# Running:\r\n\r\n...#<Thread:0x000078a1a0d27b38 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:809 run> terminated with exception (report_on_exception is true):\r\n/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache': ERROR:  cached plan must not change result type (ActiveRecord::PreparedStatementCacheExpired)\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'\r\n/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': PG::FeatureNotSupported: ERROR:  cached plan must not change result type (ActiveRecord::StatementInvalid)\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'\r\n/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': ERROR:  cached plan must not change result type (PG::FeatureNotSupported)\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'\r\n\tfrom /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'\r\nFound 1 leaked connections\r\nowner: #<Thread:0x000078a1a0d27ca0 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:799 sleep>\r\nbacktrace:\r\n[\"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `sleep'\", \"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `wait'\", \"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `ns_wait'\", \"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/abstract_lockable_object.rb:47:in `ns_wait_until'\", \"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:87:in `block in wait'\", \"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `block in synchronize'\", \"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'\", \"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'\", \"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:84:in `wait'\", \"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:804:in `block (2 levels) in duel'\", \"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'\", \"/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\", \"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'\", \"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'\", \"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'\", \"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'\", \"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'\", \"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'\", \"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:801:in `block in duel'\"]\r\n\r\nE\r\n\r\nError:\r\nPessimisticLockingTest#test_no_locks_no_wait:\r\nActiveRecord::PreparedStatementCacheExpired: ERROR:  cached plan must not change result type\r\n\r\n    lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache'\r\n    lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache'\r\n    lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'\r\n    lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'\r\n    lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'\r\n    lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'\r\n    lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'\r\n    lib/active_record/querying.rb:62:in `_query_by_sql'\r\n    lib/active_record/querying.rb:51:in `find_by_sql'\r\n    lib/active_record/statement_cache.rb:150:in `execute'\r\n    lib/active_record/core.rb:434:in `cached_find_by'\r\n    lib/active_record/core.rb:255:in `find'\r\n    test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'\r\n    lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'\r\n    lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'\r\n    lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'\r\n    lib/active_record/transactions.rb:223:in `block in transaction'\r\n    lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'\r\n    lib/active_record/connection_handling.rb:270:in `with_connection'\r\n    lib/active_record/transactions.rb:222:in `transaction'\r\n    test/cases/locking_test.rb:812:in `block in duel'\r\n\r\nError:\r\nPessimisticLockingTest#test_no_locks_no_wait:\r\nRuntimeError: Found 1 leaked connection after PessimisticLockingTest#test_no_locks_no_wait\r\n    test/cases/test_case.rb:82:in `check_connection_leaks'\r\n    test/cases/test_case.rb:38:in `after_teardown'\r\n\r\n\r\nbin/test test/cases/locking_test.rb:787\r\n\r\n\r\n\r\nFinished in 1.057243s, 3.7834 runs/s, 10.4044 assertions/s.\r\n4 runs, 11 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux]\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51347/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 73684,
        "label_ids": [
            107191,
            12449438,
            70310659,
            776781281
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2501680175,
        "number": 52779,
        "title": "Use `URI::RFC2396_PARSER` instead of `URI::DEFAULT_PARSER`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-02T23:24:13Z",
        "updated_at": "2024-09-15T13:04:03Z",
        "closed_at": "2024-09-03T23:16:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n\r\n### Motivation / Background\r\n\r\nThis pull request uses `URI::RFC2396_PARSER` instead of `URI::DEFAULT_PARSER`.\r\n\r\n### Detail\r\n\r\nRuby 3.4 changes `URI::DEFAULT_PARSER` to `URI::RFC3986_Parser` and deprecates `URI::RFC3986_PARSER.make_regexp`,`URI::RFC3986_PARSER.escape`, `URI::RFC3986_PARSER.unescape` and `URI::RFC3986_PARSER.extract`.\r\n\r\n```ruby\r\n$ ruby -v\r\nruby 3.4.0dev (2024-08-22T23:47:40Z master fdba458e85) [x86_64-linux]\r\n$ irb -w\r\nirb(main):001> require 'uri'\r\n=> true\r\nirb(main):002> URI::VERSION\r\n=> \"0.13.0\"\r\nirb(main):003> URI::DEFAULT_PARSER.escape(\"/:controller(/:action)\")\r\n(irb):3: warning: URI::RFC3986_PARSER.escape is obsoleted. Use URI::RFC2396_PARSER.escape explicitly.\r\n=> \"/:controller(/:action)\"\r\n```\r\n\r\nuri v0.12.2 for Ruby 3.2/3.1 and v0.13.1 for Ruby 3.3 adds `URI::RFC2396_PARSER`. As of right now there is no way to use uri v0.12.2 for Ruby 3.2/3.1 and v0.13.1 for Ruby 3.3, This commit uses v0.13.1 or higher version for all supported Ruby versions by Rails main branch.\r\n\r\nIt also reverts #52682 because the original issue has been resolved.\r\n\r\n### Additional information\r\nRefer to following URL for the backgrond of this change:\r\n- URI::Generic should use URI::RFC3986_PARSER instead of URI::DEFAULT_PARSER https://bugs.ruby-lang.org/issues/19266\r\n\r\n- Use RFC3986_Parser by default https://github.com/ruby/uri/pull/107\r\n\r\n- Warn compatibility methods in RFC3986_PARSER https://github.com/ruby/uri/pull/114\r\n\r\n- Also warn URI::RFC3986_PARSER.extract https://github.com/ruby/uri/pull/121\r\n\r\n- Define RFC2396_PARSER for Ruby 3.3 https://github.com/ruby/uri/pull/119\r\n\r\n- Define RFC2396_PARSER for Ruby 3.2 and 3.1 https://github.com/ruby/uri/pull/120\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52779/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 73684,
        "closed_by_id": 73684,
        "label_ids": [
            107189,
            107191,
            107194,
            107195,
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52779.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52779.patch",
        "pull_request_merged_at": "2024-09-03T23:16:19Z"
    },
    {
        "id": 2471595385,
        "number": 52638,
        "title": "[ci skip] Update docs and comments to prefer SSL/TLS instead of just SSL",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-08-17T16:57:55Z",
        "updated_at": "2024-09-15T02:02:25Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "The acronym SSL is considered deprecated by the security community and has been replaced by TLS. While both are understood and can usually be used interchangeably, Rails might as well use the modern terminology.\r\n\r\nFor an example on this preference, see Wikipedia article https://en.wikipedia.org/wiki/Transport_Layer_Security\r\n\r\n> TLS builds on the now-deprecated SSL (Secure Sockets Layer)\r\n> specifications ...\r\n\r\nIn the interest of backward compatibility, this change only changes documentation and code comments. It does not alter configuration option names, class names, or other code. If it is preferable to make this change in code as well, followup work can be submitted for this.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52638/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 347634,
        "label_ids": [
            107189,
            107195,
            150377,
            3666649,
            664533972,
            1174770998,
            1180817762
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52638.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52638.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2526614555,
        "number": 52935,
        "title": "Remove sucker_punch ActiveJob::Queue adapter",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-14T21:33:50Z",
        "updated_at": "2024-09-15T00:57:20Z",
        "closed_at": "2024-09-15T00:12:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Removes sucker_punch dependency.\r\nSuckerPunch existed before ActiveJob, but ultimately uses similar code to `AsyncAdapter` under the covers.\r\n\r\nConnected to #52929",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52935/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 7427365,
        "closed_by_id": 2741,
        "label_ids": [
            150377,
            123812746
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52935.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52935.patch",
        "pull_request_merged_at": "2024-09-15T00:12:32Z"
    },
    {
        "id": 2526523328,
        "number": 52930,
        "title": "feat(docs): added authentication information to active_storage_overview docs [ci skip]",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-14T17:22:05Z",
        "updated_at": "2024-09-14T23:54:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because Active Storage direct uploads are public and unauthenticated and there is no clear documented way of adding authentication or rate limiting\r\n\r\n### Detail\r\n\r\nThis Pull Request changes rails/guides/source/active_storage_overview.md to add an authentication example\r\n\r\n### Additional information\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52930/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 42301835,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52930.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52930.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2092565763,
        "number": 50830,
        "title": "Add support for `ActionMailer.*_delivery` callback `only` and `except` options",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-21T12:31:43Z",
        "updated_at": "2024-09-14T23:32:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nCurrently ActionMailer's `*_delivery` callbacks do not support `only` and `except` filters, which are quite useful because some callback actions are required for a subset of mailer methods. Technically, only/except can be emulated via `if` option, but another problem is that's not clear from the documentation which options can be passed (currently `only` and `except` are simply ignored).\r\n\r\nI believe that many developers might except `ActionMailer` to behave just like `ActionController`,  so current API implementation might lead to unexpected bugs.\r\n\r\nNote that documentation on `before_action` (and similar callbacks) explicitly refer to possible options:\r\n\r\n> before_action(names, block)[Link](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_action)\r\n> Append a callback before actions. See [_insert_callbacks](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks) for parameter details.\r\n\r\n### Expected behavior\r\nAt least some explicit info on possible `*_delivery` callback options, or (which would be better) support for `only` and `except` options.\r\n\r\n### Actual behavior\r\nMentioned options are simply ignored, no documentation on possible options.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50830/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39729785,
        "label_ids": [
            107188,
            41328116
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 3,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2498889249,
        "number": 52756,
        "title": "Change controller generators to use _path instead of _url for redirects",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-08-31T14:59:49Z",
        "updated_at": "2024-09-14T21:32:26Z",
        "closed_at": "2024-09-14T21:32:26Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Since HTTP 1.1, you've been allowed to use paths for 3xx redirects. But Rails has had a convention of using full URLs. We should change that. You should only use a full URL when you intend to change the domain or port or other non-path element. So let's set the correct example in generated controllers.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52756/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            384913768
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2526197654,
        "number": 52928,
        "title": "Fix Rubocop offenses for Rails apps without Jbuilder",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T10:10:54Z",
        "updated_at": "2024-09-14T19:11:27Z",
        "closed_at": "2024-09-14T17:36:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Follow-up to https://github.com/rails/rails/pull/51674.\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because if you currently create a new Rails main app with the `--skip-jbuilder` option, scaffolded controllers do not comply with `rubocop-rails-omakase` rules.\r\n\r\nSteps to repro the issue:\r\n\r\n- Run the following\r\n    ```\r\n    rails new myapp --main --skip-jbuilder; cd myapp\r\n    rails generate scaffold post title\r\n    bundle exec rubocop\r\n    ```\r\n- Expected behavior: there should be no Rubocop offenses\r\n- Actual behavior: the are Rubocop offenses:\r\n    ```\r\n    Inspecting 31 files\r\n    ...C...........................\r\n\r\n    Offenses:\r\n\r\n    app/controllers/posts_controller.rb:56:27: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Use space inside array brackets.\r\n          params.expect(post: [:title])\r\n                              ^\r\n    app/controllers/posts_controller.rb:56:34: C: Layout/SpaceInsideArrayLiteralBrackets: Use space inside array brackets.\r\n          params.expect(post: [:title])\r\n                                     ^\r\n    ```\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the controller generators to use spaces around `[` and `]`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52928/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 236461,
        "closed_by_id": 44640,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52928.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52928.patch",
        "pull_request_merged_at": "2024-09-14T17:36:03Z"
    },
    {
        "id": 2526015694,
        "number": 52925,
        "title": "Tweak Gemfile comment about Solid adapters",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T06:01:21Z",
        "updated_at": "2024-09-14T19:10:07Z",
        "closed_at": "2024-09-14T15:56:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Follow-up to https://github.com/rails/rails/commit/1ec7b1970f8.\r\n\r\nDo not mention Action Cable in the Gemfile if the app was generated with `--skip-action-cable`.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52925/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 236461,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52925.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52925.patch",
        "pull_request_merged_at": "2024-09-14T15:56:01Z"
    },
    {
        "id": 2525992510,
        "number": 52923,
        "title": "Do not set up cable database when skipping action cable",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T04:50:46Z",
        "updated_at": "2024-09-14T19:09:25Z",
        "closed_at": "2024-09-14T15:54:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Follow-up to https://github.com/rails/rails/pull/52889 and https://github.com/rails/rails/pull/52919.\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because if you currently create a new Rails Main app with the `--skip-action-cable` option, the generated `database.yml` sets up a `cable` database for the production environment.\r\n\r\nSteps to repro the issue:\r\n\r\n- Run `rails new myapp --main --skip-action-cable; cd myapp`\r\n- Expected behavior: the generated `database.yml` does not set up a `cable` database.\r\n- Actual behavior: the generated `database.yml` sets up a `cable` database:\r\n    ```yaml\r\n    cable:\r\n      <<: *default\r\n      database: storage/production_cable.sqlite3\r\n      migrations_paths: db/cable_migrate\r\n    ```\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the database `.yml.tt` templates to not set up the `cable` database when the `--skip-action-cable` is provided.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52923/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 236461,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 1,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52923.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52923.patch",
        "pull_request_merged_at": "2024-09-14T15:54:59Z"
    },
    {
        "id": 2524614762,
        "number": 52912,
        "title": "Include options when instrumenting ActiveSupport::Cache::Store delete",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-13T11:34:14Z",
        "updated_at": "2024-09-14T18:08:03Z",
        "closed_at": "2024-09-14T17:40:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nI found, when using the cache instrumentation callbacks, that I couldn't access the namespace used for `delete` and `delete_multi` operations, while I could for `read` etc.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `activesupport/lib/active_support/cache.rb`, to pass in `options` into the instrumentation logic.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52912/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 660706,
        "closed_by_id": 44640,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52912.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52912.patch",
        "pull_request_merged_at": "2024-09-14T17:40:27Z"
    },
    {
        "id": 2524193021,
        "number": 52910,
        "title": "bump solid_cable to fix tests",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-13T08:19:46Z",
        "updated_at": "2024-09-14T17:37:12Z",
        "closed_at": "2024-09-14T17:37:11Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Same as #52891 but that was closed.\r\n\r\nI was able to reproduce [this build failure](https://buildkite.com/rails/rails/builds/111326#0191ea6f-1c10-42f4-9940-c8b6c942a4be) once or twice on my machine. But after trying to debug it, I was unable to reproduce it again.\r\n\r\nSo let's just try this in CI and see if it works.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52910/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "closed_by_id": 44640,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52910.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52910.patch",
        "pull_request_merged_at": "2024-09-14T17:37:11Z"
    },
    {
        "id": 400379221,
        "number": 34961,
        "title": "ActiveStorage: no authentication for direct uploads?",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-01-17T17:16:50Z",
        "updated_at": "2024-09-14T15:56:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The only security measure `ActiveStorage::DirectUploadsController` has is `protect_from_forgery with: :exception`. The `DirectUpload` js client fetches the csrf token from the page header to pass this security check: `this.xhr.setRequestHeader(\"X-CSRF-Token\", getMetaValue(\"csrf-token\"))`.\r\n\r\nSince any Rails generated pages may have this token, The door to upload files is open. Some ActiveStorage users are using ActiveStorage to provide permanent public image links. If the public link can be guessed from the blob information that `DirectUpload` js client gets, unauthorized users may be able to upload and share files.\r\n\r\nBecause a direct upload input behaves like a form, I think we should apply the idea of per form csrf token. This means each input field with `direct_upload: true` should have a direct upload csrf token. If a page has multiple such fields, these fields can share the same token. This way, only users with access to pages with direct upload fields can have this token. \r\n\r\nOr even better, the controller can optionally accept a proc to authenticate user. And `DirectUpload` should accordingly allow setting custom headers. This will also be useful to API only Rails apps.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/34961/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 4378997,
        "closed_by_id": 28418009,
        "label_ids": [
            91966972,
            664533972
        ],
        "reactions_total_count": 18,
        "reactions_plus1": 18,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2523059250,
        "number": 52903,
        "title": "Add check constraint should be invertible if invalid option provided",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-12T18:19:20Z",
        "updated_at": "2024-09-14T13:33:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nIf you have a migration that calls `add_check_constraint` with an invalid option then the migration works in the `up` direction but fails in the `down` direction. This was opened as https://github.com/rails/rails/issues/52419\r\n\r\n### Detail\r\n\r\nThe following migration would work in the `up` direction but fails to find the check constraint in the `down` direction. \r\n\r\n```ruby\r\nclass AddCheckConstraintWithInvalidOptionMigration < ActiveRecord::Migration::Current\r\n     def change\r\n        add_check_constraint :horses, \"age >= 0\", name: \"positive_age\", invalid_option: true\r\n     end\r\nend\r\n```\r\n\r\nThe error for SQLite would be:\r\n\r\n```\r\nArgumentError: Table 'horses' has no check constraint for age >= 0\r\n    lib/active_record/connection_adapters/abstract/schema_statements.rb:1788:in `check_constraint_for!'\r\n    lib/active_record/connection_adapters/sqlite3/schema_statements.rb:116:in `remove_check_constraint'\r\n```\r\n\r\nThe issue affects all the database adapters.\r\n\r\nThe issue is caused by the `invalid_option` not being used in the `up` direction but being used to find the constraint in the `down` direction. Fix is to just filter the options used by `remove_check_constraint` to only valid options.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52903/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1769416,
        "closed_by_id": 1769416,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52903.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52903.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2525525447,
        "number": 52916,
        "title": "Add if_not_exists option to add_enum_value",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-13T19:23:45Z",
        "updated_at": "2024-09-14T13:02:26Z",
        "closed_at": "2024-09-14T05:01:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background / Detail\r\n\r\nAdds support to use the PostgreSQL option `IF NOT EXISTS` when adding enum values via `add_enum_value`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52916/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 11340522,
        "closed_by_id": 12642,
        "label_ids": [
            107191,
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52916.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52916.patch",
        "pull_request_merged_at": "2024-09-14T05:01:28Z"
    },
    {
        "id": 2526003831,
        "number": 52924,
        "title": "Remove Redis mention from Gemfile",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-14T05:25:49Z",
        "updated_at": "2024-09-14T11:59:28Z",
        "closed_at": "2024-09-14T11:42:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Follow-up to https://github.com/rails/rails/pull/52889.\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because now that the default Action Cable adapter is Solid Cache, which uses a traditional database, there is no need to mention Redis in the Gemfile. Redis was only mentioned because of Action Cable.\r\n\r\nWhat's more, PR https://github.com/rails/rails/pull/52889 mentions the following:\r\n\r\n> Solid Cable is the last piece before we can fully claim that Rails 8 only requires a database as a dependency to get access to all frameworks and functionality\r\n\r\nSo Redis should not be needed any more.\r\n\r\n### Detail\r\n\r\nThis Pull Request removes the `cable_gemfile_entry` method from the app generator. This method was responsible for adding a commented-out Redis mention to the Gemfile.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52924/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 236461,
        "closed_by_id": 236461,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52924.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52924.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2525750771,
        "number": 52919,
        "title": "Skip solid_cable gem if skip_action_cable is set",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-13T21:50:31Z",
        "updated_at": "2024-09-14T11:43:42Z",
        "closed_at": "2024-09-13T22:08:41Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "This fixes the failing test on main (probably as of the solid_cable 3.0 release a couple hours ago)\r\n\r\n```\r\nAppGeneratorTest#test_app_update_does_not_generate_action_cable_contents_when_skip_action_cable_is_given\r\n```\r\n\r\nIf this isn't the right fix please don't hesitate to revert.\r\n\r\ncc @dhh @npezza93 \r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52919/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 131752,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 3,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52919.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52919.patch",
        "pull_request_merged_at": "2024-09-13T22:08:41Z"
    },
    {
        "id": 2352177495,
        "number": 52122,
        "title": "Add propshaft specs for railties new default",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-06-13T22:47:15Z",
        "updated_at": "2024-09-14T10:21:51Z",
        "closed_at": "2024-09-14T01:32:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nIn https://github.com/rails/rails/pull/51799 @dhh changed asset pipeline default to Propshaft in Rails 8; specs assumed sprockets though so the new default isn't being tested.\r\n\r\n@fedesapuppo and I reconvert `test/application/assets_test.rb` to test the propshaft default (dropping several sprockets-specific tests now unneeded), and duplicated the original file into a `test/application/sprockets_assets_test.rb` to continue testing that option. Both run fine independently, but loading them together leaves the propshaft railtie loaded for both versions, messing with the sprockets configuration and tests. How could we decouple them properly?\r\n\r\nThanks to @rafaelfranca for helping us get started generating a template app for each asset pipeline option.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] [doesn't apply] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] [doesn't apply] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52122/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 54260,
        "closed_by_id": 277819,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52122.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52122.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2266721717,
        "number": 51674,
        "title": "Add `Parameters#expect` to safely filter and require params",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 85,
        "created_at": "2024-04-27T02:33:33Z",
        "updated_at": "2024-09-14T10:12:41Z",
        "closed_at": "2024-09-07T22:38:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nI've been hunting around trying to fix the problem with the default, recommended way of handling parameters in Rails.\r\n\r\n```ruby\r\nuser_params = params.require(:user).permit(:name, :age)\r\n```\r\n\r\nThis is fine until someone using your app starts messing with the parameters and causing 500 errors by passing:\r\n\r\n```\r\n/path?user=string\r\n```\r\n\r\nThis causes a NoMethodError because `permit` is called on `\"string\"`.\r\n\r\nThe recommendation is not the best way. Instead, the first statement should be written like this:\r\n\r\n```ruby\r\nuser_params = params.permit(user: [:name, :age]).require(:user)\r\n```\r\n\r\n### Detail\r\n\r\nIn this PR, I propose a new method on ActionController::Parameters that safely handles params filtering in one method, cuts down on ignorable errors caused by params tampering, and improves the specificity of param types.\r\n\r\n```ruby\r\nparams = ActionController::Parameters.new(user: { name: \"Martin\", age: 40 })\r\npermitted = params.expect(user: %i[name age])\r\npermitted.permitted?   # => true\r\npermitted.has_key?(:name) # => true\r\npermitted.has_key?(:age) # => true\r\n```\r\n\r\nIn order to ensure consistent filtering of hashes vs arrays in params, `expect` introduces a new Array matching syntax using a double array `[[:attr]]`. (this example uses shorthand for all but the first example to make it more readable. The hashes returned are actually permitted ActionController::Parameter objects)\r\n\r\n```ruby\r\n# Array is expected with `permit`\r\nActionController::Parameters.new(comments: { text: \"Hello\" }).permit(comments: [:text]).require(:comments)\r\n# => #<ActionController::Parameters {\"text\"=>\"Hello\"} permitted: true>\r\nActionController::Parameters.new(comments: [{ text: \"Hello\" }]).permit(comments: [:text]).require(:comments)\r\n# => [{\"text\"=>\"Hello\"}]\r\nParameters.new(comments: { text: \"Hello\" }).permit(comments: [[:text]]).require(:comments)\r\n# => param is missing or the value is empty: comments (ActionController::ParameterMissing)\r\nParameters.new(comments: [{ text: \"Hello\" }]).permit(comments: [[:text]]).require(:comments)\r\n# => [{\"text\"=>\"Hello\"}]\r\n\r\n# Array is expected with `expect`\r\nParameters.new(comments: { text: \"Hello\" }).expect(comments: [[:text]])\r\n# => param is missing or the value is empty: comments (ActionController::ParameterMissing)\r\nParameters.new(comments: [{ text: \"Hello\" }]).expect(comments: [[:text]])\r\n# => [{\"text\"=>\"Hello\"}]\r\n\r\n# Hash is expected with `permit`\r\nParameters.new(user: { name: \"Martin\" }).permit(user: [:name]).require(:user)\r\n# => {\"name\"=>\"Martin\"}\r\nParameters.new(user: [{ name: \"Martin\" }]).permit(user: [:name]).require(:user)\r\n# => [{\"name\"=>\"Martin\"}]\r\n\r\n# Hash is expected with `expect`\r\nParameters.new(user: { name: \"Martin\" }).expect(user: [:name])\r\n# => {\"name\"=>\"Martin\"}\r\nParameters.new(user: [{ name: \"Martin\" }]).expect(user: [:name])\r\n# => param is missing or the value is empty: user (ActionController::ParameterMissing)\r\n```\r\n\r\nAs you can see, permit will expect an array when the \"double array\" syntax is used, but defaults to the old behavior of allowing both arrays and hashes otherwise, maintaining backwards compatibility.\r\n\r\nThis pull request also adds the `expect!` method. `expect!` raises an unhandled error in cases where `expect` would raise a handled error that would return a 400 bad request. The unhandled error can be used in cases where it is important to be alerted about a client using incorrect syntax (such as a private internal API where the client should be fixed).\r\n\r\nAdds a 400.html template used to render the 400 bad request response.\r\n\r\n### Additional information\r\n\r\nRelated PRs and issues that address this problem:\r\n\r\n* Potentially fixes https://github.com/rails/rails/issues/42953 without changing existing behavior.\r\n* https://github.com/rails/rails/pull/44297 triggered me to dig into this more, where I arrived at this solution.\r\n* Fixes https://github.com/rails/rails/issues/52463\r\n* Fixes https://github.com/rails/rails/issues/42953\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51674/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 989,
        "closed_by_id": 2741,
        "label_ids": [
            107189,
            107195,
            150377,
            3666649,
            664533972,
            1174770998,
            1180817762
        ],
        "reactions_total_count": 9,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 2,
        "reactions_rocket": 7,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51674.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51674.patch",
        "pull_request_merged_at": "2024-09-07T22:38:41Z"
    },
    {
        "id": 2043596006,
        "number": 50364,
        "title": "ApplicationTests::AssetsTest#test_precompile_shouldn't_use_the_digests_present_in_manifest.json test failures",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-12-15T11:54:50Z",
        "updated_at": "2024-09-14T09:53:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nRunning Railties test suite on Fedora Rawhide, I am observing following test error more often then not (two last runs):\r\n\r\n~~~\r\n$  bundle exec ruby -Itest test/application/assets_test.rb -n \"/test_precompile_shouldn't_use_the_digests_present_in_manifest.json/\"\r\nRun options: -n /test_precompile_shouldn't_use_the_digests_present_in_manifest.json/ --seed 27991\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nApplicationTests::AssetsTest#test_precompile_shouldn't_use_the_digests_present_in_manifest.json [test/application/assets_test.rb:299]:\r\nExpected \"application-c56ef81d122dffa8b257b0546ba1b09bd2d8b97e4aef881de8db9f760b903af6.css\" to not be equal to \"application-c56ef81d122dffa8b257b0546ba1b09bd2d8b97e4aef881de8db9f760b903af6.css\".\r\n\r\n\r\nrails test test/application/assets_test.rb:282\r\n\r\n\r\n\r\nFinished in 0.668613s, 1.4956 runs/s, 1.4956 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n\r\n\r\n$  bundle exec ruby -Itest test/application/assets_test.rb -n \"/test_precompile_shouldn't_use_the_digests_present_in_manifest.json/\"\r\nRun options: -n /test_precompile_shouldn't_use_the_digests_present_in_manifest.json/ --seed 62499\r\n\r\n# Running:\r\n\r\n.\r\n\r\nFinished in 0.653927s, 1.5292 runs/s, 1.5292 assertions/s.\r\n1 runs, 1 assertions, 0 failures, 0 errors, 0 skips\r\n~~~\r\n\r\nThe whole test setup, trying to replicate the Rails git directory structure can be seen [here](https://src.fedoraproject.org/rpms/rubygem-railties/blob/f81fd59f8c25811e5d46bb2d0697db2d96ebaaf8/f/rubygem-railties.spec#_120-227)\r\n\r\n### Expected behavior\r\nThe test passes every time\r\n\r\n### Actual behavior\r\nThe test passes sometime\r\n\r\n### System configuration\r\n**Rails version**: 7.0.8\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50364/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "user_id": 14406,
        "closed_by_id": 28418009,
        "label_ids": [
            128693,
            149514554
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2498156424,
        "number": 52754,
        "title": "params.deep_transform_keys! doesn't work with camelCased json payloads (ActionController)",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-30T20:51:10Z",
        "updated_at": "2024-09-14T08:15:45Z",
        "closed_at": "2024-09-14T08:15:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nApplicationController:\r\n```\r\nbefore_action :underscore_params!\r\n\r\ndef underscore_params!\r\n    params.deep_transform_keys!(&:underscore)\r\nend\r\n\r\n```\r\n\r\nTestCaseController:\r\n```\r\ndef create\r\n    @test_case = TestCase.new(permitted_params)\r\n    \r\n    if @test_case.save\r\n      render status: :created\r\n    else\r\n      render status: :unprocessable_entity\r\n    end\r\n  end\r\n\r\ndef permitted_params\r\n    params.require(:test_case).permit(:field_one, :field_two)\r\nend\r\n```\r\n\r\nCreate a POST request with following json payload:\r\n```\r\n{ testCase: { fieldOne: \"test\", fieldTwo: \"case\" }\r\n```\r\n\r\n### Expected behavior\r\ndeep_transform_keys! underscores the keys of delivered params to...\r\n\r\n```\r\n{ test_case: field_one: \"test\", field_two: \"test\" }\r\n```\r\n\r\n### Actual behavior\r\nOutput of params before deep_transform_keys!:\r\n```\r\n<ActionController::Parameters {\"testCase\"=>{\"fieldOne\"=>\"test, \"fieldTwo\"=>\"case\"}, \"controller\"=>\"api/test_cases\", \"action\"=>\"create\", \"test_case\"=>{}} permitted: false>\r\n```\r\nOutput of params after deep_transform_keys!:\r\n```\r\n<ActionController::Parameters {\"test_case\"=>{}, \"controller\"=>\"api/test_cases\", \"action\"=>\"create\"} permitted: false>\r\n```\r\nAs you can see there exists already a empty hash named **test_case** before deep_transform_keys was called.\r\nMy impression is that a empty hash with downcased model name (:test_case) is created if no such named hash was delivered.\r\nNow deep_transform_keys! can`t rename **TestCase** to **test_case** because this name already exists.\r\n\r\nIn a scenario without camelCased names (e.g. \"CaseController\" and { case: { field: \"test\" }} as json payload) , there are no problems.\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52754/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 38752,
        "closed_by_id": 28418009,
        "label_ids": [
            107189,
            1071962662
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2525981715,
        "number": 52922,
        "title": "[ci-skip][docs] Add missing migration version to Active Record Basic …",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T04:15:48Z",
        "updated_at": "2024-09-14T07:53:49Z",
        "closed_at": "2024-09-14T04:48:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis small fix is similar to https://github.com/rails/rails/pull/52920 but for `7-2-stable` branch.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds the missing migration version.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52922/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 4289625,
        "closed_by_id": 12642,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52922.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52922.patch",
        "pull_request_merged_at": "2024-09-14T04:48:43Z"
    },
    {
        "id": 2525979671,
        "number": 52921,
        "title": "[ci-skip][docs] Backport #52770 (Update active_record_basics.md)",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T04:09:34Z",
        "updated_at": "2024-09-14T07:53:44Z",
        "closed_at": "2024-09-14T04:49:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I found https://github.com/rails/rails/pull/52770 can also be backported to `7-2-stable` branch.\r\n\r\n### Detail\r\n\r\nThis Pull Request cherry-picks the commits from https://github.com/rails/rails/pull/52770 and squash them.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52921/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 4289625,
        "closed_by_id": 12642,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52921.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52921.patch",
        "pull_request_merged_at": "2024-09-14T04:49:03Z"
    },
    {
        "id": 2525971471,
        "number": 52920,
        "title": "[ci-skip][docs] Add missing migration version to Active Record Basic guide",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T03:43:48Z",
        "updated_at": "2024-09-14T07:53:38Z",
        "closed_at": "2024-09-14T04:48:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because a contributor notified us the migration version is missing in Active Record Basic guide.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52920/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 4289625,
        "closed_by_id": 12642,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52920.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52920.patch",
        "pull_request_merged_at": "2024-09-14T04:48:24Z"
    },
    {
        "id": 2526032854,
        "number": 52926,
        "title": "set `options[:javascript]` to `nil` for APi-only app",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-14T06:43:44Z",
        "updated_at": "2024-09-14T07:41:37Z",
        "closed_at": "2024-09-14T06:58:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because it.\r\n\r\n### Detail\r\n\r\nThis Pull Request sets the `options[:javascript]` to `nil` for API-only apps. The reason for doing this is so that when Rails generates the CI files, it doesn't generate `scan_js` workflow. The `scan_js` workflow will only generate if the `options[javascript]` is set to `importmaps` as intended.\r\n\r\n### Additional information\r\n\r\nI am not yet able to figure out how to test this. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52926/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 10782481,
        "closed_by_id": 10782481,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52926.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52926.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2119798489,
        "number": 50979,
        "title": "Action Cable server adapterization",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 34,
        "created_at": "2024-02-06T02:13:01Z",
        "updated_at": "2024-09-14T05:15:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis PR aims to make Action Cable more flexible and extensible as a library/framework by separating low-level, implementation specific details (e.g., handling WebSockets, dealing with concurrency) from abstractions (Connection, Channel classes). That would make it possible to use user-level Action Cable code with alternative web servers or execution models (e.g., Fibers) without rewriting it or monkey-patching internals.\r\n\r\n> [!TIP]\r\n> You can find a more detailed description of the problem, motivation and potential benefits of such refactoring in [this document](https://docs.google.com/document/d/1oGf86NAzQL9sDw6rTfUNSe3mzzg7wX64sc34D-_3EDI/edit#heading=h.d3db1fd03ano).\r\n\r\n> [!NOTE] \r\n> This PR does not introduce any significant new features or public API breaking changes. It doesn't affect the existing functionality of built-in Action Cable server.\r\n\r\n### Detail\r\n\r\nThe changes are grouped into commits to reflect the following major changes.\r\n\r\n1) **Reorganizing threaded executors**. \r\n\r\nAction Cable relies on two threaded executors right now: one to perform user-space code (Worker) and another one to perform internal async operations around pub/sub. The latter was for some (historical?) reason hidden within the `StreamEventLoop` class that implements and IO loop to perform read/write operations on sockets. I've extracted the executor and promoted it into a server attribute independent of IO event loop. The main motivation of this extraction is not only in enforcing SoC but to separate WebSocket-specific code from more generic async executor used throughout the codebase.\r\n\r\nI've also wrapped the Concurrent Ruby threaded executor into a custom class with a minimal interface (`#post`, `#timer` and `#shutdown` methods), so it will be possible to configure a custom executor for a server in the future (one use-case we have in mind is using a Fiber-based executor instead of a Thread-based one).\r\n\r\nNote that this PR doesn't include any configuration-related code (e.g., to support smth like `config.action_cable.async_executor = :fiber`) but I'm considering adding something like that in the follow-up PRs.\r\n\r\n2) **Limiting the scope of async operations**.\r\n\r\nThis step is the follow-up to the async executor extraction. We have a few places in the Channel internals which directly refer to the `event_loop` but they're all related to pub/sub operations. So, to avoid unnecessary async operations at the abstraction level, I moved all it to the pub/sub layer by and standardized it across adapters by using a `SubscriberMap::Async` subclass.\r\n\r\nPreviously, we might have double async calls when performing `#stream_from` (one from the channel and one from the pub/sub adapter); now it's up to the adapter whether to create subscriptions asynchronously or not. We shouldn't duplicate this logic.\r\n\r\n3) **Splitting ActionCable::Connection::Base into ActionCable::Connection::Base and ActionCable::Server::Connection**\r\n\r\nToday, the Connection class knows about everything from performing user code to setting up WebSocket event listeners to dealing with Rails executor wrapping. That prevents from reusing this class in environments when we don't need to deal with all of these (non-WebSocket servers or unit tests, more about them below).\r\n\r\nThis change is mostly code reorganization and minor tests updates (e.g., we no longer need to always use `run_in_eventmachine`, because now we deal with pure Ruby classes).\r\n\r\nSo, now we have two types of connections: low-level Server::Connection and application-level Connection::Base. The _communicate_ with each other via the following interfaces:\r\n\r\n```mermaid\r\nclassDiagram\r\n  class _PubSub {\r\n    subscribe: (channel, handler, callback) -> void\r\n    unsubscribe: (channel, handler) -> void\r\n  }\r\n  \r\n  class _Executor {\r\n    post: (&block) -> void\r\n    timer: (interval, &block) -> handle\r\n  }\r\n  \r\n  class _Server {\r\n    pubsub: _PubSub\r\n    executor: _Executor\r\n    config: Configuration \r\n  }\r\n  \r\n  class _Socket {\r\n    logger: Logger\r\n    env: Hash[String, untyped]\r\n    request: Request\r\n    protocol: String\r\n    initialize: (_Server, env) -> void\r\n    transmit: (untyped) -> void\r\n    close: () -> void\r\n    perform_work: (untyped receiver, method_name Symbol, *untyped args) -> void\r\n  }\r\n  \r\n  class _Connection {\r\n    initialize: (_Server, _Socket) -> void\r\n    handle_open: () -> void\r\n    handle_incoming: (payload) -> void\r\n    handle_close: () -> void\r\n    beat: () -> void\r\n    statistics: () -> Hash[Symbol, untyped]\r\n  }\r\n  \r\n  _Server --> _PubSub\r\n  _Server --> _Executor\r\n  _Connection --> _Socket\r\n  _Connection --> _Server\r\n```\r\n\r\n### Examples / follow-ups\r\n\r\n> [!IMPORTANT] \r\n> This repository contains examples, tests, and benchmarks for this PR: https://github.com/anycable/action-cable-next-playground\r\n\r\n#### Action Cable testing\r\n\r\n~Here is an example commit (one of the future PRs) demonstrating how this refactoring simplifies Action Cable testing and make it more robust (no patches, real connection and channel classes, etc.)~\r\n\r\nMerged into this PR: [commit](https://github.com/palkan/rails/commit/2a05d5851b6eca2cd9b2eedd0d5a5db8e8afe4d2)\r\n\r\nThe corresponding rspec-rails upgrade is tracked here (minor changes): https://github.com/palkan/rspec-rails/pull/1\r\n\r\n#### Action Cable over SSE\r\n\r\nHere is a sketch of how SSE transport for Action Cable can be implemented (based on the changes from this PR): https://gist.github.com/palkan/270a192e79b05d5601fe497ad3ec83b5\r\n\r\n#### Iodine server implementation\r\n\r\n[Iodine](https://github.com/boazsegev/iodine) comes with native (meaning implemented within the C extension) WebSockets and pub/sub support. We can now leverage these features for Action Cable in an _adapteresque_ way: https://github.com/anycable/action-cable-next-playground/blob/master/lib/servers/iodine.rb\r\n\r\n#### AnyCable integration\r\n\r\nAn upgraded (and less hacky) AnyCable Rails integration is in development here: https://github.com/anycable/anycable-rails/pull/205\r\n\r\n### Other changes\r\n\r\n- [x] Improved error reporting for subscriptions(AlreadySubscribed, ChannelNotFound, etc.)\r\n\r\nPreviously, we ignored some of this malfunction examples or simply wrote error log messages. With the new design, Subscriptions shouldn't make assumptions of how to deal with this violations, they must raise exceptions. Rescue handlers have been moved up the stack for the same reasons.\r\n\r\n### Additional information\r\n\r\nHere is a [Discord thread](https://discord.com/channels/849034466856665118/1168026423001366609) where we discuss the project.\r\n\r\nThere is an old PR attempting to achieve the same goal: https://github.com/rails/rails/pull/27648.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n/cc @ioquatix @matthewd @rafaelfranca ",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50979/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1516722,
        "label_ids": [
            300028327
        ],
        "reactions_total_count": 26,
        "reactions_plus1": 6,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 16,
        "reactions_confused": 0,
        "reactions_heart": 4,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50979.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50979.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2525740609,
        "number": 52918,
        "title": "Action Text generator can now rely on Propshaft",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-13T21:41:18Z",
        "updated_at": "2024-09-14T04:51:06Z",
        "closed_at": "2024-09-14T04:51:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Which means we should not generate Sprockets code any more.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52918/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195,
            150377,
            1180817762
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52918.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52918.patch",
        "pull_request_merged_at": "2024-09-14T04:51:05Z"
    },
    {
        "id": 2520749172,
        "number": 52887,
        "title": "No new apps should be started with sprockets",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 5,
        "created_at": "2024-09-11T20:53:51Z",
        "updated_at": "2024-09-14T04:00:13Z",
        "closed_at": "2024-09-14T04:00:10Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "So remove the -a option and all generated code for sprockets. Sprockets will remain an option for existing applications, though.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52887/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52887.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52887.patch",
        "pull_request_merged_at": "2024-09-14T04:00:10Z"
    },
    {
        "id": 2522608643,
        "number": 52899,
        "title": "Fix railties tests for Propshaft and maintain support for Sprockets",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T14:45:41Z",
        "updated_at": "2024-09-14T03:40:30Z",
        "closed_at": "2024-09-14T03:40:29Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Combine #52122 and fix the remaining failures for #52887.\r\n\r\n> Create `sprockets_assets_test.rb` file that will contain the sprockets-specific tests of `assets_test.rb` (which in turn will contain the tests common to both pipelines).\r\n\r\nI've squashed those commits once I felt confident there was no missing cases, but it might be a useful exercise to review the commits from the other PR as well for those interested.\r\n\r\nThere is one flaky test, but I have seen this flake on main before.\r\n\r\n**(Edit: yup, it was reported in #50364)**\r\n\r\n```\r\n$ bin/test test/application/sprockets_assets_test.rb\r\n\r\n........................E, [2024-09-14T08:35:08.072799 #1983325] ERROR -- : [1ae49fc5-8c5a-48e4-ab4b-0ce5e73f79d0]\r\n[1ae49fc5-8c5a-48e4-ab4b-0ce5e73f79d0] ActionController::RoutingError (No route matches [GET] \"/assets/demo.js\"):\r\n[1ae49fc5-8c5a-48e4-ab4b-0ce5e73f79d0]\r\n..** Invoke assets:precompile (first_time)\r\n** Invoke assets:environment (first_time)\r\n** Execute assets:environment\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Execute assets:precompile\r\nF\r\n\r\nFailure:\r\nApplicationTests::SprocketsAssetsTest#test_precompile_shouldn't_use_the_digests_present_in_manifest.json [test/application/sprockets_assets_test.rb:326]:\r\nExpected \"application-0a89120b13dcff9cb069311101add34ef7717de154816b01622972a4509eb5c9.css\" to not be equal to \"application-0a89120b13dcff9cb069311101add34ef7717de154816b01622972a4509eb5c9.css\".\r\n\r\nbin/test test/application/sprockets_assets_test.rb:307\r\n\r\n..\r\n\r\nFinished in 1.424157s, 20.3629 runs/s, 120.0710 assertions/s.\r\n29 runs, 171 assertions, 1 failures, 0 errors, 0 skips\r\n\r\n$ bin/test test/application/sprockets_assets_test.rb\r\n\r\n........................E, [2024-09-14T08:35:12.994864 #1985849] ERROR -- : [615c9d49-d1bf-40c8-96a6-bf9c76a9a28d]\r\n[615c9d49-d1bf-40c8-96a6-bf9c76a9a28d] ActionController::RoutingError (No route matches [GET] \"/assets/demo.js\"):\r\n[615c9d49-d1bf-40c8-96a6-bf9c76a9a28d]\r\n..** Invoke assets:precompile (first_time)\r\n** Invoke assets:environment (first_time)\r\n** Execute assets:environment\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Execute assets:precompile\r\nI, [2024-09-14T08:35:13.044219 #1986490]  INFO -- : Writing /home/zzak/code/rails/tmp/d20240914-1985782-wcigrx/app/public/assets/rails-6738e33efa7b8d2036e0a0118601555f0b771ac042f6790f7538dd881a1a7f3a.png\r\nI, [2024-09-14T08:35:13.045199 #1986490]  INFO -- : Writing /home/zzak/code/rails/tmp/d20240914-1985782-wcigrx/app/public/assets/application-f1fa81296280307c358b4bd65e4bfd705be90dc5eba7c04dcd1d76ec084c78e7.css\r\nI, [2024-09-14T08:35:13.045508 #1986490]  INFO -- : Writing /home/zzak/code/rails/tmp/d20240914-1985782-wcigrx/app/public/assets/application-f1fa81296280307c358b4bd65e4bfd705be90dc5eba7c04dcd1d76ec084c78e7.css.gz\r\nI, [2024-09-14T08:35:13.045767 #1986490]  INFO -- : Writing /home/zzak/code/rails/tmp/d20240914-1985782-wcigrx/app/public/assets/rails-6738e33efa7b8d2036e0a0118601555f0b771ac042f6790f7538dd881a1a7f3a.png\r\n...\r\n\r\n```\r\n\r\nThanks @tute and @fedesapuppo for the initial push here!",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52899/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52899.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52899.patch",
        "pull_request_merged_at": "2024-09-14T03:40:29Z"
    },
    {
        "id": 923520712,
        "number": 42520,
        "title": "Add top level rails application url",
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "matthewd",
            "id": 1034,
            "followers_url": "https://api.github.com/users/matthewd/followers",
            "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
            "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
            "organizations_url": "https://api.github.com/users/matthewd/orgs",
            "repos_url": "https://api.github.com/users/matthewd/repos",
            "received_events_url": "https://api.github.com/users/matthewd/received_events",
            "type": "User",
            "site_admin": true
        },
        "assignees": [
            {
                "login": "matthewd",
                "id": 1034,
                "followers_url": "https://api.github.com/users/matthewd/followers",
                "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
                "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
                "organizations_url": "https://api.github.com/users/matthewd/orgs",
                "repos_url": "https://api.github.com/users/matthewd/repos",
                "received_events_url": "https://api.github.com/users/matthewd/received_events",
                "type": "User",
                "site_admin": true
            },
            {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 21,
        "created_at": "2021-06-17T06:38:04Z",
        "updated_at": "2024-09-14T00:50:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #39566\r\n\r\n### Other Information\r\n\r\nThe http/request.rb object is a complicated one - with around 6 different modules mixed in - Rack::Helpers, Rack::Env and others. I renamed  ActionDispatch::Http::URL to ActionDispatch::Http::RequestURL as it is mainly building an URL out of the request object, for all the different settings and edge cases. Relying heavily on Rack in the background. Some of the methods, especially around constructing the port - need to stay part of RequestUrl as they are need to build the URL out of the request object and can not move to the URI class, unfortunately.\r\n\r\nOnce the url is build, we parse it and can work with it as an URI object. \r\n\r\nAlso - with the next release of Rack, Rack::Request::Env will be gone and that needs to be reflected in ActionDispatch::Request Class then.\r\n\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/42520/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 7011,
        "label_ids": [
            107188,
            107189,
            107195,
            150377
        ],
        "reactions_total_count": 16,
        "reactions_plus1": 6,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 10,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/42520.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/42520.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 768329160,
        "number": 40855,
        "title": "`ActiveStorage::Current.host` not set causing disk service to throw `URI::InvalidURIError`",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 34,
        "created_at": "2020-12-16T00:15:40Z",
        "updated_at": "2024-09-14T00:40:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n`config/storage.yml`:\r\n\r\n```yaml\r\ntest:\r\n  service: Disk\r\n  root: <%= Rails.root.join(\"tmp/storage\") %>\r\n\r\nlocal:\r\n  service: Disk\r\n  root: <%= Rails.root.join(\"storage\") %>\r\n  public: true\r\n```\r\n\r\n`config/environments/development.rb`:\r\n\r\n```ruby\r\n  # Store uploaded files on the local file system (see config/storage.yml for options).\r\n  config.active_storage.service = :local\r\n```\r\n\r\n`app/models/user.rb`:\r\n\r\n```ruby\r\nclass User < ApplicationRecord\r\n  validates :username, presence: true\r\n\r\n  has_one_attached :avatar\r\n```\r\n\r\n### Expected behavior\r\nIn rails console:\r\n\r\n```ruby\r\nirb> ActiveStorage::Current.host\r\n=> nil\r\n\r\nirb> User.find_by_username('david').avatar.url\r\n=> [should generate permanent url]\r\n```\r\n\r\n### Actual behavior\r\nIn rails console:\r\n\r\n```ruby\r\nirb> ActiveStorage::Current.host\r\n=> nil\r\n\r\nirb> User.find_by_username('david').avatar.url\r\nURI::InvalidURIError (bad URI(is not URI?): nil)\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n`Rails 6.1.0`\r\n\r\n**Ruby version**:\r\n\r\n`ruby 2.7.2p137 (2020-10-01 revision 5445e04352) [x86_64-darwin19]`\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/40855/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "user_id": 8126,
        "closed_by_id": 277819,
        "label_ids": [
            664533972
        ],
        "reactions_total_count": 42,
        "reactions_plus1": 42,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2483844263,
        "number": 52697,
        "title": "Test names are missing after updating to 7.2 when running \"rails test -v\"",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11472308,
            "number": 90,
            "title": "7.2.2",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 5,
            "state": "open",
            "created_at": "2024-08-21T21:24:04Z",
            "updated_at": "2024-09-20T18:52:26Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 5,
        "created_at": "2024-08-23T20:29:53Z",
        "updated_at": "2024-09-13T22:56:32Z",
        "closed_at": "2024-09-13T22:21:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n**The amount of tests should be enough for rails to start running them in parallel.**\r\n\r\n* Run `./bin/rails test -v` with 7.1\r\n* Run `./bin/rails test -v` with 7.2\r\n* Compare output\r\n\r\nWith the new app:\r\n```\r\nbundle exec rails new --skip-docker --skip-jbuilder -f .\r\n./bin/rails g scaffold post author:string title:string\r\n./bin/rails g scaffold tag name:string\r\n./bin/rails g scaffold author name:string\r\n./bin/rails g scaffold category name:string\r\n./bin/rails g scaffold car make:string model:string\r\n./bin/rails g scaffold city name:string location:string\r\n./bin/rails g scaffold parent name:string\r\n./bin/rails g scaffold child name:string\r\n./bin/rails db:migrate\r\n./bin/rails test -v\r\n```\r\n\r\nSetting `parallelize(workers: 1)` in `class ActiveSupport::TestCase` fixes the issue.\r\n\r\n### Expected behavior\r\n\r\n```\r\n$ ./bin/rails test -v\r\n…\r\nPostTest#test_default_order_by_published_at = 0.14 s = .\r\nPostTest#test_: associations should have a has_many_attached called files.  = 0.00 s = .\r\nDriversControllerTest#test_should_redirect_to_drivers_list_when_search_query_is_missing = 0.15 s = .\r\n…\r\n```\r\n\r\n### Actual behavior\r\n\r\n```\r\n$ ./bin/rails test -v\r\n…\r\n0.21 s = .\r\n0.22 s = .\r\n0.20 s = .\r\n…\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: `7.2.1`\r\n**Ruby version**: `3.1.6p260`",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52697/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 110569,
        "closed_by_id": 131752,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2525681414,
        "number": 52917,
        "title": "Call prerecord to fix verbose test runs under parallelization",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-13T20:52:32Z",
        "updated_at": "2024-09-13T22:56:00Z",
        "closed_at": "2024-09-13T22:21:25Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #52697\r\n\r\n`prerecord` is where, when tests are run in verbose mode, the name of the test is printed. Unless we call this the names of tests are missing.\r\n\r\nThis deviates from the vanilla minitest behaviour, which calls prerecord before tests are run even for parallel executors, which can result in interleaved output. We don't want this as it makes it impossible to associate the time or success of a test back to which test is responsible.\r\n\r\nInstead this calls `prerecord` after the test has come back and immediately before calling record while holding a mutex, to ensure the correct time is associated with the correct test.\r\n\r\nI also considered continuing to not call `prerecord` and [instead letting the reporter class deal with it](https://github.com/rails/rails/compare/main...jhawthorn:rails:prerecorded_option2) but I think this PRs approach is cleaner.\r\n\r\n**Before**\r\n\r\n```\r\n0.17 s = .\r\n0.18 s = .\r\n0.17 s = .\r\n```\r\n\r\n**After**\r\n\r\n```\r\nCachedViewRenderTest#test_render_partial_collection_as_by_symbol = 0.17 s = .\r\nLazyViewRenderTest#test_render_partial_collection_as_by_symbol = 0.18 s = .\r\nFrozenStringLiteralEnabledViewRenderTest#test_render_partial_collection_as_by_symbol = 0.17 s = .\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52917/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 131752,
        "closed_by_id": 131752,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 2,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52917.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52917.patch",
        "pull_request_merged_at": "2024-09-13T22:21:25Z"
    },
    {
        "id": 2493113983,
        "number": 52739,
        "title": "Can't access fixture for models named Options (redux)",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-28T22:55:19Z",
        "updated_at": "2024-09-13T22:53:29Z",
        "closed_at": "2024-08-29T11:59:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Accessing a fixture on an `Option` model breaks with the errors down below.  Using the steps to reproduce you start with\r\n\r\n```\r\nclass OptionsControllerTest < ActionDispatch::IntegrationTest\r\n  setup do\r\n    @option = options(:one)\r\n  end\r\n  …\r\n```\r\n\r\nYou have to do the following to get it to work.\r\n\r\n`@option = Option.find(ActiveRecord::FixtureSet.identify(:one))`\r\n\r\nThis is almost identical to Issue https://github.com/rails/rails/issues/10638 but with a new culprit.  Works in Rails 7.0 but 7.1 is broken.  Working on upgrading one of my apps.\r\n\r\nIt appears that [this change](https://github.com/rails/rails/commit/5726b1d1d7665c33830ad114f45258ecf772b7b6#diff-7c57a19207aafe25adcf81324c922c9bda0205db771c91f5365de6eb10197b53L235) introduced this error.  It changed the `path` parameter which is the symbol here from a passive item into the active item having methods called on it.\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrails _7.1.4_ new options\r\ncd options\r\nrails generate scaffold Option\r\nrails db:migrate\r\nrails test\r\n```\r\n\r\n### Expected behavior\r\nThe tests should not throw errors\r\n\r\n### Actual behavior\r\nThe tests throw the following errors.  This is just a sample\r\n\r\n```\r\n❯ rails test\r\nRunning 7 tests in a single process (parallelization threshold is 50)\r\nRun options: --seed 13738\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nOptionsControllerTest#test_should_show_option:\r\nNoMethodError: undefined method `include?' for an instance of Symbol\r\n    test/controllers/options_controller_test.rb:5:in `block in <class:OptionsControllerTest>'\r\n\r\n\r\nbin/rails test test/controllers/options_controller_test.rb:26\r\n\r\n======= excluding five identical test results for other scaffold tests =======\r\n\r\nE\r\n\r\nError:\r\nOptionsControllerTest#test_should_get_new:\r\nNoMethodError: undefined method `include?' for an instance of Symbol\r\n    test/controllers/options_controller_test.rb:5:in `block in <class:OptionsControllerTest>'\r\n\r\nbin/rails test test/controllers/options_controller_test.rb:13\r\n\r\nFinished in 0.075560s, 92.6416 runs/s, 0.0000 assertions/s.\r\n7 runs, 0 assertions, 0 failures, 7 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.1.4\r\n\r\n**Ruby version**:\r\n3.2.5 and 3.3.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52739/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 25407,
        "closed_by_id": 44640,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2494995288,
        "number": 52746,
        "title": "Deprecate `Benchmark.ms` and add `benchmark` to the gemspec",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-08-29T16:16:49Z",
        "updated_at": "2024-09-13T22:28:05Z",
        "closed_at": "2024-09-11T17:44:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nRuby plans to make `benchmark` a bundled gem: https://github.com/ruby/ruby/pull/11492\r\n\r\nIt doesn't make much sense to keep this core extension since rails would need to add it to its gemspec to continue offering it for what basically amounts to `1000 * x`.\r\n\r\nSince requiring it could emit a warning, add it to the gemspec until it can later be removed again with Rails 8.1\r\n\r\nThe benchmark generator will continue to work as usual: It adds `benchmark-ips` to the users Gemfile, which in turn should depend on `benchmark`: https://github.com/evanphx/benchmark-ips/pull/141\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52746/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 14981592,
        "closed_by_id": 47848,
        "label_ids": [
            107189,
            107191,
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52746.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52746.patch",
        "pull_request_merged_at": "2024-09-11T17:44:58Z"
    },
    {
        "id": 2504615432,
        "number": 52793,
        "title": "[ci skip] Fix a documentation name mismatch in cookies.rb",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-04T08:11:14Z",
        "updated_at": "2024-09-13T22:00:18Z",
        "closed_at": "2024-09-13T21:59:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n### Detail\r\n\r\nThe comment in the cookies documentation references a different field than the example below. Align them.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52793/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 561109,
        "closed_by_id": 28561,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52793.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52793.patch",
        "pull_request_merged_at": "2024-09-13T21:59:47Z"
    },
    {
        "id": 2501070622,
        "number": 52769,
        "title": "[Fix #52697] `prerecord` tests that are run in parallel",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-02T14:09:20Z",
        "updated_at": "2024-09-13T21:08:54Z",
        "closed_at": "2024-09-13T21:08:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\nFixes #52697 \r\n\r\n### Detail\r\nPrint test names when running `rails test -v` for parallel tests.\r\n\r\n### Additional information\r\nFollow-up to https://github.com/rails/rails/pull/50984\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52769/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 50948617,
        "closed_by_id": 131752,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52769.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52769.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2341679246,
        "number": 52061,
        "title": "`includes` loads wrong data for scoped `has_many :through` Association when eager loading nested self join",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-08T14:20:26Z",
        "updated_at": "2024-09-13T20:46:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nTo reproduce, run `bin/rails db:reset && bin/rails test test/models/work_test.rb` in this minimal Rails application: https://github.com/Bilka2/includes-polymorphic. Relevant code: https://github.com/Bilka2/includes-polymorphic/commit/578dbf8f92d45f3eca424509236c604e5a7f3fb5\r\n\r\nI could not reproduce the issue with the single file template. However, the code is basically the same as the linked commit, so I am including it anyway:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# This does NOT reproduce the issue, despite containing the same code as the Rails app linked above\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\", \"~> 1.4\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"taggings\", id: :integer, force: :cascade do |t|\r\n    t.integer \"tag_id\"\r\n    t.string \"tag_type\", limit: 100, default: \"\"\r\n    t.integer \"work_id\"\r\n  end\r\n\r\n  create_table \"tags\", id: :integer, force: :cascade do |t|\r\n    t.string \"type\"\r\n    t.integer \"merger_id\"\r\n  end\r\n\r\n  create_table \"works\", id: :integer, force: :cascade do |t|\r\n  end\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :tag, polymorphic: true, inverse_of: :taggings\r\n  belongs_to :work, inverse_of: :taggings\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  TYPES = ['Fandom', 'Relationship']\r\n\r\n  has_many :mergers, foreign_key: 'merger_id', class_name: 'Tag'\r\n  belongs_to :merger, class_name: \"Tag\", optional: true\r\n\r\n  has_many :taggings\r\nend\r\n\r\nclass Fandom < Tag\r\nend\r\nclass Relationship < Tag\r\nend\r\n\r\nclass Work < ActiveRecord::Base\r\n  has_many :taggings, inverse_of: :work\r\n  has_many :tags, through: :taggings\r\n\r\n  Tag::TYPES.each do |type|\r\n    has_many type.underscore.pluralize.to_sym,\r\n             -> { where(tags: { type: type }) },\r\n             through: :taggings,\r\n             source: :tag,\r\n             source_type: \"Tag\"\r\n  end\r\nend\r\n\r\nclass WorkTest < Minitest::Test\r\n  def test_includes_scoped_polymorphic\r\n    f1 = Fandom.create!\r\n    rel1 = Relationship.create!\r\n    Work.create!(fandoms: [f1], relationships: [rel1])    \r\n    Work.first.relationships.each { |rel| assert_equal \"Relationship\", rel.type } # passes\r\n\r\n    work_with_includes = Work.includes(fandoms: :merger, relationships: :merger).first\r\n    work_with_includes.relationships.each { |rel| assert_equal \"Relationship\", rel.type } # fails\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`work_with_includes.relationships` should return only Relationship tags.\r\n\r\n### Actual behavior\r\n\r\n`work_with_includes.relationships` also returns the Work's Fandom tag (as well as the Relationship tag).\r\n\r\n```\r\nFailure:\r\nWorkTest#test_includes_scoped_polymorphic [test/models/work_test.rb:11]:\r\nExpected: \"Relationship\"\r\n  Actual: \"Fandom\"\r\n```\r\n\r\nThe SQL query looks correct:\r\n```\r\n  Tag Load (0.1ms)  SELECT \"tags\".* FROM \"tags\" WHERE \"tags\".\"type\" = ? AND \"tags\".\"id\" IN (?, ?)  [[\"type\", \"Fandom\"], [\"id\", 1], [\"id\", 2]]\r\n  Tag Load (0.1ms)  SELECT \"tags\".* FROM \"tags\" WHERE \"tags\".\"type\" = ? AND \"tags\".\"id\" = ?  [[\"type\", \"Relationship\"], [\"id\", 2]]\r\n```\r\n\r\nThe order of the associations in `includes` is relevant. If `fandoms:` and `relationships:` are switched, then `relationships` contains only the Relationship tag and `fandoms` exhibits the issue and contains the Relationship tag as well as the Fandom tag.  \r\nIf `:merger` (the self join) is removed from `includes`, the issue does not occur.  \r\nIf `includes` is split into two calls `includes(fandoms: :merger).includes(relationships: :merger)` the issue does not occur.\r\n\r\n### System configuration\r\n\r\n[Initial discovery](https://otwarchive.atlassian.net/browse/AO3-6729) and [workaround](https://github.com/otwcode/otwarchive/pull/4814):\r\n**Rails version**: 7.0.8.1 (Issue discovered after upgrade from Rails 6.1)\r\n**Ruby version**: 3.1.4\r\nMariaDB\r\n\r\nLatest reproduction:\r\n**Rails version**: 8.0.0.alpha 8d416d09fc7fc226c6e54dd772e1b8f1969c5d61\r\n**Ruby version**: 3.3.2\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52061/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 27060268,
        "label_ids": [],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2525438011,
        "number": 52915,
        "title": "Revert \"Assign id attributes first in Active Record attribute assignment\"",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-13T18:36:15Z",
        "updated_at": "2024-09-13T19:51:05Z",
        "closed_at": "2024-09-13T19:51:04Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Reverts rails/rails#52892\r\n\r\nhttps://github.com/rails/rails/pull/49678 's behaviour I was trying to partially restore is a breaking change, and thus the reverted commit is too. We shouldn't need to crawl associations to assign attributes. Correct or not, its less problematic to make our expectations for this use-case clearer and add a regression test making sure the behaviour doesn't accidentally break any hidden contracts again.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52915/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5162312,
        "closed_by_id": 5162312,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52915.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52915.patch",
        "pull_request_merged_at": "2024-09-13T19:51:04Z"
    },
    {
        "id": 2523206372,
        "number": 52904,
        "title": "Introduce ActiveModel::Inspect",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-12T19:34:22Z",
        "updated_at": "2024-09-13T19:31:20Z",
        "closed_at": "2024-09-13T18:51:37Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "This moves the Active Record inspect implementation to Active Model, to allow Active Model objects to show a formatted string with relevant attributes when calling `inspect`.\r\n\r\n```ruby\r\nclass Person\r\n  include ActiveModel::API\r\n  include ActiveModel::Attributes\r\n  include ActiveModel::Inspect\r\n  attribute :name, :string\r\nend\r\nperson = Person.new(name: \"Amanda\")\r\nperson.inspect\r\n=> \"#<Person name: \\\"Amanda\\\">\"\r\n```\r\n\r\nSensitive attributes can be filtered, just like in Active Record:\r\n\r\n```ruby\r\n  Person.filter_attributes = [:name]\r\n  person.inspect\r\n  => #<Person name: [FILTERED]>\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52904/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 47848,
        "label_ids": [
            107190,
            107191,
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52904.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52904.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2525338500,
        "number": 52913,
        "title": "Suppress a RuboCop offense after running `rails new` with `--devcontainer`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-13T17:33:48Z",
        "updated_at": "2024-09-13T18:40:32Z",
        "closed_at": "2024-09-13T18:39:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis PR suppresses the following RuboCop offense when running `rubocop` after generating a new Rails project with `--devcontainer`:\r\n\r\n```console\r\n$ rails new example --devcontainer\r\n$ cd example\r\n$ bin/rubocop\r\n(snip)\r\n\r\nOffenses:\r\n\r\ntest/application_system_test_case.rb:14:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.\r\n```\r\n\r\n### Detail\r\n\r\nThis PR removes the following redundant blank line by default that cause the offense:\r\n\r\n```diff\r\n require \"test_helper\"\r\n\r\n class ApplicationSystemTestCase < ActionDispatch::SystemTestCase\r\n   if ENV[\"CAPYBARA_SERVER_PORT\"]\r\n     served_by host: \"rails-app\", port: ENV[\"CAPYBARA_SERVER_PORT\"]\r\n\r\n     driven_by :selenium, using: :headless_chrome, screen_size: [ 1400, 1400 ], options: {\r\n       browser: :remote,\r\n       url: \"http://#{ENV[\"SELENIUM_HOST\"]}:4444\"\r\n     }\r\n   else\r\n     driven_by :selenium, using: :headless_chrome, screen_size: [ 1400, 1400 ]\r\n   end\r\n-\r\n end\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\nThis is a similar issue to https://github.com/rails/rails/pull/52199\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52913/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 13203,
        "closed_by_id": 47848,
        "label_ids": [
            107195,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52913.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52913.patch",
        "pull_request_merged_at": "2024-09-13T18:39:57Z"
    },
    {
        "id": 2353967055,
        "number": 52127,
        "title": "ActionText Editor Previews uploaded pre 7.1.3.4 are broken in 7.1.3.4 after a resave",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2024-06-14T19:33:50Z",
        "updated_at": "2024-09-13T18:27:36Z",
        "closed_at": "2024-09-13T18:27:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n1. Upload an image to an ActionText editor in 7.1.3.4\r\n2. Upgrade to 7.1.3.4\r\n3. resave the model containing the image\r\n4. the image preview in the editor will be broken, but the rendering of the HTML will still contain the image\r\n5. In some cases, trying to modify the broken image will result in the blob getting deleted, or the attachment changing to a RemoteImage\r\n6.When you roll back to 7.1.3.3, the image previews are still broken, so it seems like something in 7.1.3.4 is saving invalid state to the attachment record, preventing it from being successfully rendered by the previous version of the code, resulting in invalid state that can not be recovered.\r\n```\r\n\r\n\r\nThere does seem to be some work to begin to address the issue here: https://github.com/rails/rails/commit/d6316963ef49d9509a64adc1cb96630a3326b03c\r\n\r\nHowever, applying this patch does not seem to fix data which was created in the interim.  I'd love any tips to figure out how to reverse exactly what happened.\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nThe images previews work across versions.\r\n\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe image previews for the editor are broken, and rolling back does not restore the previews. \r\n### System configuration\r\n**Rails version**:\r\n7.1.3.4\r\n**Ruby version**:\r\n3.2 (tested)",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52127/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 69663,
        "closed_by_id": 28418009,
        "label_ids": [
            1071962662,
            1180817762
        ],
        "reactions_total_count": 7,
        "reactions_plus1": 7,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2102411019,
        "number": 50889,
        "title": "Introduce `ActiveSupport::TestCase.around`",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2024-01-26T15:29:23Z",
        "updated_at": "2024-09-13T17:16:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nWhen discussing testing frameworks for new projects, the absence of `around` hooks is usually a focal point of the conversation that pushes consensus toward alternative test harnesses.\r\n\r\nMinitest itself [will not support built-in `around` hooks](https://github.com/minitest/minitest/issues/892). While the [minitest-hooks](https://github.com/jeremyevans/minitest-hooks) gem provides support for `around`, Active Support's callback system makes adding `around` hooks fairly trivial, and is guaranteed to be implemented in the same way as all other callbacks (Controller, Jobs, Mailers, etc.).\r\n\r\n\r\n### Detail\r\n\r\nAdd a callback, which runs around `TestCase#setup`, the `test` block, and `TestCase#teardown`. Yields the test class instance and the test case to the block:\r\n\r\n```ruby\r\nclass Test < ActiveSupport::TestCase\r\n  around do |test_case, &block|\r\n    Client.with(stubbed: true, &block)\r\n  end\r\nend\r\n```\r\n\r\n### Additional Information\r\n\r\nTo support this change, rename the `activesupport/test/testing/after_teardown_test.rb` file to `activesupport/test/testing/callbacks_test.rb`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50889/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2575027,
        "label_ids": [
            107194,
            150377
        ],
        "reactions_total_count": 4,
        "reactions_plus1": 4,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50889.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50889.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2521497194,
        "number": 52892,
        "title": "Assign id attributes first in Active Record attribute assignment",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-12T06:45:59Z",
        "updated_at": "2024-09-13T16:43:56Z",
        "closed_at": "2024-09-13T16:43:46Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because store assignment behaviour changed subtly since https://github.com/rails/rails/pull/52792:\r\n\r\n```rb\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n\r\n  gem \"sqlite3\"# , \"~> 1.4\"\r\n  gem \"benchmark-ips\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.text :settings\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  store :settings, accessors: [:a]\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n\r\n    post.update!(settings: { a: \"a\" }, a: \"b\")\r\n\r\n    assert_equal(\"b\", post.a)\r\n  end\r\nend\r\n```\r\n(fails on main, passes on 7.2, and then fails on 7.1)\r\n\r\nInstead of assigning hashes later, we can assign IDs first to maintain the same behaviour for nested attribute assignment. Deferring hash assignment causes problems in store scenarios where an attribute can be assigned two different ways, which had worked since Rails 7.2.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes attribute assignment to assign foreign keys first.\r\n\r\n### Additional information\r\n\r\n```rb\r\nrequire \"benchmark/ips\"\r\n\r\npost = Post.create!\r\n\r\nBenchmark.ips do |x|\r\n  x.report(:assignment) { post.assign_attributes(settings: { a: \"a\" }, a: \"b\") }\r\nend\r\n```\r\n\r\nBefore:\r\n```\r\nruby 3.3.4 (2024-07-09 revision be1089c8ec) [arm64-darwin23]\r\nWarming up --------------------------------------\r\n          assignment     2.387k i/100ms\r\nCalculating -------------------------------------\r\n          assignment     23.466k (± 4.6%) i/s   (42.61 μs/i) -    119.350k in   5.097964s\r\n```\r\n\r\nAfter:\r\n```\r\nruby 3.3.4 (2024-07-09 revision be1089c8ec) [arm64-darwin23]\r\nWarming up --------------------------------------\r\n          assignment     2.358k i/100ms\r\nCalculating -------------------------------------\r\n          assignment     22.578k (± 5.0%) i/s   (44.29 μs/i) -    113.184k in   5.026557s\r\n```\r\nPotentially a little slower, but not significantly.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52892/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5162312,
        "closed_by_id": 5162312,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52892.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52892.patch",
        "pull_request_merged_at": "2024-09-13T16:43:46Z"
    },
    {
        "id": 2523299051,
        "number": 52906,
        "title": "`ActionController::Live` and `ActiveRecord::Base.connected_to` stale db state",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T20:31:29Z",
        "updated_at": "2024-09-13T15:56:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nRepro repo: https://github.com/jscheid/prevent-writes-test\r\n\r\nPossibly related to #36830.\r\n\r\nI've been hunting down an issue in our multi-db, passenger-based, postgres-based app where we see spurious errors \"`Write query attempted while in readonly mode`\" raised in code paths where we'd definitely expect the app to be connected to the primary (writable) db role.\r\n\r\nI've managed to reliably reproduce in our app by limiting to one passenger worker (so that one process is being reused for all requests) and:\r\n1. Hitting an `ActionController::Live` endpoint which uses `ActiveRecord::Base.connected_to(..., prevent_writes: true)`.\r\n2. Provoking an `ActionController::Live::ClientDisconnected` to be raised during processing of said endpoint (just by disconnecting the client early.)\r\n3. In the next request (served by the same worker), `preventing_writes?` will return true unexpectedly.\r\n\r\nI can't share our whole app here and so instead I've built the repro test case linked above. Unfortunately I didn't yet manage to reproduce the exact same behavior, however it reliably demonstrates very similar behavior, except that the error thrown in step (3) is instead `No connection pool for 'ActiveRecord::Base' found for the role.` It's not the same error but it seems to indicate that some db state isn't being cleaned up properly in this scenario?\r\n\r\nThings I've tried:\r\n- Using a single-threaded, single-worker Puma server instead of a single-worker Passenger server - and I can see the same behavior, so it doesn't seem to depend on the web server being used.\r\n- Using both latest Rails (7.2.1) and the version we're currently running in production (7.1.3.1), the behavior is the same in both cases.\r\n- Using `Rails.application.executor.wrap` and/or `ActiveRecord::Base.connection_pool.with_connection` inside the `ActionController::Live` thread in hopes that it will isolate the environment stood up by `ActiveRecord::Base.connected_to`, but to no avail.\r\n- Raising a `RuntimeError` from inside the Live thread (instead of `ActionController::Live::ClientDisconnected`) to see what happens, but interestingly this **doesn't** seem to trigger the same behavior.\r\n\r\nThings I haven't tried yet:\r\n- Using a database (connection handler) other than Postgres; but from reading the Rails code I think all the role/`prevent_writes` stuff is happening at the level of the abstract connection so I don't think it would help shed much light.\r\n\r\nI can't rule out some kind of misconfiguration or misuse of `ActionController::Live` or `ActiveRecord::Base.connected_to` on our part - if so my apologies and I hope someone can point me into the right direction.\r\n\r\n### Expected behavior\r\n\r\nWhen using `ActiveRecord::Base.connected_to` inside `ActionController::Live.stream`, and when the client disconnects early, it should clean up after itself so that subsequent requests served by the same worker process have a clean database environment.\r\n\r\n### Actual behavior\r\n\r\nWhen using `ActiveRecord::Base.connected_to` inside `ActionController::Live.stream`, and when the client disconnects early, the database environment used for the next requests seems to be corrupted in some way that I don't fully understand yet.\r\n\r\n### System configuration\r\n**Rails version**: `7.2.1`, but also tested with `7.1.3.1` with identical results.\r\n**Ruby version**: 3.3.5\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52906/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3514,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2516931590,
        "number": 52873,
        "title": "[ActiveRecord::Encryption] Is it possible to store the data in a JSONB column?",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-10T16:32:24Z",
        "updated_at": "2024-09-13T15:24:55Z",
        "closed_at": "2024-09-10T18:15:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Proposal\r\n\r\nWe'd like to store the encrypted data (i.e. this hash: https://github.com/rails/rails/blob/main/activerecord/lib/active_record/encryption/message_serializer.rb#L65-L68) in a JSONB column instead of a string/text one.\r\n\r\nOur use-case is to query for all rows where the encrypted value was encrypted with a specific key, so that we know how many records we would need to force-rotate. Using JSONB would also allow to set up indexes for better performance.\r\n\r\nI don't think it's supported, and if we'd want to add support, how hard would it be?",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52873/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 1168,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1950004321,
        "number": 49688,
        "title": "Document for rails >= 7.1 how to run an application in a mounting point different to \"/\".   This will avoid duplication of the relative root path in routes helpers.",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10422595,
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 1,
            "closed_issues": 14,
            "state": "closed",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-09-13T14:10:12Z",
            "due_on": null,
            "closed_at": "2024-08-22T21:34:18Z"
        },
        "comments": 21,
        "created_at": "2023-10-18T15:15:30Z",
        "updated_at": "2024-09-13T14:39:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Simple case\r\n\r\n(1) An engine that has a route (let's say `articles_path` pointing to `/articles`) and\r\n(2) an application mounted on a relative route (let's say `/a/`) that mounts the engine on that same route by a) using `config.relative_url_root=\"/a\"` in `config/application.rb` as well as defining a `scope \"/a\"`  in `config/routes.rb` and mounting the engine on the same route.\r\n\r\nIn the application `articles_path` will be `/a/a/articles` instead of `/a/articles` as it is with rails 7.0\r\n\r\n### Steps to reproduce\r\n\r\n1. With rails 7 generate part of the engine described at <https://edgeguides.rubyonrails.org/engines.html>:\r\n    ```\r\n    rails plugin new engine49688 --mountable\r\n    cd engine49688\r\n    bundle\r\n    bin/rails generate scaffold article title:string text:text\r\n    bin/rails db:migrate\r\n    ```\r\n   If you prefer you can clone this engine from this repository https://gitlab.com/vtamara/engine49688 or \r\n   check more details of how we generated it in the    [README.md](https://gitlab.com/vtamara/engine49688/-/blob/main/README.md)\r\n3. With rails 7 generate part of the application described at <https://edgeguides.rubyonrails.org/engines.html>:\r\n    ```sh\r\n    cd ..\r\n    rails new app49688 --minimal --skip-keeps\r\n    cd app49688\r\n    bundle add engine49688 --path=../engine49688\r\n    bundle\r\n    bin/rails engine49688:install:migrations\r\n    bin/rails g scaffold user username:string name:string\r\n    bin/rails db:migrate\r\n    ```\r\n   In this application make sure that the relative root is `/a` by \r\n   * Adding `config.relative_url_root = \"/a/\"` to `config/application.rb`\r\n   * Using that route as main scope in `config/routes.rb` and to mount on it the engine, i.e the contents of the file is:\r\n      ```ruby\r\n      Rails.application.routes.draw do            \r\n        scope \"/a\" do\r\n          resources :users\r\n        end\r\n        mount Engine49688::Engine => \"/a\", as: :engine49688\r\n      end\r\n      ```\r\n    And create the test `test/controllers/routes_test.rb` with:\r\n    ```ruby\r\n     require \"test_helper\"\r\n     class RoutesTest < ActionDispatch::IntegrationTest\r\n\r\n       test \"articles_path\" do\r\n         assert_equal '/a/articles', engine49688.articles_path\r\n       end\r\n     end\r\n     ```\r\n     If you prefer you can also clone this application from https://gitlab.com/vtamara/app49688 or check details on how \r\n     we generated it and use it in the [README.md](https://gitlab.com/vtamara/app49688/-/blob/main/README.md).\r\n4.  Run the test with rails 7 and it wil pass\r\n5.  Update the application to rails 7.1 by changing in the `Gemfile` the line `gem \"rails\", \"~> 7.0.8\"` with\r\n     `gem \"rails\", \"~> 7.1\"` and running `bundle`\r\n6.  Run the same test and it will fail\r\n\r\n### Expected behavior\r\nWith rails 7.1 the test should pass, i.e `engine49688.articles_path` should be `/a/articles` as it is with Rails 7.0:\r\n```\r\n% bin/rails test test/controllers/routes_test.rb\r\nRunning 1 tests in a single process (parallelization threshold is 50)\r\nRun options: --seed 22764\r\n\r\n# Running:\r\n\r\n.\r\n\r\nFinished in 0.345284s, 2.8962 runs/s, 2.8962 assertions/s.\r\n1 runs, 1 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Actual behavior\r\n\r\n```\r\n % bin/rails test test/controllers/routes_test.rb\r\n...\r\nRunning 1 tests in a single process (parallelization threshold is 50)\r\nRun options: --seed 2957\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRoutesTest#test_articles_path [/home/vtamara/comp/rails/tmp/app49688/test/controllers/routes_test.rb:6]:\r\nExpected: \"/a/articles\"\r\n  Actual: \"/a/a/articles\"\r\n\r\n\r\nbin/rails test test/controllers/routes_test.rb:5\r\n\r\n\r\n\r\nFinished in 0.206910s, 4.8330 runs/s, 4.8330 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips \r\n```\r\n\r\nIn the test `articles_path` duplicates the relative  root.\r\n\r\n### System configuration\r\n**Rails version**: 7.1\r\n\r\n**Ruby version**: 3.2.2\r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49688/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "user_id": 701221,
        "closed_by_id": 701221,
        "label_ids": [
            107189,
            4782967
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2057733301,
        "number": 50461,
        "title": "In rails 7.1  it is not possible to test path helpers in controllers tests when an application uses config.relative_url_root different to \"/\"",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-12-27T20:02:28Z",
        "updated_at": "2024-09-13T14:21:25Z",
        "closed_at": "2024-09-13T14:11:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nLet's say I want to run an application on the mount point `/a/` and I want all my resources on that mount point (e.g `/a/users/`).\r\n\r\nUsing as I traditionally would:\r\n\r\n1. `config.relative_url_root=\"/a/\"` and\r\n2. `scope \"/a\"` in `routes.draw` to recognize routes within the mount point \"/a\"\r\n\r\nAt least with rails 6.x, 7.0 and 7.1 the resulting path helpers are different to the working routes as the following test case shows:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n  config.relative_url_root = \"/a/\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    scope \"/a\" do\r\n      get \"/\" => \"test#index\", as: :root\r\n    end\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  include Rails.application.routes.url_helpers\r\n\r\n  def index\r\n    render plain: \"Home\"\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n  include Rails.application.routes.url_helpers\r\n\r\n  def test_workingroute_root_is_a_in_6_7_and_7_1\r\n    get \"/a\"  # This one works\r\n    assert last_response.ok?\r\n  end\r\n\r\n  def test_root_path_different_to_workingroute_root_in_6_7_and_7_1\r\n    puts root_path  # Will present \"/a/a\"\r\n    get root_path # No route matches [GET] \"/a/a\"\r\n    assert last_response.ok?\r\n  end\r\n\r\n  private\r\n    def app\r\n      Rails.application\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\n `root_path` should be `/a`\r\n\r\n\r\n### Actual behavior\r\n\r\nThe helper `root_path` is returning `/a/a` and that route in reality doesn't work, the route that works is `/a`.\r\n\r\nWith rails 7.1 and previous if I remove the `scope \"/a\"` from `routes.draw`, `root_path` becomes `/` that is not what is needed.\r\n\r\n\r\n### Remarks\r\n\r\nThinking in how to implement this in rails, I see two options:\r\n1. not prefixing path helpers with `relative_url_root` since a `scope \"/a\"` should be already present in `routes.draw` (maybe just presenting a warning when declared routes in `routes.draw`  are outside of `/a` ?).\r\n2. not requiring `scope \"/a\"` in `routes.draw` but rails should automatically parse routes starting with the prefix  `config.relative_url_root`\r\n\r\nI guess that the first solution is simpler to implement and that was the behaviour for routes of mounted engines up to rails 7.0 (behaviour changed/broken in rails 7.1 as described at https://github.com/rails/rails/issues/49688  with this short PR by @bensheldon https://github.com/rails/rails/pull/45719 as described in the same issue ).\r\n\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1  although this problema happened in 7.0 and 6.x also.\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50461/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 701221,
        "closed_by_id": 701221,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2190758266,
        "number": 51339,
        "title": "Allow one to set `strict_loading_mode` globally",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2024-03-17T16:45:34Z",
        "updated_at": "2024-09-13T13:56:04Z",
        "closed_at": "2024-06-03T13:12:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nI was reading through [this summary of Rails' strict loading](https://jordanhollinger.com/2023/11/11/rails-strict-loading/) and came across this paragraph:\r\n\r\n> If you’re very brave, you can opt your entire application into strict loading. (Oddly, there doesn’t seem to be an equivalent of :n_plus_one_only here. I can’t imagine using this.)\r\n\r\nIn my app, we're setting `strict_loading!(mode: :n_plus_one_only)` on individual records; this paragraph made me realize it didn't have to be this way.\r\n\r\nThis Pull Request has been created because currently, `strict_loading_mode` is always set to `:all`. It may be preferable for users to have `:n_plus_one_only` on an individual model, or even on the entire app.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds a new class_attribute `:strict_loading_mode`, defaulted to `:all`.  If it's set to `:n_plus_one_only`, that mode is used by default when doing strict loading checks.\r\n\r\n### Additional information\r\n\r\nn/a\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51339/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 64050,
        "closed_by_id": 1080678,
        "label_ids": [
            107191,
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51339.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51339.patch",
        "pull_request_merged_at": "2024-06-03T13:12:05Z"
    },
    {
        "id": 2515730556,
        "number": 52858,
        "title": "Calling connection.active? after establish_connection returns false since AR 7.2.0",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-10T08:13:00Z",
        "updated_at": "2024-09-13T11:36:05Z",
        "closed_at": "2024-09-10T18:17:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "There is a difference in result in calling `ActiveRecord::Base.connection.active?` since 7.2 release after calling `ActiveRecord::Base.establish_connection(adapter: \"postgresql\", database: \"dev_db\")`. \r\nPrior to 7.2 `active?` would return `true` for a postgresql database, but since 7.2 it returns `false`. In both scenarios the connection can be used right after. \r\nI read through the changelogs but couldn't find a change that caused this, but perhaps I missed something. Did the meaning of `active?` change or is connection setup more lazy then before? I any case the doc of the method doesn't seem to reflect reality anymore imho.\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# AR 7.1\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", \"= 7.1.4\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"postgresql\", database: \"dev_db\")\r\nputs ActiveRecord::Base.connection.active?\r\n# true\r\n```\r\n\r\n```ruby\r\n# AR 7.2\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", \"= 7.2.0\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"postgresql\", database: \"dev_db\")\r\nputs ActiveRecord::Base.connection.active?\r\n# false\r\n```\r\n### Expected behavior\r\nThat `active?` returns `true` in AR 7.2 as the connection is ready to use.\r\n\r\n### Actual behavior\r\n`active?` returns `false` even though the connection can be used right after.\r\n\r\n### System configuration\r\n**Rails version**: NA\r\n\r\n**Ruby version**: 3.2.2\r\n\r\n**Postgres version**: 16.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52858/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 104943,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 1
    },
    {
        "id": 2340913774,
        "number": 52047,
        "title": "Improve Active Record Association Callbacks docs [ci skip]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-07T17:51:03Z",
        "updated_at": "2024-09-13T11:00:52Z",
        "closed_at": "2024-09-13T03:47:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This commit aims to clarify the types of arguments mentioned by the Association Callback documentation. In some cases, `firm` arguments implied the object was a `Firm`, but `record` arguments did not imply any particular class.\r\n\r\nSimilarly, the `has_many` method documentation did not mention any of the Association Callback arguments (i.e. `before_add`, `after_add`, `before_remove`, `after_remove`). This commit includes those options in the list and links to the more thorough documentation under the Association Callbacks heading.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52047/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2575027,
        "closed_by_id": 277819,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52047.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52047.patch",
        "pull_request_merged_at": "2024-09-13T03:47:02Z"
    },
    {
        "id": 2524492955,
        "number": 52911,
        "title": "Fix small typo for Solid Cable changelog [ci skip]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-13T10:28:35Z",
        "updated_at": "2024-09-13T10:37:49Z",
        "closed_at": "2024-09-13T10:37:45Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52911/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 567626,
        "closed_by_id": 567626,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52911.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52911.patch",
        "pull_request_merged_at": "2024-09-13T10:37:45Z"
    },
    {
        "id": 2430999423,
        "number": 52419,
        "title": "Can't roll back `add_check_constraint` with comment",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-07-25T21:24:29Z",
        "updated_at": "2024-09-13T08:46:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\n  # Also fails with edge rails\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\", \"~> 1.4\"\r\n\r\n  # Note: this seems to be necessary with bundler 2.5.16, not sure why\r\n  gem \"timeout\", \"~> 0.4.1\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass AddCheckConstraintWithComment < ActiveRecord::Migration::Current\r\n  def change\r\n    add_check_constraint :payments, 'TRUE', comment: 'foo'\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    AddCheckConstraintWithComment.migrate(:up)\r\n    Payment.reset_column_information\r\n  end\r\n\r\n  def test_migration_down\r\n    AddCheckConstraintWithComment.migrate(:down)\r\n    Payment.reset_column_information\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould be able to roll back a migration that uses `add_check_constraint` with a comment.\r\n\r\n### Actual behavior\r\n\r\nCan't roll back a migration that uses `add_check_constraint` with a comment.\r\n\r\n### System configuration\r\n**Rails version**: test case fails with latest and edge\r\n\r\n**Ruby version**: tested with 3.2.3\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52419/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3514,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2523924811,
        "number": 52909,
        "title": "Use less queries when updating nested attributes",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-13T05:45:36Z",
        "updated_at": "2024-09-13T06:01:28Z",
        "closed_at": "2024-09-13T06:01:26Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because a regression was introduced where we query unnecessarily a few times. rails/rails#52797 fixed a bug (which is great!), but I think we can refactor the code a little to be more efficient.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes nested attribute assignment to stop querying the `association.target` resulting in 2 less queries.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52909/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5162312,
        "closed_by_id": 5162312,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52909.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52909.patch",
        "pull_request_merged_at": "2024-09-13T06:01:26Z"
    },
    {
        "id": 2523733727,
        "number": 52908,
        "title": "ActiveRecord::NotNullViolation: PG::NotNullViolation error when trying to generate a preview file with mismatching primary key types",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-13T02:13:36Z",
        "updated_at": "2024-09-13T05:47:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n* Install ActiveStorage with a normal primary_key_type but a uuid record polymorphic type\r\n* Call `blob.preview({}).processed`\r\n* See that a `ActiveRecord::NotNullViolation: PG::NotNullViolation` error is raised\r\n\r\nhttps://github.com/Mbuckley0/test_activestorage_preview\r\nIf you pull down this test app and run `bundle exec rails test test/models` you can see the error in action.\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nIt should generate a preview for the file\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nIt raises a `ActiveRecord::NotNullViolation: PG::NotNullViolation` error when trying to generate a preview for a file\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.8.4\r\n**Ruby version**:\r\n3.3.0",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52908/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 11203679,
        "label_ids": [
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2515648408,
        "number": 52856,
        "title": "Replace \"healthcheck\" with \"health check\" in documentation. [ci-skip]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-10T07:35:47Z",
        "updated_at": "2024-09-13T03:59:58Z",
        "closed_at": "2024-09-13T03:59:58Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "\"health check\" is two words.\r\n\r\nThis also fixes a small documentation issue with: `silence_healthcheck_path`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52856/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 277819,
        "label_ids": [
            107195,
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52856.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52856.patch",
        "pull_request_merged_at": "2024-09-13T03:59:58Z"
    },
    {
        "id": 2522940581,
        "number": 52902,
        "title": "Support the Prism parser with ErrorHighlight",
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eileencodes",
            "id": 1080678,
            "followers_url": "https://api.github.com/users/eileencodes/followers",
            "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
            "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
            "organizations_url": "https://api.github.com/users/eileencodes/orgs",
            "repos_url": "https://api.github.com/users/eileencodes/repos",
            "received_events_url": "https://api.github.com/users/eileencodes/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eileencodes",
                "id": 1080678,
                "followers_url": "https://api.github.com/users/eileencodes/followers",
                "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
                "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
                "organizations_url": "https://api.github.com/users/eileencodes/orgs",
                "repos_url": "https://api.github.com/users/eileencodes/repos",
                "received_events_url": "https://api.github.com/users/eileencodes/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T17:15:48Z",
        "updated_at": "2024-09-13T03:55:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Currently when a template has a syntax error, the backtrace location is used to determine the node id, and the file is re-parsed using `RubyVM::AbstractSyntaxTree` to find the location to highlight. This work comes from https://github.com/rails/rails/pull/46908.\r\n\r\nWhen the default parser is Prism, this will raise an error because the node ids do not match up. Instead it needs to be re-parsed with Prism. The relevant API is `Prism::Node#breadth_first_search`, and you can find an example of how this works in error highlight itself here: https://github.com/ruby/error_highlight/blob/a75ddf78b35ef015e2ba7c9303a730070b1d0201/lib/error_highlight/base.rb#L84-L95.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52902/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5093358,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2514924774,
        "number": 52852,
        "title": "`ActiveRecord::ConnectionAdapters::SchemaStatements#add_index` does not document new option `nulls_not_distinct`",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-09T21:08:16Z",
        "updated_at": "2024-09-13T03:50:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In Rails 7.1, [a pull request](https://github.com/rails/rails/pull/48608/files) added the option `nulls_not_distinct` to the possible options for use with `ActiveRecord::ConnectionAdapters::SchemaStatements#add_index`. Unfortunately, the pull request did not add documentation for this option, meaning that its existence and behavior are currently undocumented.\r\n\r\nI don't have the time and energy to submit a patch to address this, but I thought I'd raise the issue so that the Rails project would be aware of this gap. This is probably an easy issue to address, for someone wanting to get started contributing to the Rails project.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52852/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 528994,
        "label_ids": [
            150377,
            41328116,
            384913768
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2522533114,
        "number": 52898,
        "title": "Added documentation for nulls not distinct option for postgres sql [ci skip]",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T14:16:47Z",
        "updated_at": "2024-09-13T03:50:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because of #52852 \r\n\r\n### Detail\r\n\r\nThis Pull Request adds documentation for the method `add_index_options` along with the option `nulls_not_distinct` in the `activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb`\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52898/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162679787,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52898.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52898.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2523541468,
        "number": 52907,
        "title": "Load routes in `LazyRoutesSet#recognize_path`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T23:52:59Z",
        "updated_at": "2024-09-13T02:45:06Z",
        "closed_at": "2024-09-13T02:44:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Closes https://github.com/rails/rails/issues/52881\r\n\r\n### Motivation / Background\r\n\r\nBackground: https://github.com/rails/rails/pull/52353 deferred drawing routes to the first request\r\n\r\nCalling `recognize_path` on the lazy route set calls through to the super implementation, which in a lazy-loaded environment may not have the route loaded yet.\r\n\r\nThis just loads the route set to fix the issue.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52907/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 561827,
        "closed_by_id": 5162312,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52907.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52907.patch",
        "pull_request_merged_at": "2024-09-13T02:44:58Z"
    },
    {
        "id": 2519700513,
        "number": 52881,
        "title": "`ActionController::RoutingError` raised when using middleware with `recognize_path`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 2,
        "created_at": "2024-09-11T13:05:21Z",
        "updated_at": "2024-09-13T02:44:59Z",
        "closed_at": "2024-09-13T02:44:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "**Note:** This only happens on `main`. Cannot replicate with `7.2.1`.\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nFollow the [\"Contributing to the Rails Code\" guide](https://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-code) up to the the [\"Running an Application Against Your Local Branch\" step](https://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#running-an-application-against-your-local-branch).\r\n\r\nCreate a file `lib/middleware/recognize_path_middleware.rb`:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nclass RecognizePathMiddleware\r\n  def initialize(app)\r\n    @app = app\r\n  end\r\n\r\n  def call(env)\r\n    p \"Hello there\"\r\n    # comment this line out to get rid of the error on main, works fine with 7.2.1 though\r\n    p Rails.application.routes.recognize_path(env['PATH_INFO'], method: env['REQUEST_METHOD'])\r\n    @app.call(env)\r\n  end\r\nend\r\n```\r\n\r\nAdd these lines in `config/application.rb`:\r\n\r\n```ruby\r\nrequire_relative \"../lib/middleware/recognize_path_middleware\"\r\nconfig.middleware.insert 1, RecognizePathMiddleware\r\n```\r\n\r\nStart the puma server with `bundle exec bin/rails s` and navigate to `http://[::1]:3000`.\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nShould load root url with Rails logo.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nRaises an `ActionController::RoutingError`. This is displayed on the page:\r\n\r\n```\r\nPuma caught this error: No route matches \"/\" (ActionController::RoutingError)\r\n/.../rails/rails/actionpack/lib/action_dispatch/routing/route_set.rb:952:in `recognize_path_with_request'\r\n/.../rails/rails/actionpack/lib/action_dispatch/routing/route_set.rb:923:in `recognize_path'\r\n/.../rails/my-test-app/lib/middleware/recognize_path_middleware.rb:11:in `call'\r\n/.../rails/rails/actionpack/lib/action_dispatch/middleware/host_authorization.rb:143:in `call'\r\n/.../rails/rails/railties/lib/rails/engine.rb:536:in `call'\r\n/.../rails/my-test-app/.bundle/ruby/3.3.0/gems/puma-6.4.2/lib/puma/configuration.rb:272:in `call'\r\n/.../rails/my-test-app/.bundle/ruby/3.3.0/gems/puma-6.4.2/lib/puma/request.rb:100:in `block in handle_request'\r\n/.../rails/my-test-app/.bundle/ruby/3.3.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:378:in `with_force_shutdown'\r\n/.../rails/my-test-app/.bundle/ruby/3.3.0/gems/puma-6.4.2/lib/puma/request.rb:99:in `handle_request'\r\n/.../rails/my-test-app/.bundle/ruby/3.3.0/gems/puma-6.4.2/lib/puma/server.rb:464:in `process_client'\r\n/.../rails/my-test-app/.bundle/ruby/3.3.0/gems/puma-6.4.2/lib/puma/server.rb:245:in `block in run'\r\n/.../rails/my-test-app/.bundle/ruby/3.3.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:155:in `block in spawn_thread'\r\n```\r\n\r\nLogs:\r\n\r\n```\r\n\"Hello there\"\r\n\"/\"\r\n\"GET\"\r\n2024-09-12 06:54:47 +1000 Rack app (\"GET /\" - (::1)): #<ActionController::RoutingError: No route matches \"/\">\r\n```\r\n\r\nLogs from 7.2.1 for comparison:\r\n\r\n```\r\n\"Hello there\"\r\n\"/\"\r\n\"GET\"\r\n{:controller=>\"rails/welcome\", :action=>\"index\"}\r\nStarted GET \"/\" for ::1 at 2024-09-12 06:53:19 +1000\r\n  ActiveRecord::SchemaMigration Load (0.4ms)  SELECT \"schema_migrations\".\"version\" FROM \"schema_migrations\" ORDER BY \"schema_migrations\".\"version\" ASC /*application='MyTestApp'*/\r\n  ↳ lib/middleware/recognize_path_middleware.rb:11:in `call'\r\nProcessing by Rails::WelcomeController#index as HTML\r\n  Rendering /.../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/railties-7.2.1/lib/rails/templates/rails/welcome/index.html.erb\r\n  Rendered /.../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/railties-7.2.1/lib/rails/templates/rails/welcome/index.html.erb (Duration: 0.4ms | GC: 0.0ms)\r\nCompleted 200 OK in 51ms (Views: 3.3ms | ActiveRecord: 0.0ms (0 queries, 0 cached) | GC: 0.0ms)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 8.0.0.alpha\r\n\r\n**Ruby version**: 3.3.4",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52881/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 54629302,
        "closed_by_id": 5162312,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2414708889,
        "number": 52353,
        "title": "Defer route drawing to the first request, or when url_helpers called",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-07-17T22:18:05Z",
        "updated_at": "2024-09-13T02:40:54Z",
        "closed_at": "2024-08-09T06:44:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nRedo of https://github.com/rails/rails/pull/51614, https://github.com/rails/rails/pull/52012\r\n\r\nExecutes the first routes reload when the route set is first used to serve a request, generate a url, or otherwise. Previously, this was executed unconditionally on boot, which can slow down boot time unnecessarily for larger apps with lots of routes.\r\n\r\nThis Pull Request has been created to reduce route draw time for larger apps by deferring it until necessary. \r\n\r\n### Detail\r\n\r\nThis Pull Request changes previous attempts were reverted. In this one, we're depending entirely on the route set class' methods to load routes instead of littering the codebase with manual reload calls. This should help prevent loading edge cases with the lazy route set. We're also swapping out the lazy route set for the normal one in eager-loaded environments to reduce impact on production.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52353/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5162312,
        "closed_by_id": 5162312,
        "label_ids": [
            107189,
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52353.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52353.patch",
        "pull_request_merged_at": "2024-08-09T06:44:23Z"
    },
    {
        "id": 2512911772,
        "number": 52839,
        "title": "Rails 7.1 changing behaviour of rename_table in existing migrations",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-09-09T05:03:40Z",
        "updated_at": "2024-09-13T02:06:56Z",
        "closed_at": "2024-09-13T02:06:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n* Create a new rails 7.0 app\r\n* Create a new table with the ID being a uuid\r\n* Rename the table\r\n* Upgrade to rails 7.1\r\n* Run `bundle exec rails db:migrate:reset`\r\n* See that the structure.sql file has renamed the table constraint name whereas it previously didn't\r\n\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nhttps://github.com/Mbuckley0/test_migration_constraint_upgrade\r\n\r\nIf you run `bundle exec rails db:migrate:reset` before the Upgrade to rails 7.1 commit it will work but if you run it after it will error as `rename_table` is automatically updating the constraint name.\r\n\r\n\r\n### Expected behavior\r\n`rename_table` should have the same behaviour as it did in rails 7.0 for migrations created in <= rails 7.0\r\n<!-- Tell us what should happen -->\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nRails 7.1 has changed the behaviour of `rename_table` in existing migrations to also rename the table constraints name\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.8.4 Upgrading to 7.1.4\r\n\r\n**Ruby version**:\r\n3.3.0",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52839/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 11203679,
        "closed_by_id": 11203679,
        "label_ids": [
            107191,
            70310659,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2516722978,
        "number": 52871,
        "title": "Allow to pass array values to `.in_order_of`",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-10T15:02:18Z",
        "updated_at": "2024-09-12T19:58:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because I wanted to group records with `.in_order_of`. I makes it possible to execute a query like this:\r\n\r\n```rb\r\nPosts.in_order_of(:state, [[:published, :canceled], :archived]).order(created_at: :desc)\r\n# =>\r\n# SELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"state\" IN (1, 2, 3)\r\n# ORDER BY CASE\r\n#   WHEN \"posts\".\"state\" IN (1, 2) THEN 1\r\n#   WHEN \"posts\".\"state\" = 3 THEN 2\r\n#  END ASC, \"posts\".\"created_at\" DESC\r\n```\r\n\r\nThis makes it possible to group records together and then order those groups again with another order clause.\r\n\r\n### Additional information\r\n\r\nI've touched this code for the first time, so I'm not sure if this is the best way to implement it. For example one could use `Array.wrap` instead of `values.is_a?(Array)` checks (I feel this would reduce the performance, no benchmarks yet though).\r\n\r\nAnother thing this changes is that array values or now not typecasted as a whole but each item. I'm not sure if this is OK or if there might be a case where an array value as a whole should be used for the type cast (e.g. for array typed columns).\r\n\r\nMaybe there's even a way I've not come up yet to archive the same result with existing methods.\r\n\r\nFeel free to request changes or hint how this can be implemented more efficiently – if you thing this is something to implement at all.\r\n\r\nThanks for reviewing it!\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52871/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 148003,
        "label_ids": [
            107191,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52871.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52871.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2290412012,
        "number": 51780,
        "title": "Possible race condition in postgresql type_map initialization",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 25,
        "created_at": "2024-05-10T21:04:24Z",
        "updated_at": "2024-09-12T19:09:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nSince upgrading from Rails 7.0 to 7.1 we've started to see the following exception:\r\n\r\n```\r\n# activerecord (7.1.3.2) lib/active_record/connection_adapters/postgresql_adapter.rb in get_oid_type\r\nundefined method `key?' for nil:NilClass (NoMethodError)\r\n          if !type_map.key?(oid)\r\n                      ^^^^^\r\n```\r\n\r\nI haven't been able to replicate the behavior outside of production where it occurs when the application briefly loses its connection to the postgres database while under load. This is a multi-threaded environment. The server never recovers after entering this state. \r\n\r\nI know there was a change to type_map initialization at https://github.com/rails/rails/commit/dc4420c564565affadcd0d68db1af7ce2183bea4, and it looks to me like it's possible there's a race condition here. I'll update this issue with steps to replicate if I can manage to trigger this outside of production.\r\n\r\n### Expected behavior\r\nThe application should recover from a brief database outage and reconnect.\r\n\r\n### Actual behavior\r\nThe server is never able to reconnect. \r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.2\r\n\r\n**Ruby version**: 3.2.4\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51780/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 536381,
        "label_ids": [
            107191,
            70310659,
            149514554
        ],
        "reactions_total_count": 27,
        "reactions_plus1": 18,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 2,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 7
    },
    {
        "id": 2512493108,
        "number": 52834,
        "title": "Add an `attributes` method to all input tags to make input options accessible without the tags",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-09-08T17:31:58Z",
        "updated_at": "2024-09-12T18:08:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis PR is related to the [ActionView Proposal](https://discuss.rubyonrails.org/t/proposal-actionview-attributebuilders-for-formbuilders/84072) on the RailsCore Mailing List.\r\n\r\nRecently, we've encountered the need to render form inputs without relying on FormTags helpers. We have at least three examples:\r\n\r\n1. **WebComponents**\r\n```html\r\n<md-outlined-text-field type=\"text\" name=\"user[name]\" id=\"user_name\" label=\"name\">\r\n  <md-icon slot=\"trailing-icon\">person</md-icon>\r\n</md-outlined-text-field>\r\n```\r\n2. **ViewComponents**\r\nThe ViewComponent gem states in its [documentation](https://viewcomponent.org/known_issues.html#compatibility-with-rails-form-helpers) that it is not natively compatible with `form_for`.\r\n\r\n3. **Phlex Components**\r\nAs one of the maintainers of RbUI, I've faced the same issue [here](https://rbui.dev/docs/form), where we had to reinvent the wheel to generate all the input attributes again.\r\n\r\n```ruby\r\n  Input(type=\"text\", name=\"user[name]\", id=\"user_name\", label=\"name\") { \"Joel Drapper\" }\r\n```\r\n\r\nThe JavaScript ecosystem offers many component libraries that are deeply integrated with React, Vue, and others. We are beginning to see similar libraries emerge from the Rails community, integrated with Stimulus, like [these ones](https://hotwire.io/ecosystem/ui-frameworks), and also WebComponents, like [this](https://shoelace.style/).\r\n\r\nI believe this PR could usher in a new wave of beautiful components for our ecosystem and help us continue to invest in server-side rendering.\r\n\r\n### Detail\r\n\r\n@rafaelfranca suggested a way to achieve this without breaking compatibility. The idea is to remove the `render` method from `form_helper` so the object can be sent to the `.erb` template. Every form tag should respond to `to_s` and `attributes` methods.\r\n\r\n```erb\r\n<%= form_with(model: article) do |form| %>\r\n  <div>\r\n    <%= form.text_field(:title) %>\r\n    <%= form.text_field(:title).attributes %>\r\n  </div>\r\n<% end %>\r\n```\r\n\r\nIf `<%= form.text_field(:title) %>` is defined in `.erb`, the template will automatically call `to_s`, ensuring everything continues to work as before.\r\n\r\nCalling `form.text_field(:title).attributes` will give us the hash of attributes to be inserted elsewhere.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR, make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] The commit message has a detailed description of what changed and why. If this PR fixes a related issue, include it in the commit message. For example, `[Fix #issue-number]`.\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or an additional feature. Minor bug fixes and documentation changes should not be included.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52834/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 727781,
        "label_ids": [
            107195,
            3666649
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52834.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52834.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2060017477,
        "number": 50480,
        "title": "Add DB-backed Action Cable adapter as new default in Rails 8",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 30,
        "created_at": "2023-12-29T13:40:28Z",
        "updated_at": "2024-09-12T17:30:34Z",
        "closed_at": "2024-09-12T17:30:34Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Out of the box, Action Cable will only work with a single process setup using the in-memory adapter. If you run multiple processes, let alone multiple app servers, you have to add Redis to the mix or be running PostgreSQL. Redis is great, but it's another moving part, and PostgreSQL is also lovely, but it's only one out of our 3 supported databases. Action Cable should work with multiple processes out of the box regardless of which of the supported databases you use.\r\n\r\nFor ONCE #1, we built a tiny Active Record-based cable adapter, which works for both MySQL and SQLite. Plan is to extract this and add it in as the new default.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50480/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [],
        "reactions_total_count": 57,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 36,
        "reactions_rocket": 21,
        "reactions_eyes": 0
    },
    {
        "id": 2521193924,
        "number": 52891,
        "title": "Fix solid cable tests",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T02:34:47Z",
        "updated_at": "2024-09-12T17:30:22Z",
        "closed_at": "2024-09-12T17:30:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Missed updating the gem. Pushed just as you merged haha @dhh ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52891/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5059927,
        "closed_by_id": 2741,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52891.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52891.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2521066196,
        "number": 52889,
        "title": "Add Solid Cable",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-12T00:33:49Z",
        "updated_at": "2024-09-12T17:30:21Z",
        "closed_at": "2024-09-12T17:30:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Solid Cable is the last piece before we can fully claim that Rails 8 only requires a database as a dependency to get access to all frameworks and functionality. Thanks to @npezza93 for the great work!",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52889/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 42,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 10,
        "reactions_confused": 0,
        "reactions_heart": 26,
        "reactions_rocket": 6,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52889.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52889.patch",
        "pull_request_merged_at": "2024-09-12T17:30:19Z"
    },
    {
        "id": 2522487512,
        "number": 52897,
        "title": "Propshaft only for new apps",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-12T13:59:02Z",
        "updated_at": "2024-09-12T13:59:09Z",
        "closed_at": "2024-09-12T13:59:09Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fix tests.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52897/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52897.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52897.patch",
        "pull_request_merged_at": "2024-09-12T13:59:09Z"
    },
    {
        "id": 2521820890,
        "number": 52894,
        "title": "Syntax error in user.rb when using lambdas",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-12T09:13:25Z",
        "updated_at": "2024-09-12T13:53:53Z",
        "closed_at": "2024-09-12T13:53:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Recent [changed on user.rb ](https://github.com/rails/rails/commit/9f8a3db328db9386e47a84138c49c410d36b7e78) introduced a syntax error with the usage of lambdas.\r\n\r\n### Steps to reproduce\r\n\r\nCompile the file with:\r\n\r\n```\r\nruby -c railties/lib/rails/generators/rails/authentication/templates/models/user.rb \r\n```\r\n\r\n### Expected behavior\r\n```\r\nSyntax OK\r\n```\r\n\r\n### Actual behavior\r\n```\r\nruby: railties/lib/rails/generators/rails/authentication/templates/models/user.rb:5: syntax error, unexpected '|' (SyntaxError)\r\n...es :email_address, with: -> { |e| e.strip.downcase }\r\n...  \r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n**Ruby version**:\r\nVisible with versions 2.6 and 3.5\r\n\r\n### Solution\r\nUse the correct syntax for the lambda:\r\n```\r\n  normalizes :email_address, with: lambda { |e| e.strip.downcase }\r\n```\r\nor\r\n```\r\n  normalizes :email_address, with: -> (e) { e.strip.downcase }\r\n```\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52894/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 15943469,
        "closed_by_id": 12642,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2522238595,
        "number": 52895,
        "title": "Fix syntax error in user.rb",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-12T12:17:57Z",
        "updated_at": "2024-09-12T13:53:52Z",
        "closed_at": "2024-09-12T13:53:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n### Motivation / Background\r\n\r\nFixes https://github.com/rails/rails/issues/52894\r\n\r\n### Detail\r\n\r\nFix a syntax error introduced in https://github.com/rails/rails/commit/9f8a3db328db9386e47a84138c49c410d36b7e78\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52895/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39735028,
        "closed_by_id": 12642,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52895.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52895.patch",
        "pull_request_merged_at": "2024-09-12T13:53:52Z"
    },
    {
        "id": 2217273706,
        "number": 51457,
        "title": "Add queries count to template rendering instrumentation",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-04-01T00:30:31Z",
        "updated_at": "2024-09-12T06:43:49Z",
        "closed_at": "2024-04-04T15:38:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "There is often a need to quickly see how many SQL queries the current action produced. For example, to quickly check if N+1 was solved or if the caching is working and so the # of queries reduced etc. This can be done manually by inspecting the logs and counting the number of queries, but for largish actions with tens-hundreds of SQL queries this is not a simple task.\r\n\r\nThis PR enhances the log output to also print the query counts.\r\n\r\n```\r\n# Before\r\nCompleted 200 OK in 3804ms (Views: 41.0ms | ActiveRecord: 33.5ms | Allocations: 112788)\r\n\r\n# After\r\nCompleted 200 OK in 3804ms (Views: 41.0ms | ActiveRecord: 33.5ms (2 queries, 1 cached) | Allocations: 112788)\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51457/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 44640,
        "label_ids": [
            107191,
            3666649
        ],
        "reactions_total_count": 67,
        "reactions_plus1": 30,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 14,
        "reactions_confused": 0,
        "reactions_heart": 23,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51457.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51457.patch",
        "pull_request_merged_at": "2024-04-04T15:38:23Z"
    },
    {
        "id": 2337468864,
        "number": 52030,
        "title": "ActiveModel::Attributes API with a dynamic default appears to re-use values across instances",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-06-06T06:49:13Z",
        "updated_at": "2024-09-12T06:15:42Z",
        "closed_at": "2024-09-12T06:15:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nDefine an attribute via the ActiveModel::Attributes API with a dynamic default:\r\n\r\n```ruby\r\nclass Foo < ApplicationRecord\r\n  attribute :bar, :string, default: -> { SecureRandom.uuid }\r\nend\r\n\r\nclass Gyp < ApplicationRecord\r\n  has_many :foos\r\nend\r\n```\r\n\r\nInstantiate a bunch of new of `Foo` records via the association, specifically I am using `my_gyp.foos.find_or_initialize_by(...)`.\r\n\r\n### Expected behavior\r\n\r\nThe default value lambda is called for every new record, so that every `foo#bar` would be unique.\r\n\r\n### Actual behavior\r\n\r\nSome of the `my_gyp.foos` records share the same value for `bar`.\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.3\r\n**Ruby version**: 3.3.0\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52030/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 4312,
        "closed_by_id": 28418009,
        "label_ids": [
            107191,
            12449438
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2419248395,
        "number": 52367,
        "title": "Add Content Security Policy Reporting Api Support",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-07-19T15:50:01Z",
        "updated_at": "2024-09-12T04:44:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\nThe `report-uri` directive has been slated for [deprecation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/report-uri) in favor of the new [report-to](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/report-to) directive through the new [ReportingAPI](https://w3c.github.io/reporting/)\r\n\r\nThis Pull Request has been created to introduce support for the new ReportingAPI (CSP level 3) while maintaining bidirectional compatibility with older browsers that still prefer the old `report-uri` directive (CSP level 2)\r\n\r\nFixes https://github.com/rails/rails/issues/35937\r\n\r\n### Detail\r\n\r\nThis Pull Request introduces a new `report_to` option for adding reporting endpoint(s) \r\n\r\n#### Example\r\n\r\n- Single URL/Endpoint\r\n```ruby\r\n# config/initializers/content_security_policy.rb\r\n\r\nRails.application.config.content_security_policy do |policy|\r\n  # Specify URI for violation reports\r\n\r\n  policy.report_to \"/csp-violation-report-endpoint\"\r\nend\r\n```\r\n\r\n- Multiple endpoints that share the same configuration under a single **group** name using a lambda\r\n\r\n```ruby\r\nRails.application.config.content_security_policy do |policy|\r\n\r\n  policy.report_to \"default\",  -> {{ \r\n      default: {\r\n        urls: [\"/csp-violation-report-endpoint\", \"https://example.com/csp-violation-report\"],\r\n        max_age: 30.minutes,\r\n        include_subdomains: true\r\n      },\r\n      group_2: \"https://example.com/hpkp-reports\"\r\n    }\r\n  }\r\nend\r\n```\r\n\r\n\r\n### Additional information\r\n\r\n- The `report_to` directive automatically adds the `report_uri` directive by default to enforce bidirectional compatibility\r\n- This is my first PR to this repo, so please let me know if there are any improvements I can make.\r\n\r\n#### Reporting API-specific information\r\n\r\n- The Reporting API is only available in [secure contexts](https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts)\r\n\r\n- Reports are delivered [out-of-band](https://en.wikipedia.org/wiki/Out-of-band_datahttps://en.wikipedia.org/wiki/Out-of-band_data) by the browser itself, rather than by your server or site, meaning the browser controls when reports are delivered to your server(s). With CSP level 2 (`report-uri`), reports are sent immediately. In contrast, with CSP level 3 (`report-to`), reports are sent at the browser’s discretion, potentially with delays of up to a minute. \r\n\r\n  This approach allows reports to be **batched** rather than sent **individually**, which helps save bandwidth and is particularly considerate of users' network connections, especially on mobile devices.\r\n\r\n\r\n- Reports sent via the [report-to](https://csplite.com/csp124/) directive have a universal format, since not only a report on CSP violation can be sent via it, but also any reports about problems that occurred in the browser. The Content Security Policy violation report will have of type \"[csp-violation](https://csplite.com/csp66/#type)\", while the content of the violation report itself will be sent in the \"[body](https://csplite.com/csp66/#body)\" field:\r\n\r\n- The field names differ from the standard names of a violation report, sent via `report_uri`, changing from `kebab-case` to `camelCase`.:\r\n\r\nreport-uri | -> | report-to\r\n  -- | -- | --\r\n  document-uri | -> | documentURL\r\n  effective-directive | -> | effectiveDirective\r\n  violated-directive | -> | violatedDirective\r\n  source-file | -> | sourceFile\r\n  original-policy | -> | originalPolicy\r\n  line-number | -> | lineNumber\r\n  status-code | -> | statusCode\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52367/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 65364356,
        "label_ids": [
            107189,
            107195,
            150377,
            1180817762
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52367.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52367.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2521142182,
        "number": 52890,
        "title": "Skip solid cable install if skipping action cable",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-12T01:50:47Z",
        "updated_at": "2024-09-12T02:29:55Z",
        "closed_at": "2024-09-12T02:29:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes tests\r\n\r\ncc @dhh ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52890/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5059927,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52890.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52890.patch",
        "pull_request_merged_at": "2024-09-12T02:29:55Z"
    },
    {
        "id": 1959729520,
        "number": 49771,
        "title": "Reimplement TaggedLogging:",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11477472,
            "number": 91,
            "title": "7.1.5",
            "description": "",
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 7,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-08-22T21:33:52Z",
            "updated_at": "2024-08-22T21:34:04Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-10-24T17:24:15Z",
        "updated_at": "2024-09-12T01:17:32Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "- ### Context\r\n\r\n  The Tagged Logging functionality has been a source of a few issues over the years, especially when combined with the broadcasting feature. Initializating a Tagged Logger was also not very intuitive:\r\n\r\n  ```ruby \r\n  logger = Logger.new(STDOUT)\r\n  tagged_logger = ActiveSupport::TaggedLogging.new(logger)\r\n  # Would expect the `tagged_logger` to be an instance of `AS::TaggedLogging` \r\n  # but it's a clone of the `logger`.\r\n\r\n  tagged_logger.formatter = ->(_, _, _, message) do\r\n    { message: message }\r\n  end\r\n  # Modifies the formatter to output JSON formatted logs.\r\n  # This breaks tagged logging.\r\n  ```\r\n\r\n  I believe the main reason of those issues is because tagged logging is implemented at the wrong level.\r\n\r\n  ### Solution\r\n\r\n  I made a proposal on the Ruby logger upstream in ruby/logger#90 to help solve this but it hasn't been reviewed yet. So I thought about adding it here for now. The TL;DR is to decouple formatting and adding extra information to logs (which is what tagged logging does).\r\n\r\n  ### Deprecation\r\n\r\n  Since TaggedLogging will no longer access the formatter, there is a few things I'd like to deprecate such as setting a default formatter https://github.com/rails/rails/blob/d68e43922bc11829c52ad9f736ad5549fc97631b/activesupport/lib/active_support/tagged_logging.rb#L124 but doing so in this PR would increase the size of the diff significantly and would maybe distract for PR reviews.\r\n\r\n  Another thing that I believe should be deprecated is `ActiveSupport::TaggedLogging.new`. Adding tagging functionality to a logger should be done using a more ruby approach such as `logger.extend(AS::TaggedLogging)`.\r\n\r\n-------------------\r\n\r\nFix #49757 \r\nFix #49745 \r\nFix #46084 \r\nFix #44668\r\nFix #52876",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49771/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 8122246,
        "label_ids": [
            107194,
            123812746,
            300028327
        ],
        "reactions_total_count": 5,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 1,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 1,
        "reactions_eyes": 1,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/49771.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/49771.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2518392785,
        "number": 52876,
        "title": "ActiveJob run multiple jobs per single enqueue in Rails 7.1",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-11T03:49:36Z",
        "updated_at": "2024-09-12T01:02:32Z",
        "closed_at": "2024-09-12T01:02:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "- I found this issue when using Rails 7.1 with Sidekiq 7.2.\r\n    - After upgrading to Rails 7.1 from Rails 7.0, it was noticed that jobs were being executed multiple times.\r\n- When the `config.logger` for Sidekiq is set, the BroadcastLogger adds additional loggers.\r\n  - https://github.com/sidekiq/sidekiq/blob/v7.2.4/lib/sidekiq/rails.rb?plain=1#L64\r\n- It has been found that the number of jobs executed is related to the count of loggers registered in the BroadcastLogger.\r\n  - I could create a reproduction script using only ActiveJob without Sidekiq, so I report this bug to Rails.\r\n\r\n- Using `git bisect`, the first bad commit was identified as:\r\n\r\n```\r\nFinished in 0.006308s, 158.5287 runs/s, 158.5287 assertions/s.\r\n1 runs, 1 assertions, 0 failures, 0 errors, 0 skips\r\n665b1f3a87627e97865f800f2a2fd69bdf8c4852 is the first bad commit\r\ncommit 665b1f3a87627e97865f800f2a2fd69bdf8c4852\r\nAuthor: Eugene Kenny <elkenny@gmail.com>\r\nDate:   Tue Oct 3 02:08:27 2023 +0100\r\n\r\n    Merge pull request #49458 from eugeneius/broadcast_delegate_block\r\n\r\n    Delegate block in broadcast logger method_missing\r\n\r\n activesupport/lib/active_support/broadcast_logger.rb | 12 ++++++++----\r\n activesupport/test/broadcast_logger_test.rb          | 14 ++++++++++++++\r\n 2 files changed, 22 insertions(+), 4 deletions(-)\r\nbisect found first bad commit\r\n$ git co 665b1f3a87627e97865f800f2a2fd69bdf8c4852\r\nPrevious HEAD position was 7edbcce654 Merge pull request #49456 from seanpdoyle/strong-parameters-deep-merge-rdoc\r\nHEAD is now at 665b1f3a87 Merge pull request #49458 from eugeneius/broadcast_delegate_block\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\nENV[\"RAILS_ENV\"] = \"test\"\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  gem \"sqlite3\", \"~> 1.4\"\r\nend\r\n\r\nrequire \"rails/all\"\r\n\r\nclass TestApp < Rails::Application\r\n  logger = ActiveSupport::TaggedLogging.new(ActiveSupport::Logger.new('./log/dummy1.log')) \r\n  broadcast_logger = ActiveSupport::BroadcastLogger.new(logger)\r\n  broadcast_logger.formatter = logger.formatter\r\n\r\n  broadcast_logger.broadcast_to(\r\n    ActiveSupport::TaggedLogging.new(ActiveSupport::Logger.new('./log/dummy2.log')),\r\n    ActiveSupport::TaggedLogging.new(ActiveSupport::Logger.new('./log/dummy3.log')),\r\n  )\r\n  Rails.logger = broadcast_logger\r\nend\r\n\r\n\r\nENV[\"DATABASE_URL\"] = \"sqlite3::memory:\"\r\n\r\nbegin\r\n  Rails.application.initialize!\r\nrescue => e\r\n  puts e.message\r\n  exit\r\nend\r\n\r\nrequire 'active_job'\r\nclass DummyJob < ActiveJob::Base\r\n  def perform(params)\r\n    puts \"DummyJob#perform: #{params}\"\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveJob::TestHelper\r\n\r\n  def test_perform_only_once\r\n    params =  \"foo\"\r\n\r\n    DummyJob.set(wait: 100.second).perform_later(params)\r\n\r\n    assert_equal 1, ActiveJob::Base.queue_adapter.enqueued_jobs.size\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nOnly one job should be executed for each enqueue.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nIn this test case, a total of three jobs are executed for a single enqueue.\r\n\r\n```\r\nRun options: --seed 45146\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nBugTest#test_perform_only_once [issue_7_1_activejob_perform_multiple_with_broadcast_logger.rb:59]:\r\nExpected: 1\r\n  Actual: 3\r\n\r\n\r\nbin/rails test issue_7_1_activejob_perform_multiple_with_broadcast_logger.rb:54\r\n\r\n\r\n\r\nFinished in 0.005690s, 175.7443 runs/s, 175.7443 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1.4, 7.2.1\r\n\r\n**Ruby version**: ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52876/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 1710555,
        "closed_by_id": 277819,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2519674317,
        "number": 52880,
        "title": "Set usec 0 unless with_usec",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-11T12:55:05Z",
        "updated_at": "2024-09-12T00:30:44Z",
        "closed_at": "2024-09-11T16:29:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because `travel_to` does not set usec to 0 depending on the argument (String and DateTime).\r\nThe behavior differs from that defined in the documentation.\r\n\r\n### Detail\r\n\r\nThe document describes usec will be set to 0 unless `with_usec` is set to true. \r\n\r\n> Note that the usec for the time passed will be set to 0 to prevent rounding errors with external services, like MySQL (which will round instead of floor, leading to off-by-one-second errors), unless the with_usec argument is set to true.\r\n\r\nBut I found it does not in some cases.\r\n\r\n```ruby\r\ntravel_to(\"2024-09-11 21:17:58.766491 +0900\") do\r\n  pp Time.now.iso8601(3)\r\nend\r\n\r\n# expected\r\n# => 2024-09-11 21:17:58.000 +0900\r\n\r\n# actual\r\n# => 2024-09-11 21:17:58.766 +0900\r\n```\r\n\r\nPlease check the test for the other cases.\r\n\r\nI faced this behavior in the Rails matrix test (Rails 7.0 and Rails 7.1) in CI for our products.\r\nThe PR https://github.com/rails/rails/pull/44088 introduces `with_usec` option.\r\n\r\nThe `Time.now` was stubbed and uses UNIX timestamp which does not have a subsecond before the PR\r\n```ruby\r\nsimple_stubs.stub_object(Time, :now) { at(now.to_i) }\r\n```\r\n\r\nIt uses `to_f` and keeps the subsecond in some branches after the PR.\r\n```ruby\r\nsimple_stubs.stub_object(Time, :now) { at(now.to_f) }\r\n```\r\n\r\nThis PR is also breaking change.\r\nI'm not sure whether this way is the proper way or not. Please teach me if you have another way.\r\nIn addition, my writing is not so good. please revise the CHANGELOG also 🙏 \r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\nNone\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52880/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1330045,
        "closed_by_id": 47848,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52880.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52880.patch",
        "pull_request_merged_at": "2024-09-11T16:29:34Z"
    },
    {
        "id": 1976420897,
        "number": 49903,
        "title": "Compress large payloads in all Action Cable subscription adapters with ActiveSupport::Gzip",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 20,
        "created_at": "2023-11-03T15:16:47Z",
        "updated_at": "2024-09-11T23:53:28Z",
        "closed_at": "2024-09-11T23:53:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThe [PostgreSQL notify command](https://www.postgresql.org/docs/16/sql-notify.html) has a limit of 8000 bytes, which means that the payload that can be broadcasted cannot be very large.\r\n\r\nThis is motivated by the simplicity of the solution and by leaving the Redis dependency, along the same lines of Solid Cache and Solid Queue.\r\n\r\n### Detail\r\n\r\nLike `ActiveSupport::Cache`, Payloads that are larger than 1 kilobytes are now compressed with ActiveSupport::Gzip.\r\n\r\n```yaml\r\nproduction:\r\n  adapter: postgresql\r\n  channel_prefix: appname_production\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nIn the tests you can see a rather large string that can now be broadcasted with the PostgreSQL adapter.\r\n\r\nAdditionally, I've added the `ActionCable::SubscriptionAdapter::Compressor` class so other adapters can make use of it in the future.\r\n\r\nThere is another approach and another discussion in #49634.\r\n\r\nThanks to @palkan for the idea in this [comment](https://github.com/rails/rails/pull/49634#issuecomment-1765096837).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49903/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 46098928,
        "closed_by_id": 2741,
        "label_ids": [
            150377,
            300028327
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 3,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/49903.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/49903.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2278273750,
        "number": 51729,
        "title": "Add rename_csp_helper_nonce_attribute ActionView configuration to avoid value exfiltration",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-05-03T19:15:54Z",
        "updated_at": "2024-09-11T23:27:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Adds a configuration to rename the CSP helper attribute name to avoid value exfiltration as described in https://github.com/rails/rails/issues/51580#issue-2246912613\r\n\r\nIt's disabled by default currently until the JS libraries are updated to the new attribute name and Rails can ship with a new default attribute name.\r\n\r\nFixes the Rails part #51580. See this PR for a potential fix in Turbo: https://github.com/hotwired/turbo/pull/1254/files\r\n\r\nIf this approach makes sense in general, I'd try to fix ujs as well 👍",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51729/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 4910785,
        "label_ids": [
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51729.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51729.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2516708410,
        "number": 52870,
        "title": "Add table_name to disable_referential_integrity",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-10T14:56:29Z",
        "updated_at": "2024-09-11T23:22:38Z",
        "closed_at": "2024-09-11T23:22:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nThis MR allows to disable all constraints on a given table for postgresql.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52870/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6765108,
        "closed_by_id": 277819,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52870.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52870.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2511418761,
        "number": 52827,
        "title": "Add benchmark gem as dependency for Active Support",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-07T02:38:56Z",
        "updated_at": "2024-09-11T23:17:17Z",
        "closed_at": "2024-09-11T23:17:16Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis commit addresses Rails Nightly CI at https://buildkite.com/rails/rails-nightly/builds/995\r\n\r\n### Detail\r\n- This commit addresses the following error.\r\n\r\n```ruby\r\n$ cd actioncable\r\n$ RAILS_STRICT_WARNINGS=1 bin/test test/subscription_adapter/postgresql_test.rb\r\n/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/migration.rb:3: warning: benchmark was loaded from the standard library, but will no longer be part of the default gems starting from Ruby 3.5.0.\r\nYou can add benchmark to your Gemfile or gemspec to silence this warning.\r\n/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/strict_warnings.rb:38:in 'ActiveSupport::RaiseWarnings#warn': /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/migration.rb:3: warning: benchmark was loaded from the standard library, but will no longer be part of the default gems starting from Ruby 3.5.0. (ActiveSupport::RaiseWarnings::WarningError)\r\nYou can add benchmark to your Gemfile or gemspec to silence this warning.\r\n\r\n        from <internal:warning>:54:in 'Kernel.warn'\r\n        from /home/yahonda/.rbenv/versions/trunk/lib/ruby/3.4.0+0/bundled_gems.rb:74:in 'block (2 levels) in Kernel#replace_require'\r\n        from /home/yahonda/.gem/ruby/3.4.0+0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in 'Kernel#require'\r\n        from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/migration.rb:3:in '<top (required)>'\r\n        from /home/yahonda/.rbenv/versions/trunk/lib/ruby/3.4.0+0/bundled_gems.rb:79:in 'Kernel.require'\r\n        from /home/yahonda/.rbenv/versions/trunk/lib/ruby/3.4.0+0/bundled_gems.rb:79:in 'block (2 levels) in Kernel#replace_require'\r\n        from /home/yahonda/.gem/ruby/3.4.0+0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in 'Kernel#require'\r\n        from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record.rb:432:in '<module:ActiveRecord>'\r\n        from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record.rb:40:in '<top (required)>'\r\n        from /home/yahonda/.rbenv/versions/trunk/lib/ruby/3.4.0+0/bundled_gems.rb:79:in 'Kernel.require'\r\n        from /home/yahonda/.rbenv/versions/trunk/lib/ruby/3.4.0+0/bundled_gems.rb:79:in 'block (2 levels) in Kernel#replace_require'\r\n        from /home/yahonda/.gem/ruby/3.4.0+0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in 'Kernel#require'\r\n        from /home/yahonda/src/github.com/rails/rails/actioncable/test/subscription_adapter/postgresql_test.rb:7:in '<top (required)>'\r\n        from /home/yahonda/.rbenv/versions/trunk/lib/ruby/3.4.0+0/bundled_gems.rb:79:in 'Kernel.require'\r\n        from /home/yahonda/.rbenv/versions/trunk/lib/ruby/3.4.0+0/bundled_gems.rb:79:in 'block (2 levels) in Kernel#replace_require'\r\n        from /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:62:in 'block in Rails::TestUnit::Runner.load_tests'\r\n        from <internal:array>:53:in 'Array#each'\r\n        from /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:60:in 'Rails::TestUnit::Runner.load_tests'\r\n        from /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:52:in 'Rails::TestUnit::Runner.run'\r\n        from /home/yahonda/src/github.com/rails/rails/tools/test.rb:18:in '<top (required)>'\r\n        from bin/test:5:in 'Kernel#require_relative'\r\n        from bin/test:5:in '<main>'\r\n$\r\n```\r\n\r\n### Additional information\r\n- \"benchmark\" is required at these files. Action Pack and Active Support depends on Active Support.\r\n\r\n```ruby\r\n$ git grep 'require \"benchmark\"'\r\nactionpack/lib/action_controller/metal/instrumentation.rb:require \"benchmark\"\r\nactiverecord/lib/active_record/migration.rb:require \"benchmark\"\r\nactivesupport/lib/active_support/core_ext/benchmark.rb:require \"benchmark\"\r\n```\r\n\r\nRefer to\r\nhttps://github.com/ruby/ruby/commit/0e7b6e348fa5b85de365ab9ec62abe26d0adb0bc\r\nhttps://bugs.ruby-lang.org/issues/20309\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52827/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 73684,
        "closed_by_id": 73684,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52827.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52827.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2516504773,
        "number": 52867,
        "title": "Allow `benchmark` warnings tentatively",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-10T13:35:38Z",
        "updated_at": "2024-09-11T23:17:09Z",
        "closed_at": "2024-09-11T23:17:09Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis commit allows `benchmark` warnings below tentatively to avoid overlooking other warnings/errors at Rails Nightly CI.\r\n\r\n### Detail\r\n\r\nhttps://buildkite.com/rails/rails-nightly/builds/995\r\n\r\n```ruby\r\nwarning: benchmark was loaded from the standard library, but will no longer be part of the default gems starting from Ruby 3.5.0.\r\nYou can add benchmark to your Gemfile or gemspec to silence this warning.\r\n```\r\n\r\n### Additional information\r\nThis commit can be reverted when #52746 or #52827 is merged.\r\n\r\nRefer to\r\nruby/ruby@0e7b6e3\r\nhttps://bugs.ruby-lang.org/issues/20309\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n\r\n\r\n\r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52867/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 73684,
        "closed_by_id": 73684,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52867.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52867.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2512621099,
        "number": 52836,
        "title": "bug: Guides highlight illegible text on highlight",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-08T23:22:46Z",
        "updated_at": "2024-09-11T22:19:22Z",
        "closed_at": "2024-09-11T22:19:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nselect any text in the guides part of the docs.\r\n\r\n![image](https://github.com/user-attachments/assets/046bbf48-c3ba-4187-a98b-2e2057b31d85)\r\n\r\n### Expected behavior\r\nselected text should be visible on dark and light mode\r\n\r\n### Actual behavior\r\ntext color blends in with the selection background color\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52836/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 34947993,
        "closed_by_id": 277819,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2516223678,
        "number": 52863,
        "title": "Deprecate ActiveStorage::Service::AzureStorageService",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-10T11:51:44Z",
        "updated_at": "2024-09-11T22:03:30Z",
        "closed_at": "2024-09-11T15:59:01Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes: #49983\r\n\r\n/cc @JoeDupuis ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52863/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "closed_by_id": 47848,
        "label_ids": [
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52863.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52863.patch",
        "pull_request_merged_at": "2024-09-11T15:59:01Z"
    },
    {
        "id": 2516016918,
        "number": 52861,
        "title": "Mention `assume_ssl` in SSL middleware.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-10T10:14:14Z",
        "updated_at": "2024-09-11T21:26:23Z",
        "closed_at": "2024-09-11T20:26:11Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Clarify that `assume_ssl` can be used with `force_ssl` to let the server know the request already is HTTPS.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52861/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 47848,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52861.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52861.patch",
        "pull_request_merged_at": "2024-09-11T20:26:11Z"
    },
    {
        "id": 2520357754,
        "number": 52886,
        "title": "[ci skip] fix association callback method without parameter in documentation",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-11T17:38:24Z",
        "updated_at": "2024-09-11T18:01:02Z",
        "closed_at": "2024-09-11T18:01:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Detail\r\n\r\nWhen defining methods for association callbacks, it is mandatory that the method receives a parameter, otherwise an error is raised.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52886/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 42195321,
        "closed_by_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52886.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52886.patch",
        "pull_request_merged_at": "2024-09-11T18:01:02Z"
    },
    {
        "id": 2512105173,
        "number": 52830,
        "title": "Load schema when running db:migrate on fresh db",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-07T22:49:28Z",
        "updated_at": "2024-09-11T17:48:00Z",
        "closed_at": "2024-09-11T17:47:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "\r\n### Motivation / Background\r\n\r\nFixes https://github.com/rails/rails/issues/52829\r\n\r\nWhen we have a schema file, if we run `db:migrate` before setting up the db, we do not load the schema and then we blow away the contents of the file when we dump the schema after migrations.\r\n\r\nYou can repro by creating a fresh app and running the following commands:\r\n\r\n```\r\nbin/rails g model Post\r\nbin/rails db:migrate\r\nrm -rf db/migrate\r\nbin/rails db:drop\r\nbin/rails db:migrate\r\n```\r\n\r\nAfter following these steps, the schema file will be empty and the posts table will not exist.\r\n\r\n### Detail\r\n\r\nWe should make sure the db is setup before we run migrations. This is what we do in the `db:prepare` task. So, I extracted the code from that task and reused it in the migration task.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52830/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39735028,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52830.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52830.patch",
        "pull_request_merged_at": "2024-09-11T17:47:58Z"
    },
    {
        "id": 2511819265,
        "number": 52829,
        "title": "Second-db schema is overwritten erroneously when running db:migrate",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 3,
        "created_at": "2024-09-07T16:01:28Z",
        "updated_at": "2024-09-11T17:47:59Z",
        "closed_at": "2024-09-11T17:47:59Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "When you install Solid Queue, we add a new dedicated schema in db/queue_schema.rb. We also add an empty directory for future migrations in db/queue_migrate. If you run db:prepare, everything works as it should, after we fixed https://github.com/rails/rails/issues/52776. But if you run db:migrate, you get a different version of the same issue. The db/queue_schema.rb is erroneously overwritten with an empty schema. \r\n\r\nMaybe because the queue schema wasn't loaded yet when db:migrate tried to set up the secondary db upon running db:migrate, it may just be creating the empty db, then dumping the schema for that empty db (which is empty). This is not how it works on the primary DB nor of course is how it should work.\r\n\r\nIf on a new app, you have a db/schema.rb and you have an empty db/migrate, you won't get your schema zeroed out when running db:migrate as the first db task.\r\n\r\nSee https://github.com/rails/solid_queue/issues/329\r\n\r\ncc @rafaelfranca \r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52829/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2741,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2445971686,
        "number": 52495,
        "title": "Enable raising an error for missing translations on a per-model basis",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 2,
        "created_at": "2024-08-03T02:50:43Z",
        "updated_at": "2024-09-11T17:35:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Problem:\r\n\r\nf6c0a35b1b8b4fb4d033aa6c09c4efaaf6652bdc changed `human_attribute_name` to raise error if `raise_on_missing_translations` is `true`. This change had a major impact on existing applications (i.e., too many missing translation errors).\r\n\r\nSolution:\r\n\r\nAllow each model to decide whether to raise an error on missing translations.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52495/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 99586,
        "label_ids": [
            107190,
            150377,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52495.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52495.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1151001845,
        "number": 44556,
        "title": "Remove Rack::Sendfile from the default middleware stack",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 5,
        "created_at": "2022-02-26T00:56:38Z",
        "updated_at": "2024-09-11T17:35:08Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\nDiscussions: #41148, #42635 \r\nFixes #41148\r\n\r\n*  `Rack::Sendfile` is replaced by a dummy `FakeSendfile` middleware, which cannot be used in middleware operations\r\n*   Using `Rack::Sendfile` in middleware operations (`insert_after`, `insert_before`, etc.) throws a deprecation warning and uses `FakeSendfile` as asserting index instead\r\n*   If an application adds `Rack::Sendfile` explicitly (`use`, etc.), then the deprecation warning is not raised and `FakeSendfile` is ignored\r\n*   Deprecated configuration option for specifying the header used for sending files:\r\n    ```\r\n    config.action_dispatch.x_sendfile_header = 'X-Sendfile'\r\n    ```\r\n*   Docs are updated. Some examples are updated as well.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/44556/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 8790422,
        "label_ids": [
            107189,
            107195,
            128692,
            150377,
            664533972,
            1174770998,
            1180817762
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/44556.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/44556.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1860143970,
        "number": 48993,
        "title": "Make `has_secure_password` pluginable/extendable with different password hashing algorithms",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 10,
        "created_at": "2023-08-21T21:01:57Z",
        "updated_at": "2024-09-11T17:34:45Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nBased on an idea by @rafaelfranca in https://github.com/rails/rails/issues/41420#issuecomment-1686745412.\r\n\r\nWhile BCrypt may be the desirable default password hashing algorithm in Rails for the foreseeable future, making the mechanism for hashing and verifying passwords in `has_secure_password` extendable/modular is valuable.\r\n\r\nDevelopers may opt for different hashing algorithms and can now extend or plug in their own alongside BCrypt in a clean and maintainable way. From the referenced thread, there is discourse amongst people on what should be the _de facto_ password algorithm and disagreement on whether Argon2 should be it. Rails should make it easier for the community to progress on best password hashing practices.\r\n\r\nThis also unlocks Rails shipping with more than BCrypt as an available hashing algorithm.\r\n\r\nI _could_ see a world where Rails offers PBKDF2 (for those wanting FIPS 140 compliance), BCrypt (the safe default), and Argon2 (since OWASP recommends it).\r\n\r\n### Detail\r\n\r\nThis PR takes BCrypt-specific code in `ActiveModel::SecurePassword` and extracts it out into an object `ActiveModel::SecurePassword::BCrypt`. The object adheres to a simple interface (`ActiveModel::SecurePassword::Base`) so developers can supplement with different algorithms (or different libraries of the same underlying algo). \r\n\r\nA user of the Rails framework uses the newly added `:algorithm` option in `has_secure_password` to declare what password hashing algo should be used on a given attribute.\r\n\r\nDevelopers can write libraries or even initializers to add different password hashing algorithm support following a very clean interface.\r\n\r\nBelow is an example of someone opting to use Argon2 using `ruby-argon2`:\r\n\r\n```ruby\r\n# config/initializers/add_argon2_to_activemodel_securepassword.rb\r\n\r\nrequire \"active_model/secure_password/base\"\r\n\r\nmodule ActiveModel\r\n  module SecurePassword\r\n    class Argon2id < Base\r\n      def initialize\r\n        require \"argon2\"\r\n      rescue LoadError\r\n        warn \"You don't have argon2 installed in your application. Please add it to your Gemfile and run bundle install.\"\r\n        raise\r\n      end\r\n\r\n      def self.algorithm_name\r\n        :argon2id\r\n      end\r\n\r\n      def hash_password(unencrypted_password, options = {})\r\n        if options[:min_cost]\r\n          hasher = Argon2::Password.new(t_cost: 1, m_cost: 3, p_cost: 1)\r\n        else\r\n          hasher = Argon2::Password.new(t_cost: 2, m_cost: 19, p_cost: 1)  # Latest OWASP recommended values\r\n        end\r\n        hasher.create(unencrypted_password)\r\n      end\r\n\r\n      def verify_password(password, digest)\r\n        Argon2::Password.verify_password(password, digest)\r\n      end\r\n\r\n      def password_salt(digest)\r\n        Argon2::HashFormat.new(digest).salt\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n```ruby\r\n# app/models/user.rb\r\n\r\nclass User < ActiveRecord::Base\r\n  has_secure_password :password, algorithm: :argon2\r\nend\r\n```\r\n\r\n### Additional information\r\n\r\nI'm a bit of a novice when it comes to making Rails aware of different files and how to \"register\" a series of subclasses (some of which could be defined in libraries or the initializers folder) to a part of Rails. Open to whatever pattern is the most appropriate.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48993/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 740289,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 2,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/48993.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/48993.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1021806296,
        "number": 43418,
        "title": "Forms: Deprecate `local:` and `remote:` options",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 12,
        "created_at": "2021-10-09T21:09:03Z",
        "updated_at": "2024-09-11T17:34:25Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThere are two two parts to interpreting the `form_for` helper's `remote:` option, and the `form_with` helper's `local:` option:\r\n\r\n1. The `[data-remote]` attribute:\r\n\r\n   When `remote: true` or `local: false`, Action View generates `<form>`\r\n   elements with `[data-remote=\"true\"]`. When passed `remote: false` or\r\n   `local: true`, the `[data-remote]` attribute is omitted.\r\n\r\n   Omitting the options is equivalent to `remote: true` and `local:\r\n   false`.\r\n\r\n2. CSRF tokens\r\n\r\n   When `remote: true` or `local: false`, Action view generates `<form>`\r\n   elements without any CSRF tokens encoded as `<input type=\"hidden\">`\r\n   elements.\r\n\r\n   When `remote: false` or `local: true`, Action view generates `<form>`\r\n   elements with an embedded CSRF token either generated on the fly, or\r\n   forwarded along from the form helper method's `authenticity_token:`\r\n   option.\r\n\r\n   When omitted, their default values are handled by two similar\r\n   configuration values:\r\n\r\n   * `config.action_view.embed_authenticity_token_in_remote_forms` for\r\n     `form_for` and its `remote:` option\r\n\r\n   * `config.action_view.form_with_generates_remote_forms` for\r\n     `form_with` and its `local:` option\r\n\r\n### Detail\r\n\r\nThis commit renders deprecation warnings when `local:` or `remote:`\r\noptions are passed to `form_with` and `form_for`, respectively. Also\r\ndeprecate `config.action_view.embed_authenticity_token_in_remote_forms`\r\nand `config.action_view.form_with_generates_remote_forms`\r\nconfigurations.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/43418/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2575027,
        "closed_by_id": 28418009,
        "label_ids": [
            150377,
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/43418.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/43418.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2516605430,
        "number": 52868,
        "title": "Allow BroadcastLogger to pass through kwargs",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-10T14:14:48Z",
        "updated_at": "2024-09-11T17:21:42Z",
        "closed_at": "2024-09-11T16:38:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because logger implementations may extend the logging interface to provide optional information via keyword arguments. Upon assigning a logger instance to Rails.logger it becomes wrapped in a BroadcastLogger, which restricts the interface by not passing keyword arguments through to underlying loggers unchanged.\r\n\r\nWhen BroadcastLogger is applied to a logger implementation that takes kwargs, a developer invoking a logging message while passing kwargs will run into\r\n\r\n    ArgumentError: wrong number of arguments (given 2, expected 0..1)\r\n\r\nThis error is confusing since the 'correct' arguments are passed, and BroadcastLogger's splat unexpectedly converts the kwargs into a hash and passes that hash along as a second argument instead of forwarding along the method arguments unchanged.\r\n\r\n\r\n### Detail\r\n\r\nThis Pull Request changes logging methods from explicit argument delegation `info(*args, &block)` to implicit argument delegation `info(...)`.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\nhttps://github.com/bkuhlmann/cogger is an example of [a logging implementation that may take kwargs](https://github.com/bkuhlmann/cogger/blob/1d3d82f0f2b92b53277c8ff5ba9723671e478f98/lib/cogger/hub.rb#L53-L61), and this is a problem I have hit in practice with another logger implementation.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. **is this a minor bugfix?**\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52868/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 97257,
        "closed_by_id": 12642,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52868.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52868.patch",
        "pull_request_merged_at": "2024-09-11T16:38:03Z"
    },
    {
        "id": 2519487688,
        "number": 52879,
        "title": "Change `ActiveRecord::FinderMethods#find_sole_by` to return nil if no record is found",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-11T11:32:14Z",
        "updated_at": "2024-09-11T17:07:58Z",
        "closed_at": "2024-09-11T16:48:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "Change `#find_sole_by` to return nil if no record is found\r\nAdd `#find_sole_by!` to find and assert the presence of exactly one record\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request addresses the issue where `#find_sole_by` currently raises an `ActiveRecord::RecordNotFound` error when no record is found. The proposed changes are similar to the behavior of `#find_by!` and `#find_by`, where if no record is found:\r\n\r\n- `#find_sole_by` will return nil.\r\n- `#find_sole_by!` will raise an ActiveRecord::RecordNotFound error.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `#find_sole_by` to return nil if no record is found and adds `#find_sole_by!` to keep the current `#find_sole_by` behaviour.\r\n\r\n### Additional information\r\n\r\nThis is a breaking change but ...\r\n> The use case of `there should be either zero or one record matching the condition, but never more than one` is very common.\r\n\r\nhttps://github.com/rails/rails/pull/40768#issuecomment-1143532090\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52879/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6829687,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52879.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52879.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2501751427,
        "number": 52780,
        "title": "[ci skip] Update caching development mode default status docs",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-03T01:12:14Z",
        "updated_at": "2024-09-11T16:42:02Z",
        "closed_at": "2024-09-11T16:26:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the default state of caching on a fresh rails app is wrong in the docs\r\n\r\n### Detail\r\n\r\n`Rails.application.config.action_controller.perform_caching` returns false in a fresh created rails app\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52780/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 25371907,
        "closed_by_id": 47848,
        "label_ids": [
            107195,
            150377,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52780.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52780.patch",
        "pull_request_merged_at": "2024-09-11T16:26:34Z"
    },
    {
        "id": 2512622368,
        "number": 52838,
        "title": "fix text selection color in doc guides",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-08T23:26:20Z",
        "updated_at": "2024-09-11T16:10:12Z",
        "closed_at": "2024-09-11T16:10:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nthis pr fixes the selection color for text because it blends with the background.\r\n\r\nthe custom styles are removed and the highlight color is now system dependent which is better because user settings can affect the selection color such as contrast settings defined by the user and we shouldn't override those for better accessibility.\r\n\r\nfixes #52836\r\n\r\nThis Pull Request has been created because of #52836\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the selection color in the guide docs\r\n\r\n### Additional information\r\n\r\nbefore:\r\n![image](https://github.com/user-attachments/assets/7e649f68-79db-4a8d-b532-162ea8669e0e)\r\n\r\nafter:\r\n![image](https://github.com/user-attachments/assets/455666dc-0922-4e34-9f0a-a45217d230aa)\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52838/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 34947993,
        "closed_by_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52838.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52838.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2082675602,
        "number": 50759,
        "title": "Migrate Rails API doc to use Markdown instead of RDoc format",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-15T21:02:56Z",
        "updated_at": "2024-09-11T16:02:03Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "### NOTE: We aren't going to accept any PR doing this migration\r\n\r\nFrom time to time, we have to remember that while documenting some method on Rails, using `+foo+` to denote a method name or argument sometimes need to change to be `<tt>foo</tt>` in order to be documented. We also sometimes receive PRs with people accidentally introducing backticks that doesn't have any effect in the documentation.\r\n\r\nOur guides also uses Markdown syntax, so contributors need to know they need to change syntax when writting documentation.\r\n\r\nText editors, like VScode don't know how to highlight RDoc code so often see Rails documentation formatted like this when you hover over a class\r\n\r\n<img width=\"802\" alt=\"Screenshot 2024-01-15 at 4 01 03 PM\" src=\"https://github.com/rails/rails/assets/47848/2e31157d-dd86-487d-83d6-c34e4c013151\">\r\n<img width=\"810\" alt=\"Screenshot 2024-01-15 at 4 02 00 PM\" src=\"https://github.com/rails/rails/assets/47848/435e899b-8cfc-4bf4-9b8c-dfd7383fd867\">\r\n\r\nNowadays, RDoc supports Markdown as syntax. So we can avoid all those problems migrating all our API documentation to use Markdown.\r\n\r\n### NOTE: We aren't going to accept any PR doing this migration",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50759/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47848,
        "label_ids": [],
        "reactions_total_count": 15,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 14,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 1,
        "reactions_eyes": 0
    },
    {
        "id": 2064763177,
        "number": 50568,
        "title": "Publish ActiveModel::Attributes API",
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "rafaelfranca",
            "id": 47848,
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 8,
        "created_at": "2024-01-03T23:05:22Z",
        "updated_at": "2024-09-11T16:01:52Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "`ActiveModel::Attributes` is public API of the framework since 7.1, but wasn't advertised in guides mostly because there are a few features missing, like [attribute composition](https://gist.github.com/rafaelfranca/d54e7a1e8beb40ae1ac79bbb779970fa).\r\n\r\n- [ ] `ActiveModel::Model` should include `ActiveModel::Attribute` by default when it is made public.\r\n- [ ] Merge `Model` support https://github.com/rails/rails/pull/44380\r\n- [ ] Merge `Collection` attribute https://github.com/rails/rails/pull/44324\r\n- [ ] Merge `validates_model` https://github.com/rails/rails/pull/49534\r\n- [ ] Decide what to do with `ActiveModel::NestedAttributes` https://github.com/rails/rails/pull/49637\r\n- [ ] Decide if we want a Boolean attribute type https://github.com/rails/rails/pull/46376\r\n- [ ] Write guide about this new feature\r\n- [ ] Decide what to do with https://github.com/rails/rails/pull/49675",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50568/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 33,
        "reactions_plus1": 15,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 15,
        "reactions_rocket": 0,
        "reactions_eyes": 3
    },
    {
        "id": 1985671125,
        "number": 49983,
        "title": "Azure storage service dependency `azure-storage-blob` deprecated",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 25,
        "created_at": "2023-11-09T13:51:38Z",
        "updated_at": "2024-09-11T15:59:02Z",
        "closed_at": "2024-09-11T15:59:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n1. Create a rails app\r\n2. Within the Gemfile, add the following:\r\n```\r\ngem \"azure-storage-blob\", \"~> 2.0\", require: false\r\ngem \"faraday\", \"~> 2.0\"\r\n```\r\n3. Run `bundle --verbose`\r\n4. See error\r\n\r\n### Expected behavior\r\nI would expect Rails applications to support newer versions of the Faraday gem because it is a popular dependency for many other gems that deal with HTTP requests.\r\n\r\nExample gems that have this dependency:\r\n- `json-jwt`\r\n- `oauth2` (also works with Faraday version 1)\r\n- `openid_connect`\r\n- `rack-oauth2`\r\n- `swd`\r\n- `webfinger`\r\n\r\n### Actual behavior\r\nWith any other dependency that relies on Faraday version 2 or above, the Azure storage cannot be used as instructed in the Active Storage documentation.\r\n\r\nThe Azure storage's dependency `azure-storage-blob` is deprecated as pointed out in the README of the project:\r\nhttps://github.com/Azure/azure-storage-ruby\r\n\r\nThis means that [fixes that would solve the issue](https://github.com/Azure/azure-storage-ruby/pull/228) are not getting merged in a timely manner and the gem has to be forked in order to apply the necessary changes making it harder to maintain the dependencies.\r\n\r\n### System configuration\r\n**Rails version**: 6.1 (applies also to version 7)\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49983/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 864340,
        "closed_by_id": 47848,
        "label_ids": [
            131864,
            41328116,
            149514554
        ],
        "reactions_total_count": 6,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 3,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2515120131,
        "number": 52854,
        "title": "Rails Guides redesign overlapping on wide display.",
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T23:48:41Z",
        "updated_at": "2024-09-11T15:37:06Z",
        "closed_at": "2024-09-11T15:37:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Text wraps under the right side bar.\r\n\r\n![Rails_Guides_Wide_Display](https://github.com/user-attachments/assets/7665858b-2643-4dcf-9b36-88d7b613ceda)",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52854/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 88926,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2519137424,
        "number": 52878,
        "title": "Cannot run `bin/rubocop --auto-gen-config` with default binstub",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-11T09:19:24Z",
        "updated_at": "2024-09-11T15:23:42Z",
        "closed_at": "2024-09-11T15:23:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n1. `rails new example_app`\r\n2. `cd example_app`\r\n3. `bin/rubocop --auto-gen-config` will output:\r\n     ```\r\n    different prefix: \"\" and \"/Users/lorenzozabot/example_app\"\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/3.3.0/pathname.rb:534:in `relative_path_from'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli/command/auto_generate_config.rb:159:in `relative_path_to_todo_from_options_config'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli/command/auto_generate_config.rb:116:in `add_inheritance_from_auto_generated_file'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli/command/auto_generate_config.rb:104:in `reset_config_and_auto_gen_file'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli/command/auto_generate_config.rb:27:in `run'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli/command.rb:11:in `run'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli/environment.rb:18:in `run'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli.rb:122:in `run_command'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli.rb:127:in `execute_runners'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli.rb:51:in `block in run'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli.rb:81:in `profile_if_needed'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/lib/rubocop/cli.rb:43:in `run'\r\n    /Users/lorenzozabot/.rbenv/versions/3.3.5/lib/ruby/gems/3.3.0/gems/rubocop-1.66.1/exe/rubocop:19:in `<top (required)>'\r\n    bin/rubocop:8:in `load'\r\n    bin/rubocop:8:in `<main>'\r\n     ```\r\n\r\n\r\nIf I overwrite the bistunb with `bundle binstub rubocop --force` then I can correctly run `bin/rubocop --auto-gen-config`. \r\n\r\nThe problem is probably in this line:\r\n```rb\r\nARGV.push(\"--config\", File.expand_path(\"../.rubocop.yml\", __dir__))\r\n```\r\nSince if I comment it in the default binstub I can also safely run `bin/rubocop --auto-gen-config`.\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nI expect to be able to run `bin/rubocop --auto-gen-config` correctly.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nWith the default binstub, we cannot run `bin/rubocop --auto-gen-config`.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.5\r\n\r\n**Rubocop version**: 1.66.1",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52878/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 97030518,
        "closed_by_id": 47848,
        "label_ids": [
            131864
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2492346582,
        "number": 52733,
        "title": "Clarfication on seeds and when they are called",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-28T14:55:06Z",
        "updated_at": "2024-09-11T15:23:17Z",
        "closed_at": "2024-09-11T15:23:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description of the issue\r\nWe have a rails project, since update to rails 7.1 tests where ok when run locally but not when run on CI (github action)\r\nChanging the schema.rb to keep ActiveRecord::Schema[7.0] instead of ActiveRecord::Schema[7.1] was sufficient for tests to pass.\r\n\r\nWhen updating ton rails 7.1.4 (from rails 7.1.3.4) tests stopped to pass on CI again.\r\n\r\nIn the end the issue was linked to seeds: they where not called until schema.rb was mentionning version 7.1 or we update the whole app to 7.1.4\r\n\r\nRemoving the seeds did fix the issue, it seems they are called if the database was not existing yet ?\r\n\r\n\r\nI would like to clarify paragraph 8 of this file : https://guides.rubyonrails.org/active_record_migrations.html#migrations-and-seed-data but I need to better understand two things:\r\n\r\nSeeds are only for data that is really needed for the app to work not fake data for a test/staging env ?\r\nWhere can I find information on when does seeds need to be called ?\r\n\r\n### System configuration\r\n**Rails version**: 7.1.4\r\n\r\n**Ruby version**: 3.3.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52733/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 812048,
        "closed_by_id": 28418009,
        "label_ids": [
            1071962662
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2519768196,
        "number": 52882,
        "title": "Bug with pluck method when used \"where\" condition with raw SQL ",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-11T13:33:09Z",
        "updated_at": "2024-09-11T15:11:17Z",
        "closed_at": "2024-09-11T15:11:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\npry(main)> Gift.select(\"DISTINCT(country_code)\").pluck(:country_code)\r\n```\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```ruby\r\n  Gift Load (1.2ms)  SELECT DISTINCT(country_code) FROM \"gifts\" /* loading for pp */ LIMIT $1  [[\"LIMIT\", 11]]\r\n=> [\"CL\",\r\n\"PL\",\r\n\"UA\",\r\n\"CO\"...\r\n```\r\n(only one country code)\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```ruby\r\nGift Pluck (0.9ms)  SELECT \"gifts\".\"country_code\" FROM \"gifts\"\r\n=> [\"CL\",\r\n \"CL\",\r\n \"CL\",\r\n \"CL\",\r\n \"CL\",\r\n \"CO\",\r\n \"CO\",\r\n```\r\n\r\nBut code:\r\n```ruby\r\nGift.select(\"DISTINCT(country_code)\")\r\n```\r\nreturns\r\n```ruby\r\nGift Load (1.2ms)  SELECT DISTINCT(country_code) FROM \"gifts\" /* loading for pp */ LIMIT $1  [[\"LIMIT\", 11]]\r\n=> [#<Gift:0x0000720e6a771f60 id: nil, country_code: \"CL\">,\r\n #<Gift:0x0000720e6a771ba0 id: nil, country_code: \"PL\">,\r\n #<Gift:0x0000720e6a771920 id: nil, country_code: \"UA\">,\r\n...\r\n```\r\n(work as expected)\r\n\r\nWe also can write query like this:\r\n```ruby\r\nGift.distinct(:country_code).pluck(:country_code)\r\n```\r\nand it works as expected, but it looks like there is a bug in pluck method with raw SQL queries.\r\n### System configuration\r\n**Rails version**:7.1.4\r\n\r\n**Ruby version**:3.3.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52882/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 38836502,
        "closed_by_id": 5657035,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2513115604,
        "number": 52840,
        "title": "Remove unused permission_policy test helpers",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T07:16:05Z",
        "updated_at": "2024-09-11T13:48:52Z",
        "closed_at": "2024-09-09T08:26:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "These were added in 0ddad32af53a241692ab5715bf4bd1ee119e4fc4 but they are unused and can be safely deleted.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52840/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 12642,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52840.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52840.patch",
        "pull_request_merged_at": "2024-09-09T08:26:31Z"
    },
    {
        "id": 2518822118,
        "number": 52877,
        "title": "[ci skip] Update reference from db:test:prepare to use test:db instead",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-11T07:31:24Z",
        "updated_at": "2024-09-11T10:43:25Z",
        "closed_at": "2024-09-11T10:32:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This reference to `db:test:prepare`, which was made private in https://github.com/rails/rails/commit/fa15111d30f05edac7e4f63264e25887a5a4ae20 and covered in https://github.com/rails/rails/issues/2560 is outdated.\r\n\r\nWe should teach users about the public task instead (using `bin/rails --help` as a guide).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] ~Tests are added or updated if you fix a bug or add a feature.~\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52877/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 40206,
        "closed_by_id": 277819,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52877.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52877.patch",
        "pull_request_merged_at": "2024-09-11T10:32:13Z"
    },
    {
        "id": 2517225231,
        "number": 52874,
        "title": "Match destroyed_by_association for belongs_to with has_one and has_many behaviour",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-10T18:07:52Z",
        "updated_at": "2024-09-11T07:19:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "When a has_many and has_one association is destroyed by `dependent: destroy`, destroyed_by_association is set to the reflection, and this can be checked in callbacks. This change matches that behaviour for belongs_to associations.\r\n\r\nFixes #52859\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because `destroyed_by_association` is not set when a `belongs_to` associations is being destroyed through `dependent: :destroy`, unlike `has_many` and `has_one` (which was introduced in this [PR](https://github.com/rails/rails/pull/29855))\r\n\r\n### Detail\r\n\r\nThis Pull Request changes sets the `destroyed_by_association` on a `belongs_to` association, to match the behaviour with `has_many` and `has_one`.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\nN/A\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52874/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5338851,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52874.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52874.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 811865867,
        "number": 41498,
        "title": "ActiveRecord: Missing joined table after upgrading to 6.1",
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "kamipo",
            "id": 12642,
            "followers_url": "https://api.github.com/users/kamipo/followers",
            "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
            "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
            "organizations_url": "https://api.github.com/users/kamipo/orgs",
            "repos_url": "https://api.github.com/users/kamipo/repos",
            "received_events_url": "https://api.github.com/users/kamipo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "kamipo",
                "id": 12642,
                "followers_url": "https://api.github.com/users/kamipo/followers",
                "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
                "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
                "organizations_url": "https://api.github.com/users/kamipo/orgs",
                "repos_url": "https://api.github.com/users/kamipo/repos",
                "received_events_url": "https://api.github.com/users/kamipo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-02-19T09:40:25Z",
        "updated_at": "2024-09-11T05:50:39Z",
        "closed_at": "2024-09-11T05:50:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nI have written a test to reproduce the error. Passing on 6.0 and failing on 6.1.\r\n\r\nPut this file in its own directory and run it from there.\r\n\r\n```ruby\r\n# If you change the gem dependencies, run it with:\r\n# `rm Gemfile* && ruby test.rb`\r\n\r\nunless File.exist?(\"Gemfile\")\r\n  File.write(\"Gemfile\", <<-GEMFILE)\r\n    source \"https://rubygems.org\"\r\n    # gem \"rails\", github: \"rails/rails\", branch: \"6-0-stable\"\r\n    gem \"rails\", github: \"rails/rails\", branch: \"6-1-stable\"\r\n    gem \"pg\"\r\n  GEMFILE\r\n\r\n  system \"bundle install\"\r\nend\r\n\r\nrequire \"bundler\"\r\nBundler.setup(:default)\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: \"postgresql\",\r\n  database: \"activerecord_test\",\r\n  host: \"postgres\",\r\n  user: \"username\",\r\n  password: \"password\"\r\n)\r\n# ActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\n# Display versions.\r\nmessage = \"Running test case with Ruby #{RUBY_VERSION}, Active Record #{\r\n  ::ActiveRecord::VERSION::STRING}, Arel #{Arel::VERSION} and #{\r\n  ::ActiveRecord::Base.connection.adapter_name}\"\r\nline = \"=\" * message.length\r\nputs line, message, line\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :contacts, force: true do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table :contact_relationships, force: true do |t|\r\n    t.references :child\r\n    t.references :parent\r\n    t.string :relationship_type\r\n  end\r\nend\r\n\r\nclass Contact < ActiveRecord::Base\r\n  has_one :commune_relationship, -> { where(relationship_type: \"commune\") }, class_name: \"ContactRelationship\", foreign_key: :child_id\r\n  has_one :commune, source: :parent, through: :commune_relationship\r\n\r\n  has_many :commune_for_relationships, -> { where(relationship_type: \"commune\") }, class_name: \"ContactRelationship\", foreign_key: :parent_id\r\n  has_many :commune_for, source: :child, through: :commune_for_relationships\r\n\r\n  has_many :schools_relationships, -> { where(relationship_type: \"school\") }, class_name: \"ContactRelationship\", foreign_key: :child_id\r\n  has_many :schools, source: :parent, through: :schools_relationships\r\n\r\n  has_many :schools_communes, source: :commune, through: :schools\r\n\r\n  has_many :school_for_relationships, -> { where(relationship_type: \"school\") }, class_name: \"ContactRelationship\", foreign_key: :parent_id\r\n  has_many :school_for, source: :child, through: :school_for_relationships\r\n\r\n  has_many :children_relationships, class_name: \"ContactRelationship\", foreign_key: :parent_id\r\n  has_many :children, source: :child, through: :children_relationships\r\n\r\n  has_many :parents_relationships, class_name: \"ContactRelationship\", foreign_key: :child_id\r\n  has_many :parents, source: :parent, through: :parents_relationships\r\nend\r\n\r\nclass ContactRelationship < ActiveRecord::Base\r\n  belongs_to :child, class_name: \"Contact\"\r\n  belongs_to :parent, class_name: \"Contact\"\r\nend\r\n\r\nclass TestActiveRecord < ActiveSupport::TestCase\r\n  def setup\r\n    @nothern_commune = Contact.create!(name: \"Nothern Commune\")\r\n    @southern_commune = Contact.create!(name: \"Southern Commune\")\r\n\r\n    @southern_school = Contact.create!(name: \"Southern School\")\r\n    ContactRelationship.create!(child: @southern_school, parent: @southern_commune, relationship_type: \"commune\")\r\n\r\n    @nothern_school = Contact.create!(name: \"Nothern School\")\r\n    ContactRelationship.create!(child: @nothern_school, parent: @nothern_commune, relationship_type: \"commune\")\r\n\r\n    # Student that both lives and goes to school in the north\r\n    @nothern_student = Contact.create!(name: \"Nothern Student\")\r\n    ContactRelationship.create!(child: @nothern_student, parent: @nothern_commune, relationship_type: \"commune\")\r\n    ContactRelationship.create!(child: @nothern_student, parent: @nothern_school, relationship_type: \"school\")\r\n\r\n    # Student that both lives and goes to school in the south\r\n    @southern_student = Contact.create!(name: \"Southern Student\")\r\n    ContactRelationship.create!(child: @southern_student, parent: @southern_commune, relationship_type: \"commune\")\r\n    ContactRelationship.create!(child: @southern_student, parent: @southern_school, relationship_type: \"school\")\r\n\r\n    # Student that lives in the northern commune but goes to school in the southern school\r\n    @eastern_student = Contact.create!(name: \"Eastern Student\")\r\n    ContactRelationship.create!(child: @eastern_student, parent: @nothern_commune, relationship_type: \"commune\")\r\n    ContactRelationship.create!(child: @eastern_student, parent: @southern_school, relationship_type: \"school\")\r\n\r\n    # Student that liaves in the southern commune but goes to school in the nothern school\r\n    @western_student = Contact.create!(name: \"Western Student\")\r\n    ContactRelationship.create!(child: @western_student, parent: @southern_commune, relationship_type: \"commune\")\r\n    ContactRelationship.create!(child: @western_student, parent: @nothern_school, relationship_type: \"school\")\r\n  end\r\n\r\n  def test_setup\r\n    assert_equal @nothern_commune, @nothern_student.commune\r\n    assert_equal [@nothern_school], @nothern_student.schools\r\n    assert_equal [@nothern_commune], @nothern_student.schools_communes\r\n\r\n    assert_equal @southern_commune, @southern_student.commune\r\n    assert_equal [@southern_school], @southern_student.schools\r\n    assert_equal [@southern_commune], @southern_student.schools_communes\r\n\r\n    assert_equal @nothern_commune, @eastern_student.commune\r\n    assert_equal [@southern_school], @eastern_student.schools\r\n    assert_equal [@southern_commune], @eastern_student.schools_communes\r\n\r\n    assert_equal @southern_commune, @western_student.commune\r\n    assert_equal [@nothern_school], @western_student.schools\r\n\r\n    assert_equal [@nothern_school, @nothern_student, @eastern_student], @nothern_commune.children\r\n    assert_equal [@nothern_school, @nothern_student, @eastern_student], @nothern_commune.commune_for\r\n\r\n    assert_equal [@southern_school, @southern_student, @western_student], @southern_commune.children\r\n    assert_equal [@southern_school, @southern_student, @western_student], @southern_commune.commune_for\r\n\r\n    assert_equal [@nothern_student, @western_student], @nothern_school.children\r\n    assert_equal [@nothern_student, @western_student], @nothern_school.school_for\r\n    assert_equal [@southern_student, @eastern_student], @southern_school.school_for\r\n  end\r\n\r\n  def test_queries\r\n    query = Contact\r\n      .left_joins(:commune, schools: :commune)\r\n      .where(\"communes_contacts.id = :commune_id OR communes_contacts_2.id = :commune_id\", commune_id: @southern_commune.id)\r\n\r\n    # Output from Rails 6.0\r\n    # SELECT \"contacts\".*\r\n    # FROM \"contacts\"\r\n    # LEFT OUTER JOIN \"contact_relationships\" ON \"contact_relationships\".\"relationship_type\" = 'commune' AND \"contact_relationships\".\"child_id\" = \"contacts\".\"id\"\r\n    # LEFT OUTER JOIN \"contacts\" \"communes_contacts\" ON \"communes_contacts\".\"id\" = \"contact_relationships\".\"parent_id\"\r\n    # LEFT OUTER JOIN \"contact_relationships\" \"schools_relationships_contacts_join\" ON \"schools_relationships_contacts_join\".\"relationship_type\" = 'school' AND \"schools_relationships_contacts_join\".\"child_id\" = \"contacts\".\"id\"\r\n    # LEFT OUTER JOIN \"contacts\" \"schools_contacts\" ON \"schools_contacts\".\"id\" = \"schools_relationships_contacts_join\".\"parent_id\"\r\n    # Note: This relationships-join is missing in Rails 6.1\r\n    # LEFT OUTER JOIN \"contact_relationships\" \"commune_relationships_contacts_join\" ON \"commune_relationships_contacts_join\".\"relationship_type\" = 'commune' AND \"commune_relationships_contacts_join\".\"child_id\" = \"schools_contacts\".\"id\"\r\n    # LEFT OUTER JOIN \"contacts\" \"communes_contacts_2\" ON \"communes_contacts_2\".\"id\" = \"commune_relationships_contacts_join\".\"parent_id\"\r\n    # WHERE (communes_contacts.id = 2 OR communes_contacts_2.id = 2)\r\n\r\n    # Output from Rails 6.1\r\n    # SELECT \"contacts\".*\r\n    # FROM \"contacts\"\r\n    # LEFT OUTER JOIN \"contact_relationships\" ON \"contact_relationships\".\"relationship_type\" = 'commune' AND \"contact_relationships\".\"child_id\" = \"contacts\".\"id\"\r\n    # LEFT OUTER JOIN \"contacts\" \"communes_contacts\" ON \"communes_contacts\".\"id\" = \"contact_relationships\".\"parent_id\"\r\n    # LEFT OUTER JOIN \"contact_relationships\" \"schools_relationships_contacts_join\" ON \"schools_relationships_contacts_join\".\"relationship_type\" = 'school' AND \"schools_relationships_contacts_join\".\"child_id\" = \"contacts\".\"id\"\r\n    # LEFT OUTER JOIN \"contacts\" \"schools_contacts\" ON \"schools_contacts\".\"id\" = \"schools_relationships_contacts_join\".\"parent_id\"\r\n    # Note: Missing relationships join like in Rails 6.0\r\n    # LEFT OUTER JOIN \"contacts\" \"communes_contacts_2\" ON \"communes_contacts_2\".\"id\" = \"contact_relationships\".\"parent_id\"\r\n    # WHERE (communes_contacts.id = 2 OR communes_contacts_2.id = 2)\r\n\r\n    # puts \"SQL:\\n#{query.to_sql}\"\r\n\r\n    # Southern school should be included because it belongs to the southern commune\r\n    # Southern student should be included because he both goes to school and lives in the south\r\n    # Eastern student should be included because he goes to school in the southern school that belongs to the southern commune\r\n    # Western student should be included because he lives in the south and is directly related to the southern commune\r\n\r\n    assert_equal [@southern_school, @southern_student, @eastern_student, @western_student], query\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nI would expect the \"contact_relationships\" for communes on schools to be present instead of re-using the previous join wrongly.\r\n\r\nI would expect this assertion to pass:\r\n```ruby\r\nassert_equal [@southern_school, @southern_student, @eastern_student, @western_student], query\r\n ```\r\n\r\n\r\n### Actual behavior\r\n\r\nIt uses the previous join wrongly and reaches the wrong result.\r\n\r\n### System configuration\r\n**Rails version**: 6.1\r\n\r\n**Ruby version**: 2.6.6\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/41498/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 234531,
        "closed_by_id": 12642,
        "label_ids": [
            107186,
            107191
        ],
        "reactions_total_count": 10,
        "reactions_plus1": 10,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2514381978,
        "number": 52850,
        "title": "Fix `.left_outer_joins` when multiple associations have the same child.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T16:19:36Z",
        "updated_at": "2024-09-11T05:50:38Z",
        "closed_at": "2024-09-11T05:50:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\nFixes #41498\r\n\r\nThis Pull Request has been created to fix an issue where `.left_outer_joins` used with multiple associations that have the same child association but different parents does not join all parents.\r\n\r\n### Detail\r\n\r\nThis Pull Request fixes #41498.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52850/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 25485509,
        "closed_by_id": 12642,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52850.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52850.patch",
        "pull_request_merged_at": "2024-09-11T05:50:38Z"
    },
    {
        "id": 2113736717,
        "number": 50944,
        "title": "Enable DependencyTracker to evaluate interpolated paths",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 3,
        "created_at": "2024-02-01T23:46:28Z",
        "updated_at": "2024-09-11T04:25:40Z",
        "closed_at": "2024-09-11T04:25:40Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Previously, neither the PrismRenderParser nor the RipperRenderParser would consider an interpolated string as a dependency. The RubyTracker even included a line to explcitly filter out interpolated paths returned from the RipperRenderParser since they would end in a \"/\". However, the RubyTracker does include the ability to evaluate explicit \"Template Dependency\" comments with wildcard nodes.\r\n\r\nThis commit extends the RipperRenderParser and PrismRenderParser to convert interpolated strings into wildcard globs. Additionally, it changes the RubyTracker to evaluate wildcards the same for both implicit and explicit dependencies. This enables the RubyTracker to identify potential dependencies for interpolated renders, which it was previously unable to do.\r\n\r\ncc @jhawthorn if you think this is a good idea I can try to apply it to ActionView::Precompiler as well\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50944/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6014046,
        "closed_by_id": 131752,
        "label_ids": [
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50944.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50944.patch",
        "pull_request_merged_at": "2024-09-11T04:25:39Z"
    },
    {
        "id": 2516263219,
        "number": 52864,
        "title": "[7-0-stable] Backport #52853: Ensure AS::Deprecation::Reporting constants stay private",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-10T12:09:41Z",
        "updated_at": "2024-09-11T01:35:35Z",
        "closed_at": "2024-09-10T18:16:50Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Backport #52853 to `7-0-stable`.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52864/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "closed_by_id": 47848,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52864.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52864.patch",
        "pull_request_merged_at": "2024-09-10T18:16:50Z"
    },
    {
        "id": 2516264402,
        "number": 52865,
        "title": "[7-1-stable] Backport #52853: Ensure AS::Deprecation::Reporting constants stay private",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-10T12:10:09Z",
        "updated_at": "2024-09-11T01:35:33Z",
        "closed_at": "2024-09-10T18:16:46Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Backport #52853 to 7-1-stable.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52865/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "closed_by_id": 47848,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52865.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52865.patch",
        "pull_request_merged_at": "2024-09-10T18:16:46Z"
    },
    {
        "id": 2516265118,
        "number": 52866,
        "title": "[7-2-stable] Backport #52853: Ensure AS::Deprecation::Reporting constants stay private",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-10T12:10:28Z",
        "updated_at": "2024-09-11T01:35:30Z",
        "closed_at": "2024-09-10T18:16:41Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Backport #52853 to 7-2-stable.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52866/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "closed_by_id": 47848,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52866.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52866.patch",
        "pull_request_merged_at": "2024-09-10T18:16:41Z"
    },
    {
        "id": 2503838679,
        "number": 52789,
        "title": "Silence healthcheck requests from the log",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-09-03T21:39:33Z",
        "updated_at": "2024-09-10T22:03:02Z",
        "closed_at": "2024-09-03T23:20:06Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "The default Rails health check is intended to be hit every second or so by Kamal to ensure that the application is still or has just become responsive. This clutters up the production logs and makes it hard to follow what's actually going on. This adds a new middleware called `Rails::Rack::SilenceRequest` that is used by a new config `config.silence_healthcheck = path` to prevent that.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52789/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195,
            150377
        ],
        "reactions_total_count": 14,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 14,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52789.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52789.patch",
        "pull_request_merged_at": "2024-09-03T23:20:06Z"
    },
    {
        "id": 2243343440,
        "number": 51568,
        "title": "ExceptionWrapper take out backtrace setter from initialize stage",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-04-15T10:46:50Z",
        "updated_at": "2024-09-10T22:01:08Z",
        "closed_at": "2024-09-10T22:01:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis is my first PR to rails, I couldn't locate any similar or identical issues documented or discussed.\r\n\r\nThe backtrace of errors starts exhibiting the following output post the Rails 7.08 => Rails 7.1 update:\r\nThe last attempt I made was to create a new database migration, which hasn't been migrated yet. An error occurred, indicating 'You have 1 pending migration.' The error traceback is as follows when I tried to fetch kaminari paginated page from api:\r\n```\r\nPuma caught this error: undefined method `built_templates' for #<ActionView::FileSystemResolver:0x000000011b4f9540 @unbound_templates=#<Concurrent::Map:0x000000011b4f94a0 entries=0 default_proc=nil>, @path_parser=#<ActionView::Resolver::PathParser:0x00000001283b1748>, @path=\"/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/kaminari-core-1.2.2/app/views\"> (NoMethodError)\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:269:in `block in build_backtrace'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:268:in `each'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:268:in `build_backtrace'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:56:in `initialize'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `new'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `block in wrapped_causes_for'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:291:in `causes_for'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `each'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `map'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `wrapped_causes_for'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:51:in `initialize'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `new'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `block in wrapped_causes_for'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:291:in `causes_for'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `each'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `map'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `wrapped_causes_for'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:51:in `initialize'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `new'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `block in wrapped_causes_for'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:291:in `causes_for'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `each'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `map'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:295:in `wrapped_causes_for'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/exception_wrapper.rb:51:in `initialize'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/show_exceptions.rb:35:in `new'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/show_exceptions.rb:35:in `rescue in call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/railties-7.1.3.2/lib/rails/rack/logger.rb:37:in `call_app'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/railties-7.1.3.2/lib/rails/rack/logger.rb:24:in `block in call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activesupport-7.1.3.2/lib/active_support/tagged_logging.rb:135:in `block in tagged'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activesupport-7.1.3.2/lib/active_support/tagged_logging.rb:39:in `tagged'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activesupport-7.1.3.2/lib/active_support/tagged_logging.rb:135:in `tagged'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activesupport-7.1.3.2/lib/active_support/broadcast_logger.rb:240:in `method_missing'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/railties-7.1.3.2/lib/rails/rack/logger.rb:24:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/sprockets-rails-3.4.2/lib/sprockets/rails/quiet_assets.rb:13:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/remote_ip.rb:92:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/request_store-1.5.1/lib/request_store/middleware.rb:19:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/request_id.rb:28:in `call'\r\n/Users/user/.gem/ruby/3.2.0/gems/rack-3.0.10/lib/rack/method_override.rb:28:in `call'\r\n/Users/user/.gem/ruby/3.2.0/gems/rack-3.0.10/lib/rack/runtime.rb:24:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/executor.rb:14:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/static.rb:25:in `call'\r\n/Users/user/.gem/ruby/3.2.0/gems/rack-3.0.10/lib/rack/sendfile.rb:114:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.2/lib/action_dispatch/middleware/host_authorization.rb:141:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-cors-2.0.2/lib/rack/cors.rb:102:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/railties-7.1.3.2/lib/rails/engine.rb:536:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/configuration.rb:272:in `call'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/request.rb:100:in `block in handle_request'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:378:in `with_force_shutdown'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/request.rb:99:in `handle_request'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/server.rb:464:in `process_client'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/server.rb:245:in `block in run'\r\n/Users/user/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:155:in `block in spawn_thread'\r\n```\r\n\r\nThis error isn't exclusive to Kaminari. I've attempted to isolate the issue by removing gems individually, but each time, I encounter the same backtrace, albeit with a different gem's view route (such as Active Admin or Devise).\r\n\r\nThere could be other gems interfering with the middleware, but I'm uncertain what's necessary to establish a backtrace at the initialization stage.\r\n\r\nThis Pull Request has been created because, I believe it resolves the initialization backtrace error, thereby resolving the main issue at hand.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes ActionDispatch ExeptionWrapper class, and removes backtrace attribute to be set on initializing stage.\r\n\r\n### Additional information\r\n\r\nN/A\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51568/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 17678162,
        "closed_by_id": 131752,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51568.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51568.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2355433737,
        "number": 52134,
        "title": "Add ParallelQuery module to support parallel query execution in Postg…",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2024-06-16T05:22:08Z",
        "updated_at": "2024-09-10T21:33:54Z",
        "closed_at": "2024-06-21T21:42:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Description\r\n\r\nThis pull request introduces a new ParallelQuery module to the ActiveRecord library, specifically designed to enhance query performance for PostgreSQL databases by leveraging parallel execution capabilities.\r\n\r\n### Motivation\r\nModern databases, including PostgreSQL, support parallel query execution to utilize multiple CPU cores for faster data retrieval. However, Rails' ActiveRecord does not natively configure these parallel settings, potentially missing out on significant performance improvements for complex queries. This module aims to bridge that gap by dynamically configuring PostgreSQL settings to enable and optimize parallel execution.\r\n#### Why This Feature Is Important\r\n**Performance Improvement:** Parallel queries can drastically reduce execution times for large and complex queries, especially those involving heavy computational operations or large datasets.\r\n**Resource Utilization:** Makes better use of modern multi-core processors by distributing query execution across multiple CPU cores.\r\n**Scalability:** Enhances the scalability of Rails applications by improving the database layer's efficiency, which is often a bottleneck in high-load scenarios.\r\n\r\n### Key Changes\r\n#### Introduction of ParallelQuery Module:\r\n\r\nA new module, ActiveRecord::ParallelQuery, is added. This module provides a parallel_query method that configures the PostgreSQL settings for parallel execution before executing the provided block of code.\r\nDynamic Configuration of PostgreSQL Settings:\r\n\r\nThe parallel_query method sets several PostgreSQL parameters to optimize parallel execution:\r\n**max_parallel_workers_per_gather**: Sets the maximum number of workers that can be used for parallel execution.\r\n**work_mem**: Increases the memory available for internal operations to avoid disk I/O.\r\n**parallel_setup_cost** and **parallel_tuple_cost**: Lowers the costs to make parallel execution more attractive to the query planner.\r\n**min_parallel_table_scan_size** and **min_parallel_index_scan_size**: Ensures even small scans are considered for parallel execution.\r\n**Resetting Settings Post-Execution:**\r\n\r\nAfter executing the query block, the method ensures that all PostgreSQL settings are reset to their original values to avoid unintended side effects on subsequent queries.\r\n\r\n**Compatibility with Other Adapters:**\r\n\r\nThe module includes a conditional check to ensure that it only applies these settings to PostgreSQL adapters. For other adapters (e.g., MySQL, SQLite, SQL Server), the query block is executed without modification, there we can add the changes if in future those adapters supports this functionalities.\r\n\r\n#### Detailed Code Changes\r\n**Module Definition:**\r\nAdded lib/active_record/parallel_query.rb with the new ParallelQuery module.\r\nIntegration with ActiveRecord:\r\nIncluded the ParallelQuery module in ActiveRecord::Base to make the parallel_query method available to all models.\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52134/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 67181453,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52134.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52134.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2516020980,
        "number": 52862,
        "title": "TRUSTED_PROXIES behavior inconsistency due to IPv4-mapped address handling change in Ruby 3.1+",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-10T10:16:04Z",
        "updated_at": "2024-09-10T19:58:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\nrequire 'ipaddr'\r\n\r\nputs \"Ruby version: #{RUBY_VERSION}\"\r\n\r\nipv4_range = IPAddr.new('127.0.0.0/8')\r\nipv4_address = '127.0.0.1'\r\nipv4_mapped_address = '::ffff:127.0.0.1'\r\n\r\nputs \"IPv4 Range === IPv4 Address: #{ipv4_range === ipv4_address}\" # true\r\nputs \"IPv4 Range === IPv4-mapped Address: #{ipv4_range === ipv4_mapped_address}\" # false\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe behavior should be consistent across Ruby versions, particularly for IPv4-mapped addresses. In Ruby 3.0 and earlier, both IPv4 addresses and IPv4-mapped addresses were considered equivalent when compared to an IPv4 range.\r\n\r\n### Actual behavior\r\n\r\nIn Ruby 3.1 and later, the behavior has changed. While IPv4 addresses still match the IPv4 range, IPv4-mapped addresses no longer match. This change affects the behavior of `TRUSTED_PROXIES` in Rails applications.\r\n\r\nRuby 3.0:\r\n```ruby\r\n# IPv4 Range === IPv4 Address\r\n> IPAddr.new('127.0.0.0/8') === '127.0.0.1'\r\ntrue\r\n\r\n# IPv4 Range === IPv4-mapped Address:\r\n> IPAddr.new('127.0.0.0/8') === '::ffff:127.0.0.1'\r\ntrue\r\n```\r\n\r\nRuby 3.1+:\r\n```ruby\r\n# IPv4 Range === IPv4 Address\r\n> IPAddr.new('127.0.0.0/8') === '127.0.0.1'\r\ntrue\r\n\r\n# IPv4 Range === IPv4-mapped Address:\r\n> IPAddr.new('127.0.0.0/8') === '::ffff:127.0.0.1'\r\nfalse\r\n```\r\n\r\nThis change was introduced in the ipaddr gem (a bundled gem in Ruby) with this commit: https://github.com/ruby/ipaddr/commit/da22ef8e6c886197f50281f29d61a30e27c0c88e\r\n\r\nAs a result, Rails applications running on Ruby 3.0 and earlier versions behave differently from those running on Ruby 3.1 and later when dealing with `TRUSTED_PROXIES`, especially if IPv4-mapped addresses are involved.\r\n\r\n### System configuration\r\n**Rails version**: All versions (behavior depends on Ruby version)\r\ne.g. 7.0.x\r\n\r\n**Ruby version**: \r\n- Affected: 3.1 and later\r\n- Not affected: 3.0 and earlier",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52862/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2923219,
        "label_ids": [
            107189,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2515939204,
        "number": 52860,
        "title": "[Bug] [ActiveSupport] \"rails destroy model Adress\" [sic] does not check first if the model exists",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-10T09:41:10Z",
        "updated_at": "2024-09-10T19:57:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nWhen I run the script `rails destroy model Adress` [sic] in the CLI, it prints that the model and associated files were removed, even though no such files existed. This behavior could cause confusion when a user makes a typo, as it may be misleading. While there is a robust `check_class_collision` callback when generating objects, a similar approach could be used when reverting the generate command.\r\n\r\nPerhaps the `rails destroy ...` command is designed intentionally to assume the developer's responsibility and avoid complex checks, but I wanted to raise it as an issue nonetheless.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nmy-code/my-repo (main*) $ rails destroy model Adress      \r\n      invoke  active_record\r\n      remove    db/migrate/20240910091915_create_adresses.rb\r\n      remove    app/models/adress.rb\r\n      invoke    rspec\r\n      remove      spec/models/adress_spec.rb\r\n      invoke      factory_bot\r\n      remove        spec/factories/adresses.rb\r\nmy-code/my-repo (main*) $ \r\n```\r\n\r\n### Expected behavior\r\nIf there is a typo in the model name, I should be alerted that no files were removed with that name, or an error should be returned, such as `\"Did you mean model name Address?\"`\r\n\r\n### Actual behavior\r\nWhen I run the script `rails destroy model Adress` [sic] in the CLI, it prints that the model and associated files were removed, even though no files existed.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.2.1\r\n**Ruby version**:\r\n3.1.2p20",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52860/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 66185926,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2517433801,
        "number": 52875,
        "title": "Cherry pick e09dd95cab",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-10T19:02:26Z",
        "updated_at": "2024-09-10T19:18:22Z",
        "closed_at": "2024-09-10T19:18:18Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52875/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 28561,
        "label_ids": [
            107188,
            107189,
            300028327,
            1174770998
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52875.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52875.patch",
        "pull_request_merged_at": "2024-09-10T19:18:18Z"
    },
    {
        "id": 2490401573,
        "number": 52724,
        "title": "Active Storage Overview guide should promote use of custom credentials, and  use of environment suffixed bucket names",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-27T21:25:41Z",
        "updated_at": "2024-09-10T18:46:06Z",
        "closed_at": "2024-08-28T20:46:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\nIf we visit [Active Storage Overview](https://edgeguides.rubyonrails.org/active_storage_overview.html) page, we can see suggestions like: \r\n```ruby\r\namazon:\r\n  service: S3\r\n  access_key_id: \"\"\r\n  secret_access_key: \"\"\r\n  bucket: \"\"\r\n  region: \"\" # e.g. 'us-east-1'\r\n```\r\nPeople would need to update empty `\"\"` credential values to make it work, but if they're being literal, this may be interpreted as an implicit encouragement to insert credentials right in there.\r\n\r\nRegarding environment suffixed bucket names: there is already a merged [PR](https://github.com/rails/rails/pull/42188) which describes the benefit nicely.\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nWe should use `Rails.application.credentials` which [Rails generates as recommendation](https://github.com/rails/rails/blob/9558f00f59fbdc1a533af22810c0ae4e9a674688/railties/lib/rails/generators/rails/app/templates/config/environments/production.rb.tt#L99-L100)\r\n```Ruby\r\n# Use bin/rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)\r\namazon:\r\n  service: S3\r\n  access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>\r\n  secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>\r\n  bucket: your_own_bucket-<%= Rails.env %>\r\n  region: \"\" # e.g. 'us-east-1'\r\n```\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52724/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 3304533,
        "closed_by_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2516916278,
        "number": 52872,
        "title": "[ActiveRecord::Encryption] Allow deterministic encryption keys to be rotated",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-10T16:25:32Z",
        "updated_at": "2024-09-10T18:15:45Z",
        "closed_at": "2024-09-10T18:15:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Proposal\r\n\r\nIn https://github.com/rails/rails/pull/41659/commits/f78a480818c421f0120181cfdfac633b8cc39a8a, changes were made to \"encourage deterministic encryption to remain unchanged\", and as a result, rotation us prohibited for deterministic encryption.\r\n\r\nI understand the main motivation and default use-case of wanting to define unique indexes, but in my understanding, the \"deterministicality\" should be for a given key, so if you change the key, obviously the same payload will be encrypted to another value, but it should be possible to encrypt the value with the existing and previous keys and search for these (basically https://github.com/rails/rails/blob/main/activerecord/lib/active_record/encryption/extended_deterministic_queries.rb#L62).\r\n\r\nOur use-case is that we want to use deterministic encryption so that we can query for a specific value, but we also want to be able to rotate the key so that new values are encrypted with the **latest key**.\r\n\r\nShould we just remove `DeterministicKeyProvider` in favor `DerivedSecretKeyProvider`?",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52872/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 1168,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2515737477,
        "number": 52859,
        "title": "`destroyed_by_association` is not being set on belongs_to association",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-10T08:16:12Z",
        "updated_at": "2024-09-10T18:09:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`destroyed_by_association` is not being set on the target model when using `belongs_to, dependent: destroy` association. \r\n\r\nIt currently works for `has_many` and was added for `has_one` [here](https://github.com/rails/rails/issues/29635) and in this [PR](https://github.com/rails/rails/pull/29855). \r\n\r\n### Steps to reproduce\r\n\r\n``` ruby\r\nclass Post < ApplicationRecord\r\n  has_many :tags, dependent: :destroy\r\nend \r\n```\r\n```ruby\r\nclass PostTags < ApplicationRecord\r\n  belongs_to :post\r\n  belongs_to :tag, dependent: :destroy\r\n  # other attributes here (e.g. color, etc)\r\nend\r\n```\r\n```ruby\r\nclass Tag < ApplicationRecord\r\n  has_many :post_tags\r\nend \r\n```\r\n\r\n```ruby\r\npost = Post.find(1)\r\npost.destroy!\r\n```\r\n\r\n### Expected behavior\r\nSimilar to how `has_many` and `has_one` associations, where when the \"destroy\" is triggered from an association through `dependent: :destroy`, it should behave the same way on a `belongs_to` association. \r\n\r\nThis way, we can maintain the same logic on `before_destroy` in relation to `destroyed_by_association`. \r\n\r\n### Actual behavior\r\n`destroyed_by_association` is not set in [here](https://github.com/rails/rails/blob/e09dd95cabbfd1f0357eb4eec79e2ce540ad3d47/activerecord/lib/active_record/associations/belongs_to_association.rb#L12) unlike in [has_one](https://github.com/rails/rails/blob/e09dd95cabbfd1f0357eb4eec79e2ce540ad3d47/activerecord/lib/active_record/associations/has_one_association.rb#L32) and [has_many](https://github.com/rails/rails/blob/e09dd95cabbfd1f0357eb4eec79e2ce540ad3d47/activerecord/lib/active_record/associations/has_many_association.rb#L28)\r\n\r\n### System configuration\r\n**Rails version**:  7.1.3.2\r\n\r\n**Ruby version**: 3.3.1\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52859/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5338851,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 481596983,
        "number": 36952,
        "title": "Add [association]_id reader/writer methods for has_one association",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-08-16T12:56:26Z",
        "updated_at": "2024-09-10T17:31:45Z",
        "closed_at": "2019-12-24T22:39:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nFixes https://github.com/rails/rails/issues/36512.\r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/36952/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 876195,
        "closed_by_id": 28418009,
        "label_ids": [
            107191,
            12449438
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/36952.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/36952.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2516660951,
        "number": 52869,
        "title": "V4.0.13 ruby2.5 mysql2",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-10T14:36:40Z",
        "updated_at": "2024-09-10T14:44:46Z",
        "closed_at": "2024-09-10T14:37:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because [REPLACE ME]\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52869/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 26107006,
        "closed_by_id": 26107006,
        "label_ids": [
            107188
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52869.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52869.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2512583674,
        "number": 52835,
        "title": "Server doesn't load when using devcontainers (by `--devcontainer` flag in app generation)",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-08T21:33:17Z",
        "updated_at": "2024-09-10T14:35:15Z",
        "closed_at": "2024-09-10T14:35:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n```bash\r\n$ mkdir thalia\r\n$ cd thalia\r\nthalia $ echo \"3.3.5\" >> .ruby-version\r\nthalia $ gem install rails\r\nSuccessfully installed rails-7.2.1\r\n1 gem installed\r\nthalia $ rails new . -T --skip-rubocop -d postgresql --devcontainer\r\n```\r\nGeneration output has no unexpected output (except the `ostruct` warning and `turbo:install:redis` instructions)\r\n\r\n* go to VSCode, app has been generated successfully\r\n* run the Rebuild & Reopen in Container command, postCreateCommand runs\r\n  * successful dependencies\r\n  * successful database preparation\r\n  * successful log & tempfile removal\r\n  * successful app server restart\r\n  * \"press any key to close the terminal\" - when I press a key it goes to the terminal as expected\r\n\r\nLooking at the Ports tab, 3000, 5432, and 6379 are being forwarded, no running process is listed\r\n<img width=\"708\" alt=\"Screenshot 2024-09-08 at 4 27 18 PM\" src=\"https://github.com/user-attachments/assets/fc2ff97a-688b-48ee-9e88-2f5fcb4a3c1b\">\r\n\r\nI've double checked that I have no hanging/cached images, volumes, containers, networks, etc. in Docker\r\n\r\nBut port 3000 is in use:\r\n```bash\r\nthalia $ lsof -i TCP:3000\r\nCOMMAND    PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME\r\nCode\\x20H 4356 me   26u  IPv4 0xac7d33f83c873571      0t0  TCP localhost:hbci (LISTEN)\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nVisiting localhost:3000 should load the Rails app.  According to https://github.com/rails/rails/issues/52704 it sounds like the app generator is supposed to work & is fully tested, so I wonder if I'm using it wrong?\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nVisiting localhost:3000 hangs, with no terminal/log information (at least not where I can find it) - same goes for 127.0.0.1:3000\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.5",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52835/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 8364647,
        "closed_by_id": 8364647,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2490440555,
        "number": 52725,
        "title": "Promote use of Rails.application.credentials and better bucket names in Active Storage Overview documentation.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-27T21:55:51Z",
        "updated_at": "2024-09-10T12:05:06Z",
        "closed_at": "2024-08-28T20:46:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because #52724 \r\n\r\n### Detail\r\n\r\nThis Pull Request changes \r\n\r\n- active_storage_overview.md\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52725/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3304533,
        "closed_by_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52725.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52725.patch",
        "pull_request_merged_at": "2024-08-28T20:46:16Z"
    },
    {
        "id": 623519024,
        "number": 39398,
        "title": "Add new APIs to customize content security policy for non-HTML responses",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 23,
        "created_at": "2020-05-22T23:26:50Z",
        "updated_at": "2024-09-10T11:33:43Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\nOne feature of the content security policy DSL, though undocumented,\r\nis that it will not generate headers for non-HTML responses, even if a\r\nconfiguration is explicitly provided. While it may not seem obvious\r\nthat anyone would want to send this header in an API response, Mozilla\r\nObservatory, for instance, recommends the following for API responses:\r\n\r\n`Content-Security-Policy: default-src 'none'; frame-ancestors 'none'`\r\n\r\n(source: https://observatory.mozilla.org/faq/)\r\n\r\nThe Secure Headers gem also makes recommendations about the content\r\nsecurity policy for API responses: https://github.com/github/secure_headers#api-configurations\r\n\r\nAs such, this removes the HTML guard clause from the\r\n`ContentSecurityPolicy` middleware.\r\n\r\n### Other Information\r\nI imagine that it may be preferable to gate this behavior, assuming that the change is agreeable, but kindly request feedback before getting too deeply involved with that.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/39398/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1710874,
        "closed_by_id": 28418009,
        "label_ids": [
            107189,
            107195,
            149514554
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/39398.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/39398.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2513958357,
        "number": 52845,
        "title": "[ci skip] Corrected typos in guide",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-09T13:21:17Z",
        "updated_at": "2024-09-10T05:23:02Z",
        "closed_at": "2024-09-10T05:12:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Minor typo corrections.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52845/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1322208,
        "closed_by_id": 567626,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52845.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52845.patch",
        "pull_request_merged_at": "2024-09-10T05:12:43Z"
    },
    {
        "id": 2514143407,
        "number": 52846,
        "title": "Add missing periods to production.rb.tt [ci-skip]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T14:32:30Z",
        "updated_at": "2024-09-10T04:22:36Z",
        "closed_at": "2024-09-10T03:49:01Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52846/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 12642,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52846.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52846.patch",
        "pull_request_merged_at": "2024-09-10T03:49:01Z"
    },
    {
        "id": 2515218763,
        "number": 52855,
        "title": "reject_if callback evaluation point changed in rails 7.2",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-10T01:38:44Z",
        "updated_at": "2024-09-10T03:59:42Z",
        "closed_at": "2024-09-10T03:59:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nThe following passes if you pin `rails ~> 7.1.0` and fails if you pin `rails ~> 7.2.0`:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.string :content\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n\r\n  attr_accessor :allow_comments\r\n\r\n  accepts_nested_attributes_for :comments, allow_destroy: true, reject_if: :disallow_comments\r\n\r\n  private\r\n\r\n  def disallow_comments\r\n    !allow_comments\r\n  end\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_accepts_nested_attribute_for\r\n    post = Post.create!(comments_attributes: {1 => {content: \"foo\"}}, allow_comments: true)\r\n    assert_equal post.comments.size, 1\r\n    post = Post.create!(comments_attributes: {1 => {content: \"foo\"}}, allow_comments: false)\r\n    assert_equal post.comments.size, 0\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\nPrior to Rails 7.2, *all* constructor arguments were evaluated before the `reject_if` method was evaluated; this allows your `reject_if` to read other attributes of the object (which our application relies on in a few places, to disable nested attributes on a 1:many relationship built with cocoon via a single checkbox in a form).\r\n\r\n### Actual behavior\r\nIn Rails 7.2, the arguments to `.new` (including those handled via nested attributes) are evaluated in order, which means that it's effectively unpredictable (since hash orders aren't particularly specified).\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.5\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52855/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 263424,
        "closed_by_id": 263424,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2515019268,
        "number": 52853,
        "title": "Ensure AS::Deprecation::Reporting constants stay private",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T22:14:38Z",
        "updated_at": "2024-09-10T03:50:26Z",
        "closed_at": "2024-09-10T03:49:55Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Found these when reading the docs for [AS::Deprecation::Reporting](https://edgeapi.rubyonrails.org/classes/ActiveSupport/Deprecation/Reporting.html).\r\n\r\nWe could also use `private_constant` maybe, if we really want to make it private:\r\nhttps://docs.ruby-lang.org/en/master/Module.html#method-i-private_constant\r\n\r\ncc: https://bugs.ruby-lang.org/issues/17171",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52853/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "closed_by_id": 12642,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52853.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52853.patch",
        "pull_request_merged_at": "2024-09-10T03:49:55Z"
    },
    {
        "id": 1196806320,
        "number": 44859,
        "title": "Extend json_serilization test in Active Model for the `as_json` method",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-04-08T04:12:52Z",
        "updated_at": "2024-09-09T23:59:06Z",
        "closed_at": "2024-09-09T23:58:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nExtended test cases for the `as_json` method in AM. The `as_json` method has a number\r\nof options, namely: `root`, `except`, `only`, `methods`, and `include`. Test cases that\r\ntest for these options are missing from the test suite. I've added test cases for these options\r\nin this PR.\r\n\r\n<!-- Provide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together. -->",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/44859/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 56545288,
        "closed_by_id": 131752,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/44859.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/44859.patch",
        "pull_request_merged_at": "2024-09-09T23:58:59Z"
    },
    {
        "id": 2514916478,
        "number": 52851,
        "title": "Allow cycle detection for recursive common table expressions",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T21:03:12Z",
        "updated_at": "2024-09-09T21:15:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nAllow cycle detection for recursive common table expressions, using enhanced cycle mark values\r\n\r\nAdding cycle detection to a recursive statement prevents it from running in a loop until it uses up all the database memory and crashes.  SQL:2023 introduces enhanced cycle mark values into the standard.  This is a standardized way to prevent the following of cycles in recursive CTEs which can lead to consumption of memory to the point of host failure.\r\n\r\n### Detail\r\n\r\nThis adds a `:cycle` option to Cte instantiation, and works in a similar way to the existing `:materialized` option.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52851/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 796212,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52851.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52851.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2514220895,
        "number": 52847,
        "title": "Remove superfluous call to Hash#deep_symbolize_keys",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T15:03:39Z",
        "updated_at": "2024-09-09T20:56:00Z",
        "closed_at": "2024-09-09T16:00:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This was introduced in #51950.\r\n\r\ncc @zzak ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52847/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 14403,
        "closed_by_id": 12642,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52847.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52847.patch",
        "pull_request_merged_at": "2024-09-09T16:00:21Z"
    },
    {
        "id": 1119769318,
        "number": 44297,
        "title": "Improve requiring of scalar parameters",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-01-31T18:12:23Z",
        "updated_at": "2024-09-09T20:17:00Z",
        "closed_at": "2024-09-09T20:16:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nThe usage of `ActionController::Parameters#require` is a bit ambiguous.\r\nIt can be called for hashes, arrays and scalar values.\r\nWhen a scalar value is expected but a hash is passed you might get\r\nunexpected results:\r\n\r\n```ruby\r\nActionController::Parameters.new(name: { first: \"Francesco\" }).require(:name).downcase\r\n# => NoMethodError (undefined method `downcase' for #<ActionController::Parameters:0x00007f8c631264b0>)\r\n```\r\n\r\nSimilarly, when a hash is expected but a scalar value is passed:\r\n\r\n```ruby\r\nActionController::Parameters.new(person: \"Francesco\").require(:person).permit(:name)\r\n# => NoMethodError (undefined method `permit' for \"Francesco\":String)\r\n```\r\n\r\nThis requires developers to handle these unexpected exceptions instead\r\nof just rescuing/ignoring `ActionController::ParameterMissing`.\r\n\r\nThere even is a [warning documented](https://github.com/rails/rails/blob/abde74c118a2391c90f4c8ac197a9628ef2acf9b/actionpack/lib/action_controller/metal/strong_parameters.rb#L474-L488) in the rdoc of `require` to be\r\ncareful when requiring terminal values. For example, calling require\r\nwithout permit can have unexpected results if unpermitted values are\r\npassed:\r\n\r\n```ruby\r\nActionController::Parameters.new(name: Object.new).require(:name)\r\n# => #<Object:0x00007f8c58637180>\r\n```\r\n\r\n### Separate `require` methods for scalar and non scalar params\r\n\r\nBy restricting `require` to arrays and hashes, and adding a\r\n`require_scalar` method for scalar values we can prevent these problems.\r\n\r\nThis allows us to raise an `ActionController::ParameterMissing` if a\r\nrequired param doesn't have the expected type:\r\n\r\n```ruby\r\n# when a hash is passed but a scalar value is expected\r\nActionController::Parameters.new(name: { first: \"Francesco\" }).require_scalar(:name).downcase\r\n# => ActionController::ParameterMissing (param is missing or the value is empty: name)\r\n\r\n# when a scalar value is passed but a hash is expected\r\nActionController::Parameters.new(person: \"Francesco\").require(:person).permit(:name)\r\n# => ActionController::ParameterMissing (param is missing or the value is empty: person)\r\n```\r\n\r\n`require_scalar` also restricts the required values to permitted\r\nscalar values.\r\n\r\n```ruby\r\nActionController::Parameters.new(name: Object.new).require_scalar(:name)\r\n# => ActionController::ParameterMissing (param is missing or the value is empty: name)\r\n```\r\n\r\nFixes: #42953\r\n\r\n### Other Information\r\n\r\nThis would be a breaking change requiring deprecation warnings.\r\n\r\nMaybe we should make it even stricter and introduce methods\r\nfor each permited scalar type. This allows us to have stricter\r\nchecks and maybe even coerce to the proper type:\r\n\r\n```ruby\r\nparams = ActionController::Parameters.new(name: \"Francesco\", age: \"22\", active: \"true\")\r\nparams.require_string(:name) # => \"Francesco\"\r\nparams.require_integer(:age) # => 22\r\nparams.require_boolean(:active) # => true\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/44297/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 28561,
        "label_ids": [
            107189,
            1174770998
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/44297.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/44297.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2514363902,
        "number": 52848,
        "title": "Add check constraint should be invertible if invalid option provided",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T16:10:01Z",
        "updated_at": "2024-09-09T19:16:45Z",
        "closed_at": "2024-09-09T19:16:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nIf you have a migration that calls `add_check_constraint` with an invalid option then the migration works in the `up` direction but fails in the `down` direction. This was opened as https://github.com/rails/rails/issues/52419\r\n\r\n### Detail\r\n\r\nThe following migration would work in the `up` direction but fails to find the check constraint in the `down` direction. \r\n\r\n```ruby\r\nclass AddCheckConstraintWithInvalidOptionMigration < ActiveRecord::Migration::Current\r\n     def change\r\n        add_check_constraint :discounts, \"amount >= 0\", name: \"amount_check\", invalid_option: true\r\n     end\r\nend\r\n```\r\n\r\nThe error for SQLite would be:\r\n\r\n```\r\nArgumentError: Table 'discounts' has no check constraint for amount >= 0\r\n    lib/active_record/connection_adapters/abstract/schema_statements.rb:1788:in `check_constraint_for!'\r\n    lib/active_record/connection_adapters/sqlite3/schema_statements.rb:116:in `remove_check_constraint'\r\n```\r\n\r\nThe issue affects all the database adapters.\r\n\r\nThe issue is caused by the `invalid_option` not being used in the `up` direction but being used to find the constraint in the `down` direction. Fix is to just filter the options used by `remove_check_constraint` to only valid options.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52848/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1769416,
        "closed_by_id": 1769416,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52848.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52848.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2456777369,
        "number": 52551,
        "title": "Guidance to update an ActiveRecord DB adapter to work with 7.1",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-08-08T22:59:39Z",
        "updated_at": "2024-09-09T17:10:32Z",
        "closed_at": "2024-09-04T17:53:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This is not a bug report. The issue is that ActiveRecord 7.1 seems to have introduced a change that breaks the ActiveRecord ODBC adapter. I am not the original author of the ODBC adapter, which is based on a gem that worked with Rails 5. As such, I am trying to update this adapter to work with Rails 7.1 without a clear understanding of how it works, or the changes from 7.0 to 7.1.\r\n\r\nThe ActiveRecord ODBC adapter works with Snowflake DB by using Snowflake's ODBC driver. I am not aware of another similar adapter that is maintained.\r\n\r\nIn its current condition, activerecord-odbc-adapter works reasonably well with 7.0 but not with 7.1. Most likely, this is due to a change, \"Introduce a simpler constructor API for ActiveRecord database adapters\". Is documentation available that would give some guidance about how to upgrade the adapter to work with 7.1?\r\n\r\nFrom what I can piece together looking at the Postgres adapter and others, the initialize method in ActiveRecord::ConnectionAdapters::ODBCAdapter should change to something like:\r\n\r\n```\r\ndef initialize(...)\r\n  super\r\n  # other code to map param names or set instance variables?\r\n  # @raw_connection = ??\r\n  # @connection_parameters = ??\r\nend\r\n\r\n```\r\nIt appears that prior references to `@connection` change to `@raw_connection` in some places in some of the 7.1 adapters. I also see new methods such as `internal_execute()` in 7.1. I am not sure about the extent of the required changes to make this ODBC adapter or other adapter work with 7.1.\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nAble to run queries etc. against Snowflake DB using 7.0. After update to Rails 7.1, various references or method calls on `@connection` fail because the value is nil.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# Your reproduction script goes here\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.8 or 7.1.3\r\n\r\n**Ruby version**:\r\n3.2.3",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52551/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 50890236,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2093866588,
        "number": 50837,
        "title": "Ensure pre-7.1 migrations use legacy index names when using `rename_table`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10422595,
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 1,
            "closed_issues": 14,
            "state": "closed",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-09-13T14:10:12Z",
            "due_on": null,
            "closed_at": "2024-08-22T21:34:18Z"
        },
        "comments": 4,
        "created_at": "2024-01-22T12:59:01Z",
        "updated_at": "2024-09-09T17:04:05Z",
        "closed_at": "2024-04-23T17:06:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes https://github.com/rails/rails/issues/50833.\r\nFollow up to https://github.com/rails/rails/pull/47753 and https://github.com/rails/rails/pull/47863.\r\n\r\nThe easiest way to preserve the old behavior is to rename indexes back after the `rename_table` was run.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50837/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50837.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50837.patch",
        "pull_request_merged_at": "2024-04-23T17:06:31Z"
    },
    {
        "id": 2433742271,
        "number": 52431,
        "title": "Generating a new Rails plugin (engine) skips hotwire/javasript when I didn't ask it to",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-07-28T04:07:42Z",
        "updated_at": "2024-09-09T16:44:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nPretty simple, just run this command somewhere to create the Rails engine:\r\n\r\n```bash\r\n# leaving --mountable off gives the same behavior it seems\r\nrails plugin new test_engine --mountable\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt should include javascript and hotwire files by default\r\n\r\n### Actual behavior\r\n\r\nIt gives me the following message:\r\n\r\n```bash\r\nBased on the specified options, the following options will also be activated:\r\n\r\n  --skip-hotwire [due to --skip-javascript]\r\n\r\n      create  \r\n      create  README.md\r\n      create  Rakefile\r\n      ...\r\n      create  app/assets/images/test_engine\r\n      create  app/assets/images/test_engine/.keep\r\n      ...\r\n      create  app/assets/config/test_engine_manifest.js\r\n      create  app/assets/stylesheets/test_engine/application.css\r\n      ... (continues on and does not create any javascript/hotwire files\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\n```bash\r\nRails 7.1.3.4\r\n```\r\n\r\n**Ruby version**:\r\n```bash\r\nruby 3.3.3 (2024-06-12 revision f1c7b6f435) [x86_64-linux]\r\n```",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52431/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 176590,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2514365359,
        "number": 52849,
        "title": "Fix `.left_outer_joins` when multiple associations have the same child.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T16:10:46Z",
        "updated_at": "2024-09-09T16:16:30Z",
        "closed_at": "2024-09-09T16:16:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\nFixes #41498\r\n\r\nThis Pull Request has been created to fix an issue where `.left_outer_joins` used with multiple associations that have the same child association but different parents does not join all parents.\r\n\r\n### Detail\r\n\r\nThis Pull Request fixes #41498.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52849/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 25485509,
        "closed_by_id": 25485509,
        "label_ids": [
            107189,
            107190,
            107191,
            3666649,
            1174770998,
            1180817762
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52849.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52849.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2355906264,
        "number": 52138,
        "title": "Fix raw_post raising when rack.input is nil",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-06-16T18:10:58Z",
        "updated_at": "2024-09-09T16:08:54Z",
        "closed_at": "2024-08-21T20:16:12Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nFixes #52125\r\n\r\n### Detail\r\n\r\nStarting in Rack 3.1, rack.input is optional, so `read_body_stream` (used by `raw_post`) can no longer call `read` unconditionally.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52138/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6014046,
        "closed_by_id": 47848,
        "label_ids": [
            107189,
            1072773639,
            1174770998
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52138.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52138.patch",
        "pull_request_merged_at": "2024-08-21T20:16:12Z"
    },
    {
        "id": 823031800,
        "number": 41622,
        "title": "Support PostgreSQL DISTINCT ON",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 22,
        "created_at": "2021-03-05T12:16:16Z",
        "updated_at": "2024-09-09T15:25:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nThis PR adds an interface for ActiveRecord relations to use (already implemented in arel) DISTINCT ON feature.\r\n\r\nfixes https://github.com/rails/rails/issues/17706. Similar issue exists with tables which have `point` data type column.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/41622/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 993934,
        "label_ids": [
            107191,
            70310659
        ],
        "reactions_total_count": 43,
        "reactions_plus1": 11,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 32,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/41622.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/41622.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2511107550,
        "number": 52823,
        "title": "Rate limiting does not work for API  app , `cache_store` method is missing for ActionController::API  ",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-06T19:56:17Z",
        "updated_at": "2024-09-09T15:03:07Z",
        "closed_at": "2024-09-07T08:47:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\n  gem 'securerandom', '0.3.1'\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/\" => \"test#index\"\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::API\r\n  rate_limit to: 1, within: 1.hour\r\n\r\n  def index\r\n    render plain: \"Home\"\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def test_returns_success\r\n    get \"/\"\r\n    assert last_response.ok?\r\n  end\r\n\r\n  private\r\n\r\n  def app\r\n    Rails.application\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nNo errors\r\n\r\n### Actual behavior\r\n\r\nundefined local variable or method `cache_store'\r\n\r\n```\r\ngems/3.2.0/gems/actionpack-7.2.1/lib/action_controller/metal/rate_limiting.rb:47:in `rate_limit': undefined local variable or method `cache_store' for TestController:Class (NameError)\r\n\r\n      def rate_limit(to:, within:, by: -> { request.remote_ip }, with: -> { head :too_many_requests }, store: cache_store, **options)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52823/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 3481507,
        "closed_by_id": 12642,
        "label_ids": [
            107189,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 743817740,
        "number": 40630,
        "title": "Model attachments do not get uploaded when reloading the model within a transaction",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-11-16T12:59:57Z",
        "updated_at": "2024-09-09T12:21:30Z",
        "closed_at": "2021-03-03T01:21:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello! Working with attachments I noticed a weird behaviour when attachments never get uploaded when calling `reload` within a transaction. \r\n\r\nPending uploads are stored in `attachment_changes` and should be uploaded [after commit](https://github.com/rails/rails/blob/v6.0.3.4/activestorage/lib/active_storage/attached/model.rb#L56) but `attachment_changes` [gets cleaned](https://github.com/rails/rails/blob/v6.0.3.4/activestorage/lib/active_storage/attached/model.rb#L148) when calling `reload`. So when the execution leaves a transaction block and invokes `after_commit` `attachment_changes` is empty and file do not get uploaded.\r\n\r\n### Steps to reproduce\r\nThe problem exists in Rails >= 6 only. Use a model that has one or many attachments. That does not matter which storage service to use, but I used the disk service to reproduce the issue locally:\r\n\r\n```ruby\r\nclass User < ApplicationRecord\r\n  has_one_attached :avatar\r\nend\r\n```\r\n\r\nCreate a new record with an attached attachment within a transaction and reload the record inside the transaction block:\r\n\r\n```ruby\r\nuser = User.new\r\nuser.attachment = Rack::Test::UploadedFile.new(Rails.root.join(\"avatar.png\"), 'image/png')\r\n\r\nUser.transaction do\r\n  user.save!\r\n  user.reload\r\nend\r\n```\r\n\r\nUser is persisted and attachment associated are persisted correctly. `ActiveStorage::AnalyzeJob` is enqueued and fail with `ActiveStorage::FileNotFoundError` exception.\r\n\r\nCheck `user.avatar.service.exist?(user.avatar.key)` to validate presence of the uploaded file.\r\n\r\n### Expected behavior\r\nAttached file is uploaded, running `user.avatar.service.exist?(user.avatar.key)` returns true.\r\n\r\n### Actual behavior\r\nAttached file does not get uploaded, running `user.avatar.service.exist?(user.avatar.key)` returns false.\r\n\r\n### System configuration\r\n**Rails version**: 6.0.3.4\r\n\r\n**Ruby version**: 2.6.6\r\n\r\nWhat do you think? Does it sound like a bug or the behaviour is expected? \r\n\r\nCurrently I'm using [this patch](https://gist.github.com/Zolotovmega/684264fa025047d3a9a1e2257ec01ed2) to fix the issue.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/40630/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 5358686,
        "closed_by_id": 28418009,
        "label_ids": [
            12449438,
            664533972
        ],
        "reactions_total_count": 4,
        "reactions_plus1": 4,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2510740516,
        "number": 52820,
        "title": "alias_attribute broken in Rails 7.1.4",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-09-06T15:54:47Z",
        "updated_at": "2024-09-09T11:59:14Z",
        "closed_at": "2024-09-09T11:07:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activemodel\", \"= 7.1.4\"\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"active_model\"\r\n\r\n# Reproduce example from documentation\r\n# https://guides.rubyonrails.org/active_model_basics.html#method-alias-attribute\r\nclass Person\r\n  include ActiveModel::AttributeMethods\r\n\r\n  define_attribute_methods :name\r\n  attr_accessor :name\r\n\r\n  alias_attribute :full_name, :name\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_aliased_attribute\r\n    person = Person.new\r\n    person.name = \"Joe Doe\"\r\n\r\n    assert_equal \"Joe Doe\", person.name\r\n    assert_equal \"Joe Doe\", person.full_name\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nTests pass\r\n\r\n### Actual behavior\r\n```\r\nFetching gem metadata from https://rubygems.org/.........\r\nResolving dependencies...\r\nRun options: --seed 61935\r\n\r\n# Running:\r\n\r\nE\r\n\r\nFinished in 0.000626s, 1597.4438 runs/s, 1597.4438 assertions/s.\r\n\r\n  1) Error:\r\nBugTest#test_aliased_attribute:\r\nNoMethodError: undefined method `attribute' for an instance of Person\r\n    /Users/blangfeld/.asdf/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activemodel-7.2.1/lib/active_model/attribute_methods.rb:507:in `method_missing'\r\n    /Users/blangfeld/.asdf/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activemodel-7.2.1/lib/active_model/attribute_methods.rb:268:in `name'\r\n    alias.rb:31:in `test_aliased_attribute'\r\n\r\n1 runs, 1 assertions, 0 failures, 1 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1.4 (works in 7.1.3.4)\r\n\r\n**Ruby version**: ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [arm64-darwin23]\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52820/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 210221,
        "closed_by_id": 44640,
        "label_ids": [
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2056733163,
        "number": 50442,
        "title": "Solid Queue should be the default Active Job backend for Rails 8",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 22,
        "created_at": "2023-12-26T22:04:32Z",
        "updated_at": "2024-09-09T11:34:10Z",
        "closed_at": "2024-09-06T01:02:40Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "[Solid Queue](https://github.com/basecamp/solid_queue) should be the default Active Job backend for Rails 8 since it supports all our major databases and enables someone to run jobs in production without either additional dependencies (like Redis), using database-specific backends (like Good Job), or using commercially-restrained backends (like Sidekiq).\r\n\r\nThe necessary tables should be setup by default as part of rails new. The user should not have to do any configuration whatsoever to be able to deploy their application in production with Solid Queue as the job runner. We also need to figure out a standardized setup for running the worker jobs, especially as part of the default Dockerfile setup.\r\n\r\nYou should be able to avoid this using `--skip-solid-queue` or just `--skip-solid`.\r\n\r\ncc @rosa",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50442/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            123812746
        ],
        "reactions_total_count": 74,
        "reactions_plus1": 54,
        "reactions_minus1": 1,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 14,
        "reactions_rocket": 5,
        "reactions_eyes": 0
    },
    {
        "id": 2513634879,
        "number": 52844,
        "title": "[7-1-stable] alias_attribute: handle user defined source methods",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T11:00:39Z",
        "updated_at": "2024-09-09T11:07:58Z",
        "closed_at": "2024-09-09T11:07:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Backport of: https://github.com/rails/rails/pull/52842\r\n\r\n`alias_attribute` used to define a \"jump method\", e.g. `alias_attribute :foo, :bar` was pretty much a macro to generate\r\n\r\n```ruby\r\ndef foo\r\n  bar\r\nend\r\n```\r\n\r\nThis is convienient because it's easy, it doesn't impose an order of declaration or anything like that.\r\n\r\nBut it's also much less efficient than a true `alias_method`.\r\n\r\nIt also used to cause cache size explosion which we fixed in https://github.com/rails/rails/pull/52118, but making it behave like Ruby's `alias_method`, by doing a real alias.\r\n\r\nBut this breaks some expectations (literally from the documentation):\r\n\r\n```ruby\r\n  attr_accessor :name\r\n  attribute_method_suffix '_short?'\r\n  define_attribute_methods :name\r\n\r\n  alias_attribute :nickname, :name\r\n```\r\n\r\nHere we're not supposed to alias a generated method, but a user defined one.\r\n\r\nSo this assumption can only hold for Active Record, not Active Model.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52844/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19192189,
        "closed_by_id": 44640,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52844.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52844.patch",
        "pull_request_merged_at": "2024-09-09T11:07:57Z"
    },
    {
        "id": 2513624382,
        "number": 52843,
        "title": "[7-2-stable] alias_attribute: handle user defined source methods",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T10:55:53Z",
        "updated_at": "2024-09-09T11:07:09Z",
        "closed_at": "2024-09-09T11:07:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Bacport of: https://github.com/rails/rails/pull/52842\r\n\r\n`alias_attribute` used to define a \"jump method\", e.g. `alias_attribute :foo, :bar` was pretty much a macro to generate\r\n\r\n```ruby\r\ndef foo\r\n  bar\r\nend\r\n```\r\n\r\nThis is convienient because it's easy, it doesn't impose an order of declaration or anything like that.\r\n\r\nBut it's also much less efficient than a true `alias_method`.\r\n\r\nIt also used to cause cache size explosion which we fixed in https://github.com/rails/rails/pull/52118, but making it behave like Ruby's `alias_method`, by doing a real alias.\r\n\r\nBut this breaks some expectations (literally from the documentation):\r\n\r\n```ruby\r\n  attr_accessor :name\r\n  attribute_method_suffix '_short?'\r\n  define_attribute_methods :name\r\n\r\n  alias_attribute :nickname, :name\r\n```\r\n\r\nHere we're not supposed to alias a generated method, but a user defined one.\r\n\r\nSo this assumption can only hold for Active Record, not Active Model.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52843/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19192189,
        "closed_by_id": 44640,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52843.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52843.patch",
        "pull_request_merged_at": "2024-09-09T11:07:09Z"
    },
    {
        "id": 2513615899,
        "number": 52842,
        "title": "alias_attribute: handle user defined source methods",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T10:51:57Z",
        "updated_at": "2024-09-09T11:07:01Z",
        "closed_at": "2024-09-09T11:07:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Redo of: https://github.com/rails/rails/pull/52822\r\nFix: https://github.com/rails/rails/issues/52820\r\n\r\nalias_attribute: handle user defined source methods\r\n\r\n`alias_attribute` used to define a \"jump method\", e.g.\r\n`alias_attribute :foo, :bar` was pretty much a macro to generate\r\n\r\n```ruby\r\ndef foo\r\n  bar\r\nend\r\n```\r\n\r\nThis is convienient because it's easy, it doesn't impose an order\r\nof declaration or anything like that.\r\n\r\nBut it's also much less efficient than a true `alias_method`.\r\n\r\nIt also used to cause cache size explosion which we fixed in\r\nhttps://github.com/rails/rails/pull/52118, but making it behave\r\nlike Ruby's `alias_method`, by doing a real alias.\r\n\r\nBut this breaks some expectations (literally from the documentation):\r\n\r\n```ruby\r\n  attr_accessor :name\r\n  attribute_method_suffix '_short?'\r\n  define_attribute_methods :name\r\n\r\n  alias_attribute :nickname, :name\r\n```\r\n\r\nHere we're not supposed to alias a generated method, but a user defined one.\r\n\r\nSo this assumption can only hold for Active Record, not Active Model.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52842/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19192189,
        "closed_by_id": 44640,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52842.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52842.patch",
        "pull_request_merged_at": "2024-09-09T11:07:00Z"
    },
    {
        "id": 2513581824,
        "number": 52841,
        "title": "Revert \"alias_attribute: handle user defined source methods\"",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-09T10:36:16Z",
        "updated_at": "2024-09-09T10:36:34Z",
        "closed_at": "2024-09-09T10:36:32Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Reverts rails/rails#52822\r\n\r\nI merged the wrong commit 😫 ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52841/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 44640,
        "closed_by_id": 44640,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52841.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52841.patch",
        "pull_request_merged_at": "2024-09-09T10:36:32Z"
    },
    {
        "id": 2511007393,
        "number": 52822,
        "title": "alias_attribute: handle user defined source methods",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-06T18:44:54Z",
        "updated_at": "2024-09-09T10:16:26Z",
        "closed_at": "2024-09-09T10:16:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fix: https://github.com/rails/rails/issues/52820\r\n\r\n`alias_attribute` used to define a \"jump method\", e.g. `alias_attribute :foo, :bar` was pretty much a macro to generate\r\n\r\n```ruby\r\ndef foo\r\n  bar\r\nend\r\n```\r\n\r\nThis is convienient because it's easy, it doesn't impose an order of declaration or anything like that.\r\n\r\nBut it's also much less efficient than a true `alias_method`.\r\n\r\nIt also used to cause cache size explosion which we fixed in https://github.com/rails/rails/pull/52118, but making it behave like Ruby's `alias_method`, by doing a real alias.\r\n\r\nBut this breaks some expectations (literally from the documentation):\r\n\r\n```ruby\r\n  attr_accessor :name\r\n  attribute_method_suffix '_short?'\r\n  define_attribute_methods :name\r\n\r\n  alias_attribute :nickname, :name\r\n```\r\n\r\nHere we're not aliasing a generated method, but a user defined one.\r\n\r\nA solution is to check if the method exist in the class itself, and if it does, alias that user defined method instead of generating one.\r\n\r\nIt solves the issue at hand, but still is more restrictive than the original implementation, as the user method has to be defined before the `alias_attribute` call, but I think that's an OK limitation.\r\n\r\nAnother limitation is that user defined methods have to be defined in the class itself. If they are defined in an ancestor the issue remains.\r\n\r\nTODO: write a test, and think of a potential better solution.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52822/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 44640,
        "closed_by_id": 44640,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52822.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52822.patch",
        "pull_request_merged_at": "2024-09-09T10:16:23Z"
    },
    {
        "id": 2393650865,
        "number": 52284,
        "title": "Malformed request causes exception \"invalid byte sequence in UTF-8\"",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-07-06T18:13:38Z",
        "updated_at": "2024-09-09T05:25:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```\r\nbundle exec rails new --skip-docker --skip-javascript --skip-jbuilder .\r\nbundle exec rails s\r\ncurl -v http://localhost:3000/?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input\r\n```\r\n\r\n### Expected behavior\r\n\r\nRails returns a error to the client and doesn't trigger an exception (HTTP 400 maybe?).\r\n\r\n### Actual behavior\r\n\r\nRails returns an HTTP 500 error to the client and triggers an exception:\r\n\r\n```\r\nStarted GET \"/?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input\" for ::1 at 2024-07-06 11:10:08 -0700\r\n\r\nArgumentError (invalid byte sequence in UTF-8):\r\n\r\nactivesupport (7.1.3.4) lib/active_support/parameter_filter.rb:140:in `match?'\r\nactivesupport (7.1.3.4) lib/active_support/parameter_filter.rb:140:in `block in value_for_key'\r\nactivesupport (7.1.3.4) lib/active_support/parameter_filter.rb:140:in `any?'\r\nactivesupport (7.1.3.4) lib/active_support/parameter_filter.rb:140:in `value_for_key'\r\nactivesupport (7.1.3.4) lib/active_support/parameter_filter.rb:129:in `block in call'\r\nactivesupport (7.1.3.4) lib/active_support/parameter_filter.rb:128:in `each'\r\nactivesupport (7.1.3.4) lib/active_support/parameter_filter.rb:128:in `call'\r\nactivesupport (7.1.3.4) lib/active_support/parameter_filter.rb:84:in `filter'\r\nactionpack (7.1.3.4) lib/action_dispatch/http/filter_parameters.rb:31:in `filtered_parameters'\r\nactionpack (7.1.3.4) lib/action_controller/metal/instrumentation.rb:64:in `process_action'\r\nactionpack (7.1.3.4) lib/action_controller/metal/params_wrapper.rb:261:in `process_action'\r\nactiverecord (7.1.3.4) lib/active_record/railties/controller_runtime.rb:32:in `process_action'\r\nactionpack (7.1.3.4) lib/abstract_controller/base.rb:160:in `process'\r\nactionview (7.1.3.4) lib/action_view/rendering.rb:40:in `process'\r\nactionpack (7.1.3.4) lib/action_controller/metal.rb:227:in `dispatch'\r\nactionpack (7.1.3.4) lib/action_controller/metal.rb:309:in `dispatch'\r\nactionpack (7.1.3.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'\r\nactionpack (7.1.3.4) lib/action_dispatch/routing/route_set.rb:32:in `serve'\r\nactionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:51:in `block in serve'\r\nactionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:131:in `block in find_routes'\r\nactionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:124:in `each'\r\nactionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:124:in `find_routes'\r\nactionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:32:in `serve'\r\nactionpack (7.1.3.4) lib/action_dispatch/routing/route_set.rb:882:in `call'\r\nrack (3.1.6) lib/rack/tempfile_reaper.rb:20:in `call'\r\nrack (3.1.6) lib/rack/etag.rb:29:in `call'\r\nrack (3.1.6) lib/rack/conditional_get.rb:31:in `call'\r\nrack (3.1.6) lib/rack/head.rb:15:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/http/permissions_policy.rb:36:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/http/content_security_policy.rb:33:in `call'\r\nrack-session (2.0.0) lib/rack/session/abstract/id.rb:272:in `context'\r\nrack-session (2.0.0) lib/rack/session/abstract/id.rb:266:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/cookies.rb:689:in `call'\r\nactiverecord (7.1.3.4) lib/active_record/migration.rb:655:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\r\nactivesupport (7.1.3.4) lib/active_support/callbacks.rb:101:in `run_callbacks'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/callbacks.rb:28:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/executor.rb:14:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/actionable_exceptions.rb:16:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/debug_exceptions.rb:29:in `call'\r\nweb-console (4.2.1) lib/web_console/middleware.rb:132:in `call_app'\r\nweb-console (4.2.1) lib/web_console/middleware.rb:28:in `block in call'\r\nweb-console (4.2.1) lib/web_console/middleware.rb:17:in `catch'\r\nweb-console (4.2.1) lib/web_console/middleware.rb:17:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'\r\nrailties (7.1.3.4) lib/rails/rack/logger.rb:37:in `call_app'\r\nrailties (7.1.3.4) lib/rails/rack/logger.rb:24:in `block in call'\r\nactivesupport (7.1.3.4) lib/active_support/tagged_logging.rb:135:in `block in tagged'\r\nactivesupport (7.1.3.4) lib/active_support/tagged_logging.rb:39:in `tagged'\r\nactivesupport (7.1.3.4) lib/active_support/tagged_logging.rb:135:in `tagged'\r\nactivesupport (7.1.3.4) lib/active_support/broadcast_logger.rb:240:in `method_missing'\r\nrailties (7.1.3.4) lib/rails/rack/logger.rb:24:in `call'\r\nsprockets-rails (3.5.1) lib/sprockets/rails/quiet_assets.rb:17:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/remote_ip.rb:92:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/request_id.rb:28:in `call'\r\nrack (3.1.6) lib/rack/method_override.rb:28:in `call'\r\nrack (3.1.6) lib/rack/runtime.rb:24:in `call'\r\nactivesupport (7.1.3.4) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/server_timing.rb:59:in `block in call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/server_timing.rb:24:in `collect_events'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/server_timing.rb:58:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/executor.rb:14:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/static.rb:25:in `call'\r\nrack (3.1.6) lib/rack/sendfile.rb:114:in `call'\r\nactionpack (7.1.3.4) lib/action_dispatch/middleware/host_authorization.rb:141:in `call'\r\nrailties (7.1.3.4) lib/rails/engine.rb:536:in `call'\r\npuma (6.4.2) lib/puma/configuration.rb:272:in `call'\r\npuma (6.4.2) lib/puma/request.rb:100:in `block in handle_request'\r\npuma (6.4.2) lib/puma/thread_pool.rb:378:in `with_force_shutdown'\r\npuma (6.4.2) lib/puma/request.rb:99:in `handle_request'\r\npuma (6.4.2) lib/puma/server.rb:464:in `process_client'\r\npuma (6.4.2) lib/puma/server.rb:245:in `block in run'\r\npuma (6.4.2) lib/puma/thread_pool.rb:155:in `block in spawn_thread'\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.3.4\r\n**Ruby version**: 3.3.3",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52284/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 110569,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2512622014,
        "number": 52837,
        "title": "Documentation / tutorials need a caveat that BootStrap doesn't mix with inline ES modules",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-08T23:25:23Z",
        "updated_at": "2024-09-08T23:25:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "If application.js imports bootstrap and exports some functions anything that depends on Bootstrap\r\nwill be broken by a subsequent module importing those functions.\r\n\r\nFor example, drop down menus become unresponsive if the page has an inline ES module that\r\nimports from application.js even if it is only importing one entirely unrelated function.\r\n\r\nThis is easily worked around by simply splitting application.js into two separate files but it would be nice\r\nif the documentation warns of this behaviour before anyone else wastes as much time as I did.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52837/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 489399,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2500043354,
        "number": 52765,
        "title": "Redirect with paths instead of URLs by default",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-02T05:38:16Z",
        "updated_at": "2024-09-08T23:14:39Z",
        "closed_at": "2024-09-02T20:41:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Partially addresses https://github.com/rails/rails/issues/52756.\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because we want the Rails codebase to move from redirecting with URLs to redirecting with paths. See DHH's rationale in https://github.com/rails/rails/issues/52756.\r\n\r\nThe problem is that currently, Rails converts any path redirection to a URL redirection. For example all the following:\r\n\r\n- `redirect_to @some_record`\r\n- `redirect_to some_path`\r\n- `redirect_to \"/some/path\"`\r\n\r\nare internally converted to URLs. Meaning that the 3xx redirect `Location` response field is a full URL, not a path.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `_compute_redirect_to_location` (called by `redirect_to`) to truly return a path by default.\r\n\r\nA full URL is still returned if `redirect_to` has options like `:host` which IMO means that the developer intended to use full URLs. I am uncertain about this so I am open to feedback.\r\n\r\nI am also a bit wary of unintended side effects; I only did a quick pass on fixing tests.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52765/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 236461,
        "closed_by_id": 236461,
        "label_ids": [
            107189,
            107195,
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52765.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52765.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1577661837,
        "number": 47334,
        "title": "Error does not bubble up from invalid associated record to parent (more detailed)",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-02-09T10:52:24Z",
        "updated_at": "2024-09-08T22:40:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n```ruby\r\nclass Parent\r\n  has_many :child_parents\r\n  has_many :children, through: :child_parents\r\nend\r\n\r\nclass ChildParent\r\n  belongs_to :parent\r\n  belongs_to :child\r\nend\r\n\r\nclass Child\r\n  has_many :child_parents\r\n  has_many :parents, through: :child_parents\r\n\r\n  validates :name, uniqueness: { scope: :parent }\r\nend\r\n\r\n\r\nfirst_child = Child.create(name: \"John\")\r\nsecond_child = Child.create(name: \"John\")\r\n\r\nparent = Parent.create\r\n\r\nparent.update(children_ids: [first_child.id, second_child.id])\r\n\r\nparent.save #=> false\r\nparent.errors.full_messages #=> \"Children invalid\"\r\nparent.children.map(&:errors).compact.map(&:full_messages) #=> \"[[\"Child's name already taken\"]]\"\r\n```\r\n\r\n### Expected behavior\r\nExpected to have message more detailed, like \"Child with id '45' has already taken name\" on parent model\r\n\r\n### Actual behavior\r\nIt just returns an error message \"Children are invalid\" 🙂 \r\n\r\n### System configuration\r\n**Rails version**: 7.0.4\r\n\r\n**Ruby version**: 3.1.1\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/47334/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 49816584,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1132060374,
        "number": 44398,
        "title": "Remove LIMIT and OFFSET on relations when batch iterating",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-02-11T08:25:01Z",
        "updated_at": "2024-09-08T22:09:25Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "When using `find_each`, `find_in_batches`, or `in_batches` on a relation with a specified limit, the batch relation yielded no longer propagates those values.\r\n\r\nOther than being being useless or potentially problematic, the removal also eliminates a subquery under certain conditions when using `JOIN` with MySQL.\r\n\r\nIn the test cases I added, the queries executed go from: \r\n\r\n```sql\r\nSELECT `posts`.* FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL ORDER BY `posts`.`id` ASC LIMIT 3\r\nDELETE FROM `posts` WHERE `posts`.`id` IN (SELECT `id` FROM (SELECT `posts`.`id` FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL AND `posts`.`id` IN (3, 6, 8) LIMIT 5) AS __active_record_temp)\r\nSELECT `posts`.* FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL AND `posts`.`id` > 8 ORDER BY `posts`.`id` ASC LIMIT 2\r\nDELETE FROM `posts` WHERE `posts`.`id` IN (SELECT `id` FROM (SELECT `posts`.`id` FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL AND `posts`.`id` IN (9, 10) LIMIT 5) AS __active_record_temp)\r\n```\r\n\r\nTo:\r\n\r\n```sql\r\nSELECT `posts`.* FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL ORDER BY `posts`.`id` ASC LIMIT 3\r\nDELETE `posts` FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL AND `posts`.`id` IN (3, 6, 8)\r\nSELECT `posts`.* FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL AND `posts`.`id` > 8 ORDER BY `posts`.`id` ASC LIMIT 2\r\nDELETE `posts` FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL AND `posts`.`id` IN (9, 10).\r\n```\r\n\r\nAnd from:\r\n\r\n```sql\r\nSELECT `posts`.* FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL ORDER BY `posts`.`id` ASC LIMIT 3 OFFSET 2\r\nUPDATE `posts` SET `posts`.`legacy_comments_count` = 0 WHERE `posts`.`id` IN (SELECT `id` FROM (SELECT `posts`.`id` FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL AND `posts`.`id` IN (8, 9, 10) LIMIT 18446744073709551615 OFFSET 2) AS __active_record_temp)\r\nSELECT `posts`.* FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL AND `posts`.`id` > 10 ORDER BY `posts`.`id` ASC LIMIT 3 OFFSET 2\r\n```\r\n\r\nTo: \r\n\r\n```sql\r\nSELECT `posts`.* FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL ORDER BY `posts`.`id` ASC LIMIT 3 OFFSET 2\r\nUPDATE `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` SET `posts`.`legacy_comments_count` = 0 WHERE `comments`.`id` IS NULL AND `posts`.`id` IN (8, 9, 10)\r\nSELECT `posts`.* FROM `posts` LEFT OUTER JOIN `comments` ON `comments`.`post_id` = `posts`.`id` WHERE `comments`.`id` IS NULL AND `posts`.`id` > 10 ORDER BY `posts`.`id` ASC LIMIT 3 OFFSET 2.\r\n```\r\n\r\nWhile both can cause improper query execution, the test cases shows the usage of `OFFSET` is much easier to trigger this issue compared to `LIMIT`.\r\n\r\nI believe the subquery behavior with Postgres and SQLite is as expected, but I'm not as familiar with their internals.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/44398/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 50848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/44398.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/44398.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2203991751,
        "number": 51399,
        "title": "ActiveSupport::Cache.expand_cache_key sometimes returns falsely same key in parallel tests",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2024-03-23T18:20:10Z",
        "updated_at": "2024-09-08T22:02:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nThats the hard part here! I still didnt figure out how to reproduce it safely. \r\nWhat i can tell is that this does not happen when i execute a single testcase. It also doesnt happen when i set parallel workers to `1`.\r\n\r\nWhen parallel workers is set to `processors` and all tests are executed via `rails test`, the following test is breaking repeatedly:\r\n```ruby\r\n      it \"returns updated records omitting cache and returning new etag\" do\r\n        get \"/apis/v1/me/tickets\"\r\n        assert_valid_json_response\r\n\r\n        assert_changes ->{ last_response.headers[\"etag\"] } do\r\n          travel 1.second\r\n          tickets(:multi).touch\r\n\r\n          get \"/apis/v1/me/tickets\"\r\n          assert_valid_json_response\r\n        end\r\n      end\r\n```\r\nThe etag header is calculated basically via this line of code which i also found out to return the same **wrong key**. The `updated_at` on the record `tickets(:multi)` changes, but the underlying query fetching the `max(tickets.updated_at)` seem to return an older timestamp? At least the timestamp in the key remains the same.\r\n```\r\nActiveSupport::Cache.expand_cache_key current_user.tickets.visible\r\n```\r\nThe visible scope: \r\n```\r\nscope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).group(\"tickets.id\")}\r\n```\r\n\r\n### Expected behavior\r\nThe etag header should change in the same way whether i execute a single test or all together without flakiness. \r\n\r\n### Actual behavior\r\nThe etag header **remains equal** which is wrong. But this happens only when executing all tests parallelized which is kinda flaky.\r\n\r\n### Notes\r\nI found out that changing the scope implementation from `group` to `distinct` fixes it:\r\n```\r\nscope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).select(\"distinct on (#{table_name}.id) #{table_name}.*\")}\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51399/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2773925,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 1,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1892613767,
        "number": 49240,
        "title": "Add an internal route for bin/rails notes",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-12T14:11:15Z",
        "updated_at": "2024-09-08T20:38:32Z",
        "closed_at": "2024-06-12T19:08:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nLooking for early feedback on notes\r\n\r\nInspired by the `rails/info/routes` route I am suggesting a `rails/info/notes` internal route.\r\n\r\nThis will be same as doing \r\n\r\n```sh\r\n$ bin/rails notes\r\n\r\napp/controllers/posts_controller.rb:\r\n  * [ 9] [TODO] Move this logic to a concern\r\n  * [18] [FIXME] Refactor this method\r\n\r\napp/models/post.rb:\r\n  * [ 2] [TODO] Refactor this validation\r\n```\r\n\r\n### Detail\r\n\r\nAdding an internal route for the `bin/rails notes` so we can check the notes on UI.\r\n\r\n### Additional information\r\n\r\n**Option 1:**\r\n\r\n<img width=\"890\" alt=\"Screenshot 2023-09-12 at 19 40 07\" src=\"https://github.com/rails/rails/assets/14993828/7bde94f3-629b-42b0-b85f-54826af9b553\">\r\n\r\n**Option 2:**\r\n\r\n<img width=\"890\" alt=\"Screenshot 2023-09-12 at 19 36 03\" src=\"https://github.com/rails/rails/assets/14993828/104e15cb-460b-403d-93d8-5dcfae02d991\">\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49240/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 14993828,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 12,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 12,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/49240.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/49240.patch",
        "pull_request_merged_at": "2024-06-12T19:08:49Z"
    },
    {
        "id": 2512290985,
        "number": 52831,
        "title": "Store session_id in cookies only once",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-08T09:36:59Z",
        "updated_at": "2024-09-08T19:36:13Z",
        "closed_at": "2024-09-08T18:20:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Closes https://github.com/rails/rails/issues/52832\r\n\r\nBefore this commit, while authenticated, the `set_current_session` was called on every request which resulted in setting the `session_id` in the cookies on every request.\r\n\r\n```rb\r\ndef set_current_session(session)\r\n  Current.session = session\r\n  cookies.signed.permanent[:session_id] = { value: session.id, httponly: true, same_site: :lax }\r\nend\r\n```\r\n\r\nSetting the `session_id` in the cookies on every request is unnecessary. Also, if developers want to set an expiration date to the cookies (for example with `expires: 1.week`), the expiration date will be reset on every request leading to the cookies never expiring.\r\n\r\nThis PR solves the issue by storing the `session_id` in the cookies only in the `start_new_session_for` method.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52831/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 33979976,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52831.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52831.patch",
        "pull_request_merged_at": "2024-09-08T18:20:35Z"
    },
    {
        "id": 2512292600,
        "number": 52832,
        "title": "[Authentication generator]: Don't set session_id in the cookies on every request",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-08T09:41:45Z",
        "updated_at": "2024-09-08T18:20:36Z",
        "closed_at": "2024-09-08T18:20:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Currently, the Authentication concern looks like this:\r\n\r\n```rb\r\nmodule Authentication\r\n  included do\r\n    before_action :require_authentication\r\n  end\r\n\r\n  def require_authentication\r\n    resume_session || request_authentication\r\n  end\r\n\r\n  def resume_session\r\n    if session = find_session_by_cookie\r\n      set_current_session session\r\n    end\r\n  end\r\n\r\n  def set_current_session(session)\r\n    Current.session = session\r\n    cookies.signed.permanent[:session_id] = { value: session.id, httponly: true, same_site: :lax }\r\n  end\r\nend\r\n```\r\n\r\nAs we can see, when the user is authenticated, the `set_current_session` method is called on every request which means the `session_id` cookie is reset in every request.\r\n\r\nSetting the `session_id` cookie on every request is not necessary.  Also, if developers want to set an expiration date to the cookies (for example with expires: 1.week), the expiration date will be reset on every request leading to the cookies never expiring.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52832/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 33979976,
        "closed_by_id": 2741,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2512324237,
        "number": 52833,
        "title": "remove blank line from the end of passwords_controller template to keep rubocop happy",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-08T10:54:21Z",
        "updated_at": "2024-09-08T18:17:43Z",
        "closed_at": "2024-09-08T18:17:43Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52833/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 752058,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52833.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52833.patch",
        "pull_request_merged_at": "2024-09-08T18:17:43Z"
    },
    {
        "id": 380440131,
        "number": 34438,
        "title": "[WIP] Filter parameters in ActiveJob logs",
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "georgeclaghorn",
            "id": 94129,
            "followers_url": "https://api.github.com/users/georgeclaghorn/followers",
            "following_url": "https://api.github.com/users/georgeclaghorn/following{/other_user}",
            "starred_url": "https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/georgeclaghorn/subscriptions",
            "organizations_url": "https://api.github.com/users/georgeclaghorn/orgs",
            "repos_url": "https://api.github.com/users/georgeclaghorn/repos",
            "received_events_url": "https://api.github.com/users/georgeclaghorn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "georgeclaghorn",
                "id": 94129,
                "followers_url": "https://api.github.com/users/georgeclaghorn/followers",
                "following_url": "https://api.github.com/users/georgeclaghorn/following{/other_user}",
                "starred_url": "https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/georgeclaghorn/subscriptions",
                "organizations_url": "https://api.github.com/users/georgeclaghorn/orgs",
                "repos_url": "https://api.github.com/users/georgeclaghorn/repos",
                "received_events_url": "https://api.github.com/users/georgeclaghorn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2018-11-13T21:51:24Z",
        "updated_at": "2024-09-08T16:44:10Z",
        "closed_at": "2019-11-08T19:49:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nFilter out parameters in ActiveJob logs using `ActiveSupport::ParameterFilter`.\r\n\r\nFixes #34439.\r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/34438/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 697113,
        "closed_by_id": 47848,
        "label_ids": [
            123812746
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/34438.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/34438.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2396684060,
        "number": 52291,
        "title": "For an association scope, pass the reflection along with the where values",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-07-08T22:30:15Z",
        "updated_at": "2024-09-08T16:30:28Z",
        "closed_at": "2024-07-12T01:44:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #52135\r\n\r\n### Motivation / Background\r\n\r\nA reflection is [currently found by table name](https://github.com/rails/rails/blame/56b83a2b4108b6d31a3b2b769e8e363640b649d6/activerecord/lib/active_record/table_metadata.rb#L30) when retrieving the associated table. Obviously, if the association name doesn't match the table name, no reflection is found. This only becomes a problem when custom types are involved. \r\n\r\n### Detail\r\n\r\nThis implementation uses a custom hash to represent the \"where values\" along with the reflection.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52291/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 14007,
        "closed_by_id": 14007,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52291.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52291.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2472042859,
        "number": 52643,
        "title": "PG::SyntaxError on query serialize in Rails 7.2",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2024-08-18T16:14:03Z",
        "updated_at": "2024-09-08T14:16:39Z",
        "closed_at": "2024-08-19T07:14:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\nProblem with serialization sql query with string condition and `nil` bind value with PostgreSQL adapter (it does work with sqlite3) \r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  gem 'rails'\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem 'pg'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\ndb_config = { adapter: 'postgresql', database: 'test', host: 'localhost' }\r\nActiveRecord::Tasks::DatabaseTasks.create(db_config)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'test')\r\nActiveRecord::Base.logger = Logger.new($stdout)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :users, force: true do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    user1 = User.create!(name: 'John Doe')\r\n    user2 = User.create!\r\n\r\n    assert_equal user1, User.find_by('LOWER(name) = ?', 'john doe')\r\n    assert_equal nil, User.find_by('LOWER(name) = ?', 'jane doe')\r\n    assert_equal user2, User.find_by('LOWER(name) IS ?', nil)\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nSerialize query with `LOWER(name) IS NULL` condition\r\n\r\n### Actual behavior\r\n```\r\nActiveRecord::StatementInvalid: PG::SyntaxError: ERROR:  syntax error at or near \"$1\"\r\nLINE 1: ...LECT \"users\".* FROM \"users\" WHERE (LOWER(name) IS $1) LIMIT ...\r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.2.0\r\n**Ruby version**:\r\nruby 3.3.4 (2024-07-09 revision be1089c8ec) [arm64-darwin23]\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52643/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 7523182,
        "closed_by_id": 44640,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2503124230,
        "number": 52784,
        "title": "ActiveRecord won't convert to interval from string",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-03T15:05:10Z",
        "updated_at": "2024-09-08T11:39:23Z",
        "closed_at": "2024-09-08T11:39:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  gem \"pg\"\r\n  gem \"byebug\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"action_controller\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# docker run --rm -e POSTGRES_PASSWORD=postgres -p 9999:5432 postgres\r\nActiveRecord::Base.establish_connection(\"postgres://postgres:postgres@localhost:9999/postgres\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :timings, force: true do |t|\r\n    t.string :name\r\n    t.integer :count\r\n    t.interval :duration\r\n  end\r\nend\r\n\r\nclass Timing < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_duration\r\n    params = ActionController::Parameters.new({\r\n      timing: {\r\n        name: \"A\",\r\n        count: \"5\",\r\n        duration: \"300\"\r\n      }\r\n    })\r\n\r\n    permitted = params.require(:timing).permit(:name, :count, :duration)\r\n    timing = Timing.create!(permitted)\r\n\r\n    assert_equal \"A\", timing.name\r\n    assert_equal 5, timing.count # Works even though count was a String param\r\n    assert_equal 5.minutes, timing.duration # Fails because duration was a String param\r\n\r\n    timing.update!(duration: 300)\r\n    assert_equal 5.minutes, timing.duration # Works after being assigned a number directly.\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt should accept integers strings similar to integer columns.\r\n\r\n### Actual behavior\r\n\r\nThe attribute ends up as nil.\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.2.1\r\n**Ruby version**: 3.3.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52784/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 1841328,
        "closed_by_id": 1841328,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 457200554,
        "number": 36512,
        "title": "has_one doesn't generate an [association]_id method and every other association type does",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2019-06-18T00:05:44Z",
        "updated_at": "2024-09-08T02:55:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I keep expecting this to work because it does for literally every other association type. and sure I can just use `delegate :id, to: :[association], prefix: true` but it feels like it's missing. \r\n\r\nI made a test because i was sure it must work and i'm missing something.\r\n\r\nI find i notice it especially on `has_one, through: [thing with belongs_to on it]`\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  gem \"sqlite3\"\r\n  gem \"openssl\", '2.1.2' # i was having trouble booting rails because of this\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :comment_authors, force: true do |t|\r\n    t.integer :comment_id\r\n  end\r\n\r\n  create_join_table :posts, :tags\r\n\r\n  create_table :tags, force: true\r\n\r\n  create_table :attachment, force: true do |t|\r\n    t.integer :attachable_id\r\n    t.integer :attachable_type\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n  has_many :comment_authors, through: :comments\r\n  has_and_belongs_to_many :tags\r\n  has_many :attachments, as: :attachable\r\nend\r\n\r\nclass Tags < ActiveRecord::Base\r\n  has_and_belongs_to_many :posts\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :comment_author\r\n  has_one :attachment, as: :attachable\r\nend\r\n\r\nclass CommentAuthor < ActiveRecord::Base\r\n  belongs_to :comment\r\n  has_one :post, through: :comment\r\nend\r\n\r\nclass Attachment < ActiveRecord::Base\r\n  belongs_to :attachable, polymorphic: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_id_exists_for_has_one # fails\r\n    # the associations exist\r\n    assert_respond_to Comment.new, :comment_author\r\n    assert_respond_to Comment.new, :comment_author=\r\n    # but there's no _id method\r\n    assert_respond_to Comment.new, :comment_author_id\r\n    assert_respond_to Comment.new, :comment_author_id=\r\n  end\r\n\r\n  def test_association_id_exists_for_polymorphic_has_one # fails\r\n    # the associations exist\r\n    assert_respond_to Comment.new, :attachment\r\n    assert_respond_to Comment.new, :attachment=\r\n    # but there's no _id method\r\n    assert_respond_to Comment.new, :attachment_id\r\n    assert_respond_to Comment.new, :attachment_id=\r\n  end\r\n\r\n  def test_association_id_exists_for_has_one_through # fails\r\n    # the associations exist\r\n    assert_respond_to Comment.new, :post\r\n    # but there's no _id method\r\n    assert_respond_to CommentAuthor.new, :post_id\r\n  end\r\n\r\n  def test_association_id_exists_for_belongs_to # literally an attribute the universe would have to break for this to not work\r\n    assert_respond_to CommentAuthor.new, :comment_id\r\n    assert_respond_to CommentAuthor.new, :comment_id=\r\n  end\r\n\r\n  def test_association_ids_exists_for_has_many\r\n    assert_respond_to Post.new, :comment_ids\r\n    assert_respond_to Post.new, :comment_ids=\r\n  end\r\n\r\n  def test_association_ids_exists_for_polymorphic_has_many\r\n    assert_respond_to Post.new, :attachment_ids\r\n    assert_respond_to Post.new, :attachment_ids=\r\n  end\r\n\r\n  def test_association_ids_exists_for_has_many_through\r\n    assert_respond_to Post.new, :comment_author_ids\r\n  end\r\n\r\n  def test_association_ids_exists_for_habtm\r\n    assert_respond_to Post.new, :tag_ids\r\n    assert_respond_to Post.new, :tag_ids=\r\n  end\r\nend\r\n```\r\n\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/36512/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 295007,
        "label_ids": [
            107191,
            41328116
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2439745063,
        "number": 52463,
        "title": "StrongParameters default approach prone to 500: Recommended approach?",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-07-31T10:51:03Z",
        "updated_at": "2024-09-07T22:38:42Z",
        "closed_at": "2024-09-07T22:38:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In the [Rails documentation](https://guides.rubyonrails.org/action_controller_overview.html#strong-parameters), there is a recurring pattern of `params.require(:something).permit(:some, :other, :stuff)` to \"fetch\" a nested `ActionController::Parameters` with `require`, then `permit`ting its content.\r\nTo me, this suggests, that `require` ensures it returns a `ActionController::Parameters`, which it doesn't, as it can return arbitrary non-blank or `false` values.\r\nWith a little bit of parameter manipulation, it is possible to produce a 500 by making Rails call `permit` on, say, an instance of String.\r\nIt baffles me that [the docs](https://guides.rubyonrails.org/action_controller_overview.html#outside-the-scope-of-strong-parameters) state, while not being a silver bullet, StrongParameters is supposed to cover the most common use cases, and yet, it fails at making arguably the most common use case safe against 500.\r\n\r\n\r\nTo guard against this, one can `params.permit(user: [:name, :age]).require(:user)`, however, once in a nested context, where you have more parameters, f.e. `:id` of a parent record, you always have to explicitly permit them as well, like so `params.permit(:id, user: [:name, :age]).require(:user)` or else a log message / exception will occurr, depending on configuration of `action_on_unpermitted_parameters`.\r\nThe `permit`, then `require` approach is clumsy, smelly and un-rails-y to me, so I use the following Initializer to address this problem:\r\n\r\n```\r\n# config/initializers/action_controller_parameters.rb\r\nmodule ActionController\r\n  class BadParameterNesting < KeyError\r\n    attr_reader :key\r\n\r\n    def initialize(key)\r\n      @key = key\r\n      super(\"param must contain nested params, but doesn't: #{key}\")\r\n    end\r\n  end\r\n\r\n  class Parameters\r\n    # like fetch but raises if value is no ActionController::Parameters\r\n    def nested(key, *args, &block)\r\n      value = fetch(key, *args, &block)\r\n      raise BadParameterNesting.new(key) unless value.is_a?(self.class)\r\n\r\n      return value\r\n    end\r\n  end\r\nend\r\n\r\nActionDispatch::ExceptionWrapper.rescue_responses.merge!(\r\n  \"ActionController::BadParameterNesting\" => :bad_request\r\n)\r\n\r\n```\r\n\r\nIs there something I am missing or is a monkey-patch like this the only way to make the most common use case of StrongParameters bulletproof against 500?\r\nThis is a problem for `params.require(...).permit(...)` and `params.fetch(:x, {}).permit(...)`, which are both solved by `params.nested(...).permit(...)`.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52463/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 22212608,
        "closed_by_id": 2741,
        "label_ids": [
            41328116
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2510347627,
        "number": 52818,
        "title": "Issue with new rails app -> .env.erb file",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-06T12:42:04Z",
        "updated_at": "2024-09-07T22:27:48Z",
        "closed_at": "2024-09-07T22:27:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nrun `rails new testapplication --main --devcontainer -j esbuild -c tailwind`\r\n\r\nThis generates a `.env.erb` file with the following content in the root directory\r\n\r\n```rb\r\n<%# This env template should lookup values from a password store or from ENV -%>\r\n# Generated by kamal envify from .env.erb\r\nKAMAL_REGISTRY_PASSWORD=<%= ENV[\"KAMAL_REGISTRY_PASSWORD\"] %>\r\nRAILS_MASTER_KEY=<%= File.read(\"config/master.key\") %>\r\n# GITHUB_TOKEN=<%#= `gh config get -h github.com oauth_token`.strip %>\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt should generate an `.erb` file instead - and not the template\r\n\r\n### Actual behavior\r\nIt actually generates the template file (see above)\r\n\r\n### System configuration\r\n**Rails version**: 8.0.0.alpha\r\n\r\n**Ruby version**: 3.2.1\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52818/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 9431350,
        "closed_by_id": 2741,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2511552738,
        "number": 52828,
        "title": "Deprecate `unsigned_float` and `unsigned_decimal` short-hand column methods",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-07T09:01:57Z",
        "updated_at": "2024-09-07T18:05:21Z",
        "closed_at": "2024-09-07T18:05:16Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "As of MySQL 8.0.17, the UNSIGNED attribute is deprecated for columns of type FLOAT, DOUBLE, and DECIMAL. Consider using a simple CHECK constraint instead for such columns.\r\n\r\nhttps://dev.mysql.com/doc/refman/8.0/en/numeric-type-syntax.html\r\n\r\nJust in case existing `schema.rb` is still valid since the schema dumper dumps un unsigned attribute as `unsigned: true` option.\r\n\r\nhttps://github.com/rails/rails/blob/2ae883cc162446ae8ce602c2aa0d08a3ca15c917/activerecord/test/cases/adapters/abstract_mysql_adapter/unsigned_type_test.rb#L61-L67\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52828/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 12642,
        "closed_by_id": 12642,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52828.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52828.patch",
        "pull_request_merged_at": "2024-09-07T18:05:16Z"
    },
    {
        "id": 2246557848,
        "number": 51579,
        "title": "Add support for `expires_in:` when using `render` with `collection:`",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2024-04-16T17:28:40Z",
        "updated_at": "2024-09-07T17:56:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nWhen using the following code you'd expect that you can pass `expires_in` as you can with rendering individual partials.\r\n\r\n```html+erb\r\n<%= render(collection: @posts, partial: 'post', cached: true, expires_in: 1.hour) %>\r\n```\r\n\r\n### Detail\r\n\r\n- Pass `expires_in` to `write_multi` so the cache key is written with the expiration.\r\n- Added tests.\r\n- Added documentation.\r\n\r\n### Checklist\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51579/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 622516,
        "label_ids": [
            150377,
            3666649
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 2,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51579.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51579.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2280329272,
        "number": 51743,
        "title": "Fix select helper with block returning non-string",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-05-06T08:26:38Z",
        "updated_at": "2024-09-07T15:31:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "As suggested by the docs for [FormOptionsHelper#select][1], the helper can be called with a block to customize option tag attributes:\r\n\r\n    select(report, :campaign_ids) do\r\n      available_campaigns.each do |c|\r\n        tag.option(c.name, value: c.id, data: { tags: c.tags.to_json })\r\n      end\r\n    end\r\n\r\nPrior to this commit, a NoMethodError error would be raised when available_campaigns in the above example was the empty array. This happened because the block passed to select would return a non-string value (the empty array) causing the call to capture in Helpers::Tags::Select#initialize to return nil:\r\n\r\n    def initialize(object_name, method_name, template_object, choices, options, html_options)\r\n      @choices = block_given? ? template_object.capture { yield || \"\" } : choices\r\n\r\nThis commit fixes this by moving the `|| \"\"` outside the block passed to capture.\r\n\r\n[1]: https://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-select",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51743/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 66666,
        "label_ids": [
            3666649
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51743.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51743.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 64759550,
        "number": 19548,
        "title": "Possible circular references bug",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2015-03-27T13:11:05Z",
        "updated_at": "2024-09-07T12:33:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "UPDATE: Code to reproduce the problem is in comments\n\nI have a Rails project with the following models:\n\n```\naccount\nusername\nuser\naddress\n```\n\nWith the following associations:\n\n```\nclass Account < ActiveRecord::Base\n  has_many :users, :inverse_of => :account\n  has_many :addresses, :inverse_of => :account\n  has_many :usernames, :inverse_of => :account\n\n  accepts_nested_attributes_for :usernames\n  accepts_nested_attributes_for :users\n  accepts_nested_attributes_for :addresses\nend\n\nclass Username < ActiveRecord::Base\n  belongs_to :account\nend\n\nclass User < ActiveRecord::Base\n  belongs_to :account\n  belongs_to :username\nend\n\nclass Address < ActiveRecord::Base\n  belongs_to :account\nend\n```\n\nI build a new account:\n\n```\naccount = Account.new(params.require(:account).permit(\n    usernames_attributes: [:username], \n    users_attributes: [:password, :firstname, :lastname, :phone, :mobile, :fax],\n    addresses_attributes: [:address_line_1, :address_line_2, :city, :zipcode, :state, :country]))\n```\n\nwhich validates and **saves** fine under Rails 4.2.0, however with Rails 4.2.1 I get the following error returned from PostgreSQL:\n\n```\n ActiveRecord::StatementInvalid:\n   PG::NotNullViolation: ERROR:  null value in column \"account_id\" violates not-null constraint\n```\n\nThe error is on the `username` model when trying to save it. Seems like the reference to the `account` is missing when saving.\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/19548/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 726682,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 679525836,
        "number": 40054,
        "title": "Numeric helper methods: Gigabytes (GB) vs Gibibytes (GiB)",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-08-15T08:26:11Z",
        "updated_at": "2024-09-07T11:17:59Z",
        "closed_at": "2020-08-25T08:30:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## TL;DR\r\n\r\nI'm looking for solution to update the byte size methods to support both decimal and binary. Ideally without breaking backward compatibility.\r\n\r\nPlease share your thoughts 🙏 \r\n\r\n## Context\r\n\r\nI work on the Algolia dashboard, a Rails 5.2 application.\r\n\r\nWe recently discovered a bug where we were displaying a wrong file size. We'd pull the data size in bytes from another API, convert it to gigabytes and found that the total size was off by a few gigabytes.\r\n\r\nThis is how I discovered the difference between Gigabytes GB and Gibibytes (GiB).\r\n\r\n## Gigabytes (GB) vs Gibibytes (GiB)\r\n\r\nI have discovered that the term Gigabytes is supposed to be used in decimal (base 10) while Gibibytes should be used to describe size in binary (base 2). \r\n\r\n* 1 GB = 1000³\r\n* 1 Gib = 1024³\r\n\r\nI realized that many people use the word gigabytes for size in binary. I have done it for years, I had no idea it was wrong.\r\n\r\n> In 1998 the International Electrotechnical Commission (IEC) published standards for binary prefixes, requiring that the gigabyte strictly denote 10003 bytes and gibibyte denote 10243 bytes. By the end of 2007, the IEC Standard had been adopted by the IEEE, EU, and NIST, and in 2009 it was incorporated in the International System of Quantities. Nevertheless, the term gigabyte continues to be widely used with the two different meanings.\r\n-- [Wikipedia](https://en.wikipedia.org/wiki/Gigabyte)\r\n\r\n<img width=\"352\" alt=\"Screenshot 2020-08-15 at 09 17 34\" src=\"https://user-images.githubusercontent.com/1525636/90308514-5d71c880-dee0-11ea-91b2-9628a40446d5.png\">\r\n\r\n\r\n## Update numeric methods\r\n\r\nRails provide helpers to get a file size easily like `4.kilobytes` or `1.gigabyte`. We could change this methods to return results in base 10 and introduce new `4.kibibytes` and `1.gibibytes`.\r\n\r\nThis is the first solution that comes to mind, but it has big drawbacks.\r\n\r\n| Method     | Size                  | Method     | Size                  |\r\n|------------|-----------------------|------------|-----------------------|\r\n| 1.kilobyte | 1_000                 | 1.kibibyte | 1_024                 |\r\n| 1.megabyte | 1_000_000             | 1.mebibyte | 1_048_576             |\r\n| 1.gigabyte | 1_000_000_000         | 1.gibibyte | 1_073_741_824         |\r\n| 1.terabyte | 1_000_000_000_000     | 1.tebibyte | 1_099_511_627_776     |\r\n| 1.petabyte | 1_000_000_000_000_000 | 1.pebibyte | 1_125_899_906_842_624 |\r\n\r\n### Reasons to do it\r\n\r\n1. I believe this would avoid bugs and **help people discovering the difference between the two**.\r\n2. Dividing by `1_000_000_000` in your code is not as clear as `1.gigabyte`. Expressiveness is what make Rails and Ruby such a joy to use.\r\n\r\n### Reasons not to\r\n\r\n1. It's a massive breaking change, all gems relying on those methods will start failing. Maintaining backward compatibility with earlier version will be **painful**.\r\n2. Main providers like [AWS S3 uses binary](https://forums.aws.amazon.com/thread.jspa?threadID=151161)\r\n2. Nobody cares about the difference \r\n \r\n \r\n## Alternative solutions\r\n\r\nFor backward compatibility, we added not methods in our apps prefixed with `actual_`.\r\n\r\n* 1.kilobytes = 1024\r\n* 1.actual_kilobytes = 1000\r\n\r\nAnother fix I can think of is to introduce methods like `millions`,  `thousands` and such so we can write `1.million.bytes`.\r\n\r\nGoing a big crazy here, we could also add simple `giga`, `mega`, or `kilo` to be able to write `2.mega.bytes` vs `2.megabutes`. I'm afraid this would be error-prone and confusing.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/40054/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 1525636,
        "closed_by_id": 1525636,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2491060544,
        "number": 52727,
        "title": "Eager loading with on same tables with different foreign keys",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-08-28T05:09:20Z",
        "updated_at": "2024-09-07T10:48:44Z",
        "closed_at": "2024-09-07T10:48:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :pages, force: true do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table :statuses, force: true do |t|\r\n    t.integer :page_id\r\n    t.integer :place_id\r\n  end\r\nend\r\n\r\nclass Page < ActiveRecord::Base\r\n  has_many :statuses\r\nend\r\n\r\nclass Status < ActiveRecord::Base\r\n  belongs_to :place, inverse_of: :statuses, foreign_key: 'place_id', class_name: 'Page', optional: true\r\n  belongs_to :page, optional: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    place = Page.create(name: 'place')\r\n    status = Status.create(page_id: nil, place_id: place.id)\r\n    result =  Status.includes(:place).select(:id, :page_id, :place_id).find(1)\r\n    assert_equal nil, result.page_id\r\n  end\r\nend\r\n```\r\nI have tables like:\r\nPage: page_id\r\nStatus: id, page_id, place_id\r\nAssociation in Status model:\r\n```ruby\r\n  belongs_to :place, inverse_of: :statuses, foreign_key: 'place_id', class_name: 'Page', optional: true\r\n  belongs_to :page, optional: true\r\n``` \r\nMy status record:\r\n![image](https://github.com/user-attachments/assets/3b96ba0e-9aaa-4b57-bffd-299f344a74d5)\r\nI have to get statuses with page and place, but \"includes\" does not work as I expect\r\nI have demo code below:\r\n```ruby\r\n status = Status.includes(:place).select(:id, :page_id, :place_id).find(113023752177116469)\r\n``` \r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nStatus information exactly like in DB\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nthe result I get:\r\n```ruby\r\n#<Status id: 113023752177116469, place_id: 108277159419224039, page_id: 108277159419224039>\r\n``` \r\nif I remove the includes, everything works fine\r\n```ruby\r\nstatus = Status.select(:id, :page_id, :place_id).find(113023752177116469)\r\n#<Status id: 113023752177116469, place_id: 108277159419224039, page_id: nil>\r\n``` \r\nCan anyone explain this for me, and a solution for this problem?\r\nThanks a lot\r\n### System configuration\r\n**Rails version**: 7.0.8.1\r\n\r\n**Ruby version**: 3.0.3p157\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52727/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 83687582,
        "closed_by_id": 5657035,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2511252360,
        "number": 52825,
        "title": "Fix rate limiting for `ActionController::API` controllers",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-06T22:07:21Z",
        "updated_at": "2024-09-07T08:47:35Z",
        "closed_at": "2024-09-07T08:47:35Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #52823.\r\n\r\nNot sure if worth adding a test case to check if the controller responds to that method.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52825/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 12642,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52825.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52825.patch",
        "pull_request_merged_at": "2024-09-07T08:47:35Z"
    },
    {
        "id": 2014363412,
        "number": 50198,
        "title": "Fix duplicate `DEFERRABLE` directive added for foreign keys in PostgreSQL and SQLite",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-28T12:47:26Z",
        "updated_at": "2024-09-07T06:20:01Z",
        "closed_at": "2024-09-07T06:20:00Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "When adding a foreign key with a `:deferrable` option, a duplicate `\"DEFERRABLE\"` directive is generated. \r\nSomething like:\r\n```sql\r\nALTER TABLE \"authors\" ADD CONSTRAINT \"fk_rails_94423a17a3\"\r\nFOREIGN KEY (\"author_address_id\")\r\n  REFERENCES \"author_addresses\" (\"id\")\r\n DEFERRABLE INITIALLY IMMEDIATE DEFERRABLE INITIALLY IMMEDIATE\r\n```\r\n\r\nThis PR fixes that.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50198/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 12642,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50198.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50198.patch",
        "pull_request_merged_at": "2024-09-07T06:20:00Z"
    },
    {
        "id": 2504159782,
        "number": 52792,
        "title": "Change assign_attributes to assign the association's _id first. Fixes…",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11472308,
            "number": 90,
            "title": "7.2.2",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 5,
            "state": "open",
            "created_at": "2024-08-21T21:24:04Z",
            "updated_at": "2024-09-20T18:52:26Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 2,
        "created_at": "2024-09-04T02:28:54Z",
        "updated_at": "2024-09-07T05:46:09Z",
        "closed_at": "2024-09-07T05:35:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "[Fix #52791]\r\n\r\n### Motivation / Background\r\n\r\nAddresses the use case where if an association's _id is later in the params than the association's _attributes, the nested attributes will not be applied.\r\n\r\nThis Pull Request has been created because the upgrade from 7.1.3.4. to 7.2.1 caused tests in our application to fail. We were assigning the association_id after the association_attributes in our parameters, and due to the order it no longer updated existing models.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52792/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 309995,
        "closed_by_id": 12642,
        "label_ids": [
            107191,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52792.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52792.patch",
        "pull_request_merged_at": "2024-09-07T05:35:22Z"
    },
    {
        "id": 2504151720,
        "number": 52791,
        "title": "Assigning attributes for nested association raises if association_id is not specified first",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-04T02:20:40Z",
        "updated_at": "2024-09-07T05:35:23Z",
        "closed_at": "2024-09-07T05:35:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nIn rails 7.1.3.4 specifying the attributes for a nested association would succeed even when the nested association's id was specified after the attributes. That changed with this commit [ded026b] [#49678)\r\n\r\nIn rails 7.2.0, This broke behavior in our app where an attributes hash was being set on a has_one before the has_one id was set.\r\nI've recreated the order dependency below, and I have a PR forthcoming.\r\n\r\nChanging the assign_attributes to first assign all attributes ending with _id prior to assigning other attributes fixes this. A PR with this change is coming with this.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", \"7.2.1\"\r\n  # gem \"rails\", \"7.1.3.4\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :names, force: true do |t|\r\n    t.string :first_name\r\n  end\r\n\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :authors, force: true do |t|\r\n    t.references :name\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :authors\r\n  accepts_nested_attributes_for :authors\r\nend\r\n\r\nclass Author < ActiveRecord::Base\r\n  belongs_to :post, optional: true\r\n  belongs_to :name, optional: true\r\n  accepts_nested_attributes_for :name\r\nend\r\n\r\nclass Name < ActiveRecord::Base\r\n  has_one :author\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_accepts_nested_attributes_with_id_first\r\n    name = Name.create!(first_name: \"John\")\r\n    post = Post.create!\r\n    attrs = {\r\n      authors_attributes: [{\r\n        name_id: name.id,\r\n        name_attributes: {\r\n          id: name.id,\r\n          first_name: \"Jim\"\r\n        }\r\n      }]\r\n    }\r\n\r\n    post.attributes = attrs\r\n    post.save!\r\n\r\n    assert_equal \"Jim\", post.authors.first.name.first_name\r\n    assert_equal name.id, post.authors.first.name.id\r\n  end\r\n\r\n  def test_accepts_nested_attributes_with_id_last\r\n    name = Name.create!(first_name: \"John\")\r\n    post = Post.create!\r\n    attrs = {\r\n      authors_attributes: [{\r\n        name_attributes: {\r\n          id: name.id,\r\n          first_name: \"Jim\"\r\n        },\r\n        name_id: name.id\r\n      }]\r\n    }\r\n\r\n    post.attributes = attrs\r\n    post.save!\r\n\r\n    assert_equal \"Jim\", post.authors.first.name.first_name\r\n    assert_equal name.id, post.authors.first.name.id\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\nExpected that the model saves with no problems.\r\n\r\n### Actual behavior\r\nRecieved an RecordNotFound raised\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52791/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 309995,
        "closed_by_id": 12642,
        "label_ids": [
            41328116
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2504915906,
        "number": 52797,
        "title": "Fix updating nested attributes for models with composite primary keys",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-04T10:21:20Z",
        "updated_at": "2024-09-07T05:27:24Z",
        "closed_at": "2024-09-07T05:27:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #52785 (see the detailed description there).",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52797/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 12642,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52797.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52797.patch",
        "pull_request_merged_at": "2024-09-07T05:27:23Z"
    },
    {
        "id": 2503191360,
        "number": 52785,
        "title": "Composite keys given as array of strings break nested_attributes update",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-03T15:33:35Z",
        "updated_at": "2024-09-07T05:27:24Z",
        "closed_at": "2024-09-07T05:27:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to Reproduce\r\n\r\nRefer to the example in the guidelines: [Composite Primary Key Migrations](https://edgeguides.rubyonrails.org/active_record_composite_primary_keys.html#composite-primary-key-migrations).\r\n\r\nSuppose we have a form that updates a store with a list of products and nested fields for the products (since `sku` and `description` depend on the store). We would need to render a hidden input for each product's `id`, containing an array with the `store_id` (integer) and `sku` (string). When processing these values in a controller after permitting `products_attributes` params, we receive an array of strings since all parameter values are passed as strings.\r\n\r\nIf we examine the code executed during `Store.update(store_params)`, we see a simple string comparison used to identify objects within the nested attributes hash or array.\r\n\r\nSee the code here: [Rails Nested Attributes](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/nested_attributes.rb#L527)\r\n\r\n### Actual Behavior\r\n\r\nIn this example, the comparison fails because it tries to match `'[3, \"XYZ12345\"]'` with `'[\"3\", \"XYZ12345\"]'`. This causes existing objects not to be correctly identified, leading to record not found exceptions although the record is fetched correctly from the database. \r\n\r\n### Expected Behavior\r\n\r\nAlthough the application code should ideally convert IDs to the correct types before update or create operations, this behavior is inconsistent with other Active Record find operations involving IDs, including composite keys. For example, `Product.find([\"3\", \"XYZ12345\"])` would work correctly. It would be more robust if Active Record checked each part of composite keys separately and converted each element to a string (`to_s`) before comparison.\r\n\r\n## Side note\r\n\r\nThe `fields_for` view helper renders a single hidden input for the ID, containing a space-separated list of elements for the composite key. Instead, it should render a separate input for each element of the ID using array `[]` brackets. This would pass the composite key as an array, which is necessary for `nested_attributes` with composite keys, rather than as a string.\r\n\r\n### System configuration\r\n**Rails version**:\r\nEDGE (8.0.0)\r\n\r\n**Ruby version**:\r\n3.3.4",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52785/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 1646184,
        "closed_by_id": 12642,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2510297494,
        "number": 52817,
        "title": "Drop MySQL 5.5 support",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-06T12:14:11Z",
        "updated_at": "2024-09-07T05:10:23Z",
        "closed_at": "2024-09-07T05:10:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "MySQL 5.5 is the only version that does not support datetime with precision, which we have supported in core.\r\nMySQL 5.5 is already EOL in December 2018, so let's drop this support and clean up the code for it.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52817/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 12642,
        "closed_by_id": 12642,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 4,
        "reactions_plus1": 4,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52817.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52817.patch",
        "pull_request_merged_at": "2024-09-07T05:10:19Z"
    },
    {
        "id": 2506834297,
        "number": 52805,
        "title": "system testing: disable chrome's search engine choice modal",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-05T05:53:37Z",
        "updated_at": "2024-09-06T21:22:17Z",
        "closed_at": "2024-09-06T21:22:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nstarting newer chrome with a fresh profile (like it happens with selenium) shows a search engine choice screen which will break any tests. \r\n\r\n### Detail\r\n\r\npassing `--disable-search-engine-choice-screen` to chrome options will disable the screen.\r\n\r\n### Additional information\r\n\r\nsee SeleniumHQ/selenium#14431\r\n\r\n### Checklist\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52805/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 201135,
        "closed_by_id": 1080678,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 3,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52805.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52805.patch",
        "pull_request_merged_at": "2024-09-06T21:22:14Z"
    },
    {
        "id": 1187020906,
        "number": 44806,
        "title": "Through associations ignore the joins option of the through association if merge is used",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-03-30T21:38:12Z",
        "updated_at": "2024-09-06T21:10:18Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "The example provided fails in a `has_many ... through: ...` association but `has_one ... through: ...` associations have the same behaviour.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\n\r\n  create_table :users, force: true\r\n\r\n  create_table :sources, force: true do |t|\r\n    t.boolean :online, null: false, default: true\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.references :post\r\n    t.references :user\r\n    t.references :source\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n  has_many :online_comments, ->{ joins(:source).merge(Source.where(online: true)) }, class_name: \"Comment\"\r\n  has_many :online_users, through: :online_comments, source: :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass Source < ActiveRecord::Base\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :source\r\n  belongs_to :post\r\n  belongs_to :user\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association\r\n    Comment.create!(post: Post.create!, source: Source.create!(online: true), user: User.create!)\r\n    post = Post.first!\r\n    assert_equal post.online_comments, [Comment.first!]\r\n    assert_equal post.online_users, [User.first!] # Fails with `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: sources.online: SELECT \"users\".* FROM \"users\" INNER JOIN \"comments\" ON \"users\".\"id\" = \"comments\".\"user_id\" WHERE \"comments\".\"post_id\" = ? AND \"sources\".\"online\" = ?`\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nWhen using the `has_many :online_users` association on `Post` in the example above, the `joins(:source)` from the `online_comments` association is expected to be part of the query.\r\n\r\n### Actual behavior\r\n\r\nThe `joins(:source)` option gets removed from the final query causing it to fail.\r\nIf `:online_comments` is changed to `has_many :online_comments, ->{ joins(:source).where(sources: {online: true}) }, class_name: \"Comment\"`, the test pass. That was reported and and fixed in https://github.com/rails/rails/pull/39390.\r\nA similar issue was fixed in https://github.com/rails/rails/pull/41029.\r\n\r\n### System configuration\r\n\r\nTested on:\r\n6.1.3.1, ruby 2.6.6\r\nmain branch, ruby 2.7.3\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/44806/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 56755880,
        "label_ids": [
            107191,
            41328116
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 1
    },
    {
        "id": 2511120916,
        "number": 52824,
        "title": "Fix `.left_outer_joins` when multiple associations have the same child.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-06T20:06:56Z",
        "updated_at": "2024-09-06T20:49:13Z",
        "closed_at": "2024-09-06T20:49:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\nFixes #41498\r\n\r\nThis Pull Request has been created to fix an issue where `.left_outer_joins` used with multiple associations that have he same child association but different parents does not join all parents.\r\n\r\n### Detail\r\n\r\nThis Pull Request fixes #41498.\r\n\r\nShout out to @oneiros for providing the solution [here](https://github.com/rails/rails/issues/41498#issuecomment-1768405176).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52824/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 25485509,
        "closed_by_id": 25485509,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52824.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52824.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 347426130,
        "number": 33525,
        "title": "has_many through associations ignore the joins option of the through association",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 27,
        "created_at": "2018-08-03T14:48:31Z",
        "updated_at": "2024-09-06T20:42:58Z",
        "closed_at": "2020-05-23T17:20:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\n\r\n  create_table :users, force: true\r\n\r\n  create_table :sources, force: true do |t|\r\n    t.boolean :online, null: false, default: true\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.references :post\r\n    t.references :user\r\n    t.references :source\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n  has_many :online_comments, ->{ joins(:source).where(sources: {online: true}) }, class_name: \"Comment\"\r\n  has_many :online_users, through: :online_comments, source: :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass Source < ActiveRecord::Base\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :source\r\n  belongs_to :post\r\n  belongs_to :user\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association\r\n    Comment.create!(post: Post.create!, source: Source.create!(online: true), user: User.create!)\r\n    post = Post.first!\r\n    assert_equal post.online_comments, [Comment.first!]\r\n    assert_equal post.online_users, [User.first!] # Fails with `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: sources.online: SELECT \"users\".* FROM \"users\" INNER JOIN \"comments\" ON \"users\".\"id\" = \"comments\".\"user_id\" WHERE \"comments\".\"post_id\" = ? AND \"sources\".\"online\" = ?`\r\n  end\r\nend\r\n```\r\n(Guidelines for creating a bug report are [available\r\nhere](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\n\r\nWhen using the `has_many :online_users` association on `Post` in the example above you'd expect the `joins(:source)` from the `online_comments` association to be there in the query (just like the conditionals set there).\r\n\r\n### Actual behavior\r\n\r\nThe `joins(:source)` option gets removed from the final query causing it to fail (since the conditional references that table).\r\n\r\nThis was also reported in https://github.com/rails/rails/issues/22538 and closed by \r\nhttps://github.com/rails/rails/pull/29413 but that change didn't actually fix it. If you run the script from that issue you'll notice that it still fails.\r\n\r\n### System configuration\r\n\r\nThis happens on Rails 5.1.6, 5.2.0, 5.2.1.rc1, and the master branch. Only tested with Ruby 2.5.1.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/33525/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 76424,
        "closed_by_id": 12642,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2056759401,
        "number": 50449,
        "title": "Run GC out-of-band by default",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 13,
        "created_at": "2023-12-26T23:16:01Z",
        "updated_at": "2024-09-06T20:13:15Z",
        "closed_at": "2024-09-06T20:13:14Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Ruby's GC can be a bit of a crude beast, and from the perspective of an application, it's awakened seemingly at random. When it runs, it smites that request with a serious penalty, and seemingly through no fault of its own. We've seen dramatic improvement in our P99 and P100 on HEY by running OOB GC, following @byroot's [excellent deep-div](https://shopify.engineering/adventures-in-garbage-collection)e into the Shopify OOB GC work.\r\n\r\nSo let's enable this great trick by default, and in case we need a few simple levers to control it, let's make them few and simple.\r\n\r\nWe can use https://www.rubydoc.info/gems/puma/Puma%2FDSL:out_of_band.\r\n\r\ncc @byroot",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50449/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            149514554
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2222441259,
        "number": 51474,
        "title": "Allow to register transaction callbacks outside of a record",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-04-03T09:43:57Z",
        "updated_at": "2024-09-06T19:37:17Z",
        "closed_at": "2024-04-03T12:37:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Ref: https://github.com/rails/rails/pull/26103\r\nRef: https://github.com/rails/rails/pull/51426\r\n\r\nA fairly common mistake with Rails is to enqueue a job from inside a transaction, and a record as argumemnt, which then lead to a RecordNotFound error when picked up by the queue.\r\n\r\nThis is even one of the arguments advanced for job runners backed by the database such as `solid_queue`, `delayed_job` or `good_job`. But relying on this is undesirable iin my opinion as it makes the Active Job abstraction leaky, and if in the future you need to migrate to another backend or even just move the queue to a separate database, you may experience a lot of race conditions of the sort.\r\n\r\nBut more generally, being able to defer work to after the current transaction has been a missing feature of Active Record. Right now the only way to do it is from a model callback, and this forces moving things in Active Record models that sometimes are better done elsewhere. Even as a self-proclaimed \"service object skeptic\", I often wanted this capability over the last decade, and I'm sure it got asked or desired by many more people.\r\n\r\nAlso there's some 3rd party gems adding this capability using monkey patches. It's not a reason to upstream the capability, but it's a proof that there is demand for it.\r\n\r\nImplementation wise, this proof of concept shows that it's not really hard to implement, even with nested multi-db transactions support.\r\n\r\nOne open question is whether we should also expose a callback for `after_rollback` (and possible after either state). On paper it makes sense, but I kinda fail to see a good use case for it.\r\n\r\ncc @matthewd ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51474/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19192189,
        "closed_by_id": 44640,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 24,
        "reactions_plus1": 6,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 3,
        "reactions_confused": 0,
        "reactions_heart": 11,
        "reactions_rocket": 4,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51474.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51474.patch",
        "pull_request_merged_at": "2024-04-03T12:37:34Z"
    },
    {
        "id": 2506514345,
        "number": 52802,
        "title": "Use implication for skip_active_record/skip_solid",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-05T00:13:08Z",
        "updated_at": "2024-09-06T18:30:15Z",
        "closed_at": "2024-09-06T18:23:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "[Generator options should default to nil for unset](https://github.com/rails/rails/pull/52802/commits/24c9c4eb4432f2bdd42da7e7a7d579ea7a1909b3)\r\n\r\nThe generator options are effectively tri-state, with true/false meaning\r\nset by the user and nil being unset. However, some of these options were\r\ndefaulting to false, meaning they were being treated as set to false by\r\nthe user.\r\n\r\nThis commit fixes this issue by setting the values to nil by default\r\ninstead of false so that they are properly \"unset\" by user.\r\n\r\n---\r\n\r\n[Use implication for skip_active_record/skip_solid](https://github.com/rails/rails/pull/52802/commits/766dc27be1d8367f9c8a2c315c67e3d1d416553b)\r\n\r\nWhen skip_solid was added, it used the \"old style\" option implication\r\nwhere skip_*? methods delegate to all the options that should be\r\nimplied. This has a few downsides such as making it unclear to users\r\nwhen conflicting options may be specified (for example,\r\nskip_active_record and no_skip_solid).\r\n\r\nThis commit changes the skip_solid option to use the new style of\r\nimplication so that error messages are better and the predicate method\r\nis simpler.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52802/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6014046,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52802.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52802.patch",
        "pull_request_merged_at": "2024-09-06T18:23:19Z"
    },
    {
        "id": 2493077617,
        "number": 52738,
        "title": "Replace deprecated PWA tag with newer one",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-08-28T22:16:49Z",
        "updated_at": "2024-09-06T18:27:58Z",
        "closed_at": "2024-09-06T18:26:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "The preferred web app tag has changed and Chrome is reporting the old one as deprecated.\r\n\r\n![Screenshot 2024-08-28 at 3 11 23 PM](https://github.com/user-attachments/assets/942ed7ed-3c50-4407-b3e0-64f752f421a5)\r\n\r\nThis PR updates the template to use the newer tag based on the current PWA standard.\r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52738/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 92010,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52738.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52738.patch",
        "pull_request_merged_at": "2024-09-06T18:26:16Z"
    },
    {
        "id": 2120588332,
        "number": 50981,
        "title": "allow_browser may prevent your site from being crawled",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-02-06T11:48:14Z",
        "updated_at": "2024-09-06T16:41:12Z",
        "closed_at": "2024-02-10T01:36:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "https://github.com/rails/rails/pull/50505 was merged a few weeks ago which blocks user agents that don't match a specific set of browser versions. Based on the PR it looks like this is the default since it's included in the generator's output.\r\n\r\nThis runs the risk of preventing your site from being crawled by various search engines. Google has a [number of specific crawlers](https://developers.google.com/search/docs/crawling-indexing/overview-google-crawlers) that won't match the agents supplied in that PR (images, videos, etc.).\r\n\r\nIt will also prevent anyone from accessing your site with `curl` or other popular HTTP clients unless they manually define an agent that mimics a modern browser. This could be an undesired effect as a default, especially without documentation stating that.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50981/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 813219,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 5,
        "reactions_plus1": 5,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2510246944,
        "number": 52816,
        "title": "Update filter_parameters default in configuring guide",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-06T11:45:19Z",
        "updated_at": "2024-09-06T16:09:50Z",
        "closed_at": "2024-09-06T16:09:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nFollow up to https://github.com/rails/rails/pull/52413\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52816/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 71697384,
        "closed_by_id": 6014046,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52816.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52816.patch",
        "pull_request_merged_at": "2024-09-06T16:09:38Z"
    },
    {
        "id": 2510499283,
        "number": 52819,
        "title": "Inherit properties from the previous encryption context",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-06T13:54:37Z",
        "updated_at": "2024-09-06T15:34:35Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nRails supports nested encryption contexts, allowing context switching. When an inner context is closed, the properties of the previous context are restored. However, the properties of the previous context are not inherited by the inner context, which can be surprising.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the behavior of `with_encryption_context` to inherit the properties of the previous context. This change allows composable contexts, where each context can add or override properties of the previous context.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\nThis behavior is similar to other nestable blocks. For example, [`Object#with_options`](https://api.rubyonrails.org/classes/Object.html#method-i-with_options), [`Object#with`](https://api.rubyonrails.org/classes/Object.html#method-i-with), and [`ActiveRecord::Relation#scoping`](https://api.rubyonrails.org/classes/ActiveRecord/Relation.html#method-i-scoping) inherit options from the outer blocks.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52819/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 761956,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52819.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52819.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2509586432,
        "number": 52813,
        "title": "Fix Solid Queue changelog db info",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-06T05:59:28Z",
        "updated_at": "2024-09-06T14:33:57Z",
        "closed_at": "2024-09-06T13:29:26Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "[ci skip]\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52813/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 10766,
        "closed_by_id": 44640,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52813.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52813.patch",
        "pull_request_merged_at": "2024-09-06T13:29:25Z"
    },
    {
        "id": 2507465188,
        "number": 52806,
        "title": "Allow async queries in transactional fixtures",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-05T11:01:45Z",
        "updated_at": "2024-09-06T14:02:52Z",
        "closed_at": "2024-09-06T13:25:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This is possible since https://github.com/rails/rails/pull/50999. Now in transactional fixtures, the other threads do checkout the same connection as the same thread, it's just synchronized around performing the query.\r\n\r\nThis allow to properly test async queries without having to disable transactional fixtures.\r\n\r\nFYI: @hcmaATshopify ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52806/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19192189,
        "closed_by_id": 44640,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52806.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52806.patch",
        "pull_request_merged_at": "2024-09-06T13:25:16Z"
    },
    {
        "id": 2510054500,
        "number": 52815,
        "title": "[7-2] Add `benchmark` to activesupport gemspec",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-06T10:00:20Z",
        "updated_at": "2024-09-06T13:36:31Z",
        "closed_at": "2024-09-06T13:27:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nRuby plans to bundle this gem, which means requiring it will emit a warning on Ruby 3.4: https://github.com/ruby/ruby/pull/11560\r\n\r\nIt is part of a core extension here: https://github.com/rails/rails/blob/v7.2.1/activesupport/lib/active_support/core_ext/benchmark.rb\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52815/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 14981592,
        "closed_by_id": 44640,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52815.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52815.patch",
        "pull_request_merged_at": "2024-09-06T13:27:43Z"
    },
    {
        "id": 2509527592,
        "number": 52812,
        "title": "Bring back deleted middleware test",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-06T05:07:47Z",
        "updated_at": "2024-09-06T13:02:40Z",
        "closed_at": "2024-09-06T13:02:39Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fix: https://github.com/rails/rails/pull/52789/files#r1746377061",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52812/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 509837,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52812.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52812.patch",
        "pull_request_merged_at": "2024-09-06T13:02:39Z"
    },
    {
        "id": 2508855956,
        "number": 52811,
        "title": "non-rails project now throws \"uninitialized constant #<Class:ActiveSupport::Delegation>::Inflector\"",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-05T22:06:06Z",
        "updated_at": "2024-09-06T12:43:54Z",
        "closed_at": "2024-09-06T12:43:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n* create a gem\r\n* add `s.add_development_dependency 'factory_bot'` to gemspec (version 6.4.6 is installed for me)\r\n* add spec_helper file with `require 'factory_bot'\r\n\r\n### Expected behavior\r\nit should work\r\n\r\n### Actual behavior\r\n```\r\nAn error occurred while loading ./spec/lib/my_gem/my_spec.rb.\r\nFailure/Error: require 'factory_bot'\r\n\r\nNameError:\r\n  uninitialized constant #<Class:ActiveSupport::Delegation>::Inflector\r\n# ./spec/spec_helper.rb:5:in `<top (required)>'\r\n```\r\n\r\n### System configuration\r\n**Ruby version**:\r\n3.3.0",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52811/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 28946,
        "closed_by_id": 5657035,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 696561344,
        "number": 40207,
        "title": "ActiveRecord using extended query protocol even when prepared_statements is false",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2020-09-09T08:01:57Z",
        "updated_at": "2024-09-06T12:10:46Z",
        "closed_at": "2021-04-11T19:32:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nIn attempting to migrate from pgbouncer to AWS hosted RDS Proxy, we noticed that many/all of our connections to the proxy were pinned(https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-proxy.html#rds-proxy-pinning) even though `prepared_statements` is set to `false` in database.yml\r\n\r\nTo recreate, I made a fresh rails install\r\n```\r\nrails new pgtest -d postgresql\r\n```\r\nwith a database.yml file as such\r\n```\r\ndevelopment:\r\n  <<: *default\r\n  url: postgres://localhost:5432/pgdemo_development\r\n  prepared_statements: false\r\n```\r\nand created a `Post` model with some columns and created a row via console\r\n```\r\nPost.create(first_name: 'asdf', last_name: 'asdf', message: 'asdf')\r\n```\r\nand examine the wireshark output to the server\r\n\r\n### Expected behavior\r\nWhen `prepared_statements=false`, the SQL query sent to the PostgreSQL server should be using the simple query protocol.\r\n\r\n```\r\nFrame 9: 275 bytes on wire (2200 bits), 275 bytes captured (2200 bits) on interface lo0, id 0\r\nNull/Loopback\r\nInternet Protocol Version 6, Src: ::1, Dst: ::1\r\nTransmission Control Protocol, Src Port: 63343, Dst Port: 5432, Seq: 12, Ack: 18, Len: 199\r\nPostgreSQL\r\n    Type: Simple query\r\n    Length: 198\r\n    Query: INSERT INTO \"posts\" (\"first_name\", \"last_name\", \"message\", \"created_at\", \"updated_at\") VALUES ('asdf', 'asdf', 'asdf', '2020-09-09 07:57:45.392053', '2020-09-09 07:57:45.392053') RETURNING \"id\"\r\n\r\n```\r\n### Actual behavior\r\nThe extended query protocol is used\r\n```\r\nFrame 5: 315 bytes on wire (2520 bits), 315 bytes captured (2520 bits) on interface lo0, id 0\r\nNull/Loopback\r\nInternet Protocol Version 6, Src: ::1, Dst: ::1\r\nTransmission Control Protocol, Src Port: 63087, Dst Port: 5432, Seq: 12, Ack: 18, Len: 239\r\nPostgreSQL\r\n    Type: Parse\r\n    Length: 201\r\n    Statement: \r\n    Query: INSERT INTO \"posts\" (\"first_name\", \"last_name\", \"message\", \"created_at\", \"updated_at\") VALUES ('asdf', 'asdf', 'asdf', '2020-09-09 07:42:50.441317', '2020-09-09 07:42:50.441317') RETURNING \"id\"\r\n    Parameters: 0\r\nPostgreSQL\r\n    Type: Bind\r\n    Length: 14\r\n    Portal: \r\n    Statement: \r\n    Parameter formats: 0\r\n    Parameter values: 0\r\n    Result formats: 1\r\nPostgreSQL\r\n    Type: Describe\r\n    Length: 6\r\n    Portal: \r\nPostgreSQL\r\n    Type: Execute\r\n    Length: 9\r\n    Portal: \r\n    Returns: all rows\r\nPostgreSQL\r\n    Type: Sync\r\n    Length: 4\r\n```\r\n\r\n### Investigation\r\nIn https://github.com/rails/rails/blob/6-0-stable/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L675 the `exec_params` method on the connection object is being called when `prepared_statements` is false, and that looks like it's being defined at the pg gem level\r\nhttps://github.com/ged/ruby-pg/blob/9cf9d8aabd4a1a95ef2bc7c61054fc2cc663072b/ext/pg_connection.c#L1298\r\n\r\nNoticing that in that function is some code that preserves the simple query protocol functionality (the pgconn_exec function)\r\nhttps://github.com/ged/ruby-pg/blob/9cf9d8aabd4a1a95ef2bc7c61054fc2cc663072b/ext/pg_connection.c#L1312-L1319\r\n\r\nThis brings us back to `exec_params`, where it looks like the variable `type_casted_binds` is being set as an empty array. Since it's being set as an empty array, it is never nil and the function for the simple query protocol is never called. The helper method `type_casted_binds(binds)` looks to always return an array.\r\n\r\nI'm not sure if this was on purpose, but it seems to be to be unintentional. I have a small fix for it, and that's how i got the query in the `expected behavior` section\r\n\r\n### System configuration\r\n**Rails version**: 6.0.3.2\r\n\r\n**Ruby version**: 2.6.5\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/40207/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 6139848,
        "closed_by_id": 28418009,
        "label_ids": [
            107191,
            12449438,
            70310659
        ],
        "reactions_total_count": 9,
        "reactions_plus1": 9,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2509815614,
        "number": 52814,
        "title": "Use `deliver_now!` instead of `deliver_now`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-06T08:17:36Z",
        "updated_at": "2024-09-06T09:31:09Z",
        "closed_at": "2024-09-06T09:28:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThe description of the test did not match the actual method of execution.\r\n\r\n### Detail\r\n\r\n### Additional information\r\n\r\nThis has been the case since its implementation.\r\nhttps://github.com/rails/rails/commit/468d80640613a3817ea2e53b24b5f39ef92a57ac#diff-6ef9cd0210c13806628a30105d875ffefdf78852084d5db06007250ccae7dff0R39-R43\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52814/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39144575,
        "closed_by_id": 12642,
        "label_ids": [
            107188
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52814.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52814.patch",
        "pull_request_merged_at": "2024-09-06T09:28:33Z"
    },
    {
        "id": 2508852897,
        "number": 52810,
        "title": "Use only one batch to generate form selectors",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-05T22:04:50Z",
        "updated_at": "2024-09-06T09:29:54Z",
        "closed_at": "2024-09-06T06:19:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Related to https://github.com/rails/rails/pull/52470 cc @byroot \r\n\r\nThis commit fixes the generation of form helpers by using one CodeGenerator instance instead of 17\r\n\r\n<img width=\"1410\" alt=\"image\" src=\"https://github.com/user-attachments/assets/04e8067e-349e-4bbc-8dee-a2ac326d64d0\">\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis will allow to use the new `ActiveSupport::CodeGenerator#class_eval` method added and use the `@sources` array/buffer to only execute a single ruby `Module#class_eval` at the end.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52810/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1371733,
        "closed_by_id": 44640,
        "label_ids": [
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52810.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52810.patch",
        "pull_request_merged_at": "2024-09-06T06:19:18Z"
    },
    {
        "id": 2420262345,
        "number": 52371,
        "title": "Update TimeWithZone#inspect to match Ruby 1.9+ ISO 8601 format",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-07-19T23:20:08Z",
        "updated_at": "2024-09-06T08:46:23Z",
        "closed_at": "2024-09-05T22:45:52Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "This updates `TimeWithZone#inspect` to match the ISO 8601 style time which Ruby has used for `Time#inspect` since 1.9+  instead of the variant of rfc822. This makes TimeWithZone match Time's formatting except for the precision in the timestamp and including the zone's name.\r\n\r\nThis only impacts `TimeWithZone#inspect`, `TimeWithZone#to_s` had already been updated to use the new ISO 8601 style formatting. Because `#inspect` should just be used for presenting the time to developers, I don't think we need do go through a deprecation cycle for it.\r\n\r\nThat said I think this should target 8.0, not 7.2\r\n\r\n\r\n**Before**\r\n\r\n```\r\n> Time.zone.now\r\n=> Fri, 31 Dec 1999 19:00:00.000000000 EST -05:00\r\n```\r\n\r\n**After**\r\n\r\n```\r\n> Time.zone.now\r\n=> 1999-12-31 19:00:00.000000000 EST -05:00\r\n```\r\n\r\n\r\n---\r\n\r\nJust for curiosity, here is the history of how Ruby has formatted `Time#inspect` (unlike for `TimeWithZone`, `Time#inspect` is the same as `Time#to_s`)\r\n\r\n```\r\n$ docker run -e 'ALL_RUBY_SINCE=ruby-1.0' --rm rubylang/all-ruby ./all-ruby -e 'p Time.at(0).to_s'\r\nruby-1.0-961225       \"Thu Jan 01 00:00:00 UTC 1970\"\r\n...\r\nruby-1.8.5-preview2   \"Thu Jan 01 00:00:00 UTC 1970\"\r\nruby-1.8.5-preview3   \"Thu Jan 01 00:00:00 +0000 1970\"\r\n...\r\nruby-1.8.5-p231       \"Thu Jan 01 00:00:00 +0000 1970\"\r\nruby-1.8.6-preview1   \"Thu, Jan 01 1970 00:00:00 +0000\"\r\n...\r\nruby-1.8.6-preview3   \"Thu, Jan 01 1970 00:00:00 +0000\"\r\nruby-1.8.6            \"Thu Jan 01 00:00:00 +0000 1970\"\r\n...\r\nruby-1.8.7-p374       \"Thu Jan 01 00:00:00 +0000 1970\"\r\nruby-1.9.0-0          \"1970-01-01 00:00:00 +0000\"\r\n...\r\nruby-3.4.0-preview1   \"1970-01-01 00:00:00 +0000\"\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52371/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 131752,
        "closed_by_id": 131752,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52371.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52371.patch",
        "pull_request_merged_at": "2024-09-05T22:45:52Z"
    },
    {
        "id": 2484816806,
        "number": 52703,
        "title": "Resolve model attribute types on schema load",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-24T19:19:53Z",
        "updated_at": "2024-09-06T07:58:39Z",
        "closed_at": "2024-08-26T17:07:21Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "This PR contains two commits.  The 1st commit resolves model attribute types on schema load, fixing #52607, as explained below.  The 2nd commit re-applies #49769 which was previously reverted due to #52607.\r\n\r\nWhen running tests in parallel, a new database is created for each test worker ([via `ActiveRecord::TestDatabases.create_and_load_schema`](https://github.com/rails/rails/blob/ec667e5f114df58087493096253541f1034815af/activerecord/lib/active_record/test_databases.rb)).  Each of these databases use different OID numbers for custom defined types such as enums.  If model schemas are loaded before forking — as done [in `railties/lib/rails/testing/maintain_test_schema.rb`](https://github.com/rails/rails/blob/ec667e5f114df58087493096253541f1034815af/railties/lib/rails/testing/maintain_test_schema.rb#L11-L15) when `eager_load` is true — Rails will hold on to the OID numbers from the original database.  Thus each test worker does not recognize the OID numbers when resolving model attribute types.\r\n\r\nThis commit sidesteps the problem by resolving model attribute types on schema load.  This does not address the conflicting OID numbers, but each test worker will inherit properly resolved attribute types.\r\n\r\nFixes #52607.\r\nFixes #49717.\r\n\r\n/cc @rafaelfranca since you were handling #52607.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52703/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 771968,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52703.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52703.patch",
        "pull_request_merged_at": "2024-08-26T17:07:21Z"
    },
    {
        "id": 499668797,
        "number": 37316,
        "title": "ActiveStorage direct upload to AWS S3 is failing with files >= 6GB in size",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2019-09-27T22:00:02Z",
        "updated_at": "2024-09-06T07:14:26Z",
        "closed_at": "2020-01-26T10:12:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Direct upload to AWS S3 fails when using a file that is 6GB in size or larger.\r\n\r\n### Steps to reproduce\r\nA sample Rails app that demonstrates the issue is attached (large_file_direct_upload.zip). Also attached is a 6MB zip file containing a 6GB test file that can be used to reproduce the issue (file.txt.zip), and a screenshot showing the error I see in my browser (e.g. `net::ERR_CONNECTION_RESET`).\r\n\r\nBefore running, make sure to add valid AWS credentials to config/storage.yml. Also, make sure to uncompress the test file and use that to reproduce the issue.\r\n\r\n1. Run the sample Rails app. The default page is a \"Posts\" page listing posts in the database.\r\n2. Click the \"New Post\" link.\r\n3. Enter a title, body, and choose the 6GB test file.\r\n4. Click the\"Create Post\" button.\r\n\r\n### Expected behavior\r\nActiveStorage should successfully direct upload a 6GB file (and hopefully even larger files) to Amazon S3.\r\n\r\n### Actual behavior\r\nAfter clicking the \"Create Post\" button the test app UI correctly switches to the \"uploading\" view, but then nothing appears happens for around 80 seconds (with my testing). The progress bar doesn't move. A `net::ERR_CONNECTION_RESET` error then appears in the browser console, and the \"File\" chooser control is rendered with a red border with a tooltip message of \"Error storing file.txt. Status: 0\".\r\n\r\nI also tested with 2GB, 3GB, 4GB and 5GB files, and those were all successfully uploaded to AWS S3.\r\n\r\n### System configuration\r\n**Rails version**: Rails 5.2.0\r\n\r\n**Ruby version**: ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]\r\n\r\n**Browser version** Google Chrome Version 77.0.3865.90 (Official Build) (64-bit)\r\n\r\n[large_file_direct_upload.zip](https://github.com/rails/rails/files/3664644/large_file_direct_upload.zip)\r\n\r\n[file.txt.zip](https://github.com/rails/rails/files/3664646/file.txt.zip)\r\n\r\n<img width=\"1220\" alt=\"upload-large-file-error\" src=\"https://user-images.githubusercontent.com/123218/65804427-7433f300-e147-11e9-9f2a-3eea363fd4c8.png\">",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/37316/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 123218,
        "closed_by_id": 28418009,
        "label_ids": [
            12449438,
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2294442126,
        "number": 51814,
        "title": "Trigger before and after callbacks when Attachments are uploaded.",
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "tenderlove",
            "id": 3124,
            "followers_url": "https://api.github.com/users/tenderlove/followers",
            "following_url": "https://api.github.com/users/tenderlove/following{/other_user}",
            "starred_url": "https://api.github.com/users/tenderlove/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tenderlove/subscriptions",
            "organizations_url": "https://api.github.com/users/tenderlove/orgs",
            "repos_url": "https://api.github.com/users/tenderlove/repos",
            "received_events_url": "https://api.github.com/users/tenderlove/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "tenderlove",
                "id": 3124,
                "followers_url": "https://api.github.com/users/tenderlove/followers",
                "following_url": "https://api.github.com/users/tenderlove/following{/other_user}",
                "starred_url": "https://api.github.com/users/tenderlove/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tenderlove/subscriptions",
                "organizations_url": "https://api.github.com/users/tenderlove/orgs",
                "repos_url": "https://api.github.com/users/tenderlove/repos",
                "received_events_url": "https://api.github.com/users/tenderlove/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-05-14T05:31:23Z",
        "updated_at": "2024-09-06T04:15:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "## Triggers Callbacks when an attachment has been uploaded\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because during our migration process from **paperclip** to ActiveStorage we couldn't find any straightforward mechanism to notify our system exactly when the attachment was uploaded. \r\n\r\nOur use case was very particular but long story short, we needed to run a process that validated some uploaded files after they were attached. \r\n\r\nThe lack of this feature made this effort extremely painful as we needed to execute several rake tasks to re-process hundreds of files that were uploaded incorrectly.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `ActiveStorage::Blob#upload_without_unfurling` and adds some new options to `ActiveStorage::Attached::Model` to invoke a specific method or lambda `:before` and `:after` uploading to the configured service. \r\n\r\nThis is achieved by invoking the passed lambda or method name on the active record model for the following options:\r\n\r\n- `has_one_attached :foo, before_attached: :before_foo_attached, after_attached: ->(blob) { puts \"Attached #{blob.id}\" }`\r\n- `attachment.variant :thumbnail, before_attached: :before_thumbnail_attached, after_attached: ->(blob) { puts \"Attached #{blob.inspect}\" }`\r\n\r\n> It also passes the processed `blob` object to the method in order to do any required post-processing on it.\r\n> If ActiveStorage::track_variants is false, then the object passed for the variants callbacks will be the tranformed TempFile since no blob is created for it.\r\n\r\n### Additional information\r\n\r\nThe development of this feature started during RailsConf 2024 during the HackDay Workshop with the Rails Core Team.\r\nContributors and participating members of this process were:\r\n- @tenderlove \r\n- @mattboldt\r\n- @garyhtou\r\n\r\n(Thanks for the help!, great working with you! 🙌🏻 )\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51814/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1380104,
        "label_ids": [
            150377,
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51814.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51814.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2267076770,
        "number": 51676,
        "title": "Allow `ActiveRecord::QueryMethods#pluck` to accept hash args with symbol & string values",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-04-27T16:09:11Z",
        "updated_at": "2024-09-06T01:13:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nExtends the feature added in #51565 to allow symbol and string hash values when plucking a single column for a specific table. When trying out this new feature I naturally thought this was already valid seeing as the API is common in other query methods (with differing functionality based on the method) e.g. `includes(foo: :bar)`, `order(foo: :desc)`.\r\n\r\n```ruby\r\nPost.joins(:comments).pluck(:id, comments: :id)\r\n```\r\n\r\n### Detail\r\n\r\nUpdates `ActiveRecord::QueryMethods#arel_columns_from_hash` which is used by `#pluck` to simply return the Arel attribute for the column by default if the hash value is a symbol or string, while maintaining `#select` specific aliasing functionality.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\nWhile working on this I realised that #51565 introduced a bit of a non-obvious side effect where a query like:\r\n\r\n```ruby\r\nPost.joins(:comments).pluck(:id, comments: { id: :foo })\r\n```\r\n\r\nwould return the correct results, but also alias the column in the query (`\"comments\".\"id\" AS foo`).\r\n\r\nJust thought it was worth mentioning in case this is classified as a 'bug'. If so, it might be worth separating out the `#select` specific logic from the rest (or `#pluck` from the rest), which would also simplify the conditional logic for the extension in this PR.\r\n\r\ncc/ @fatkodima Keen for your thoughts on this feature and my last note.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51676/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 54629302,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51676.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51676.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1910462944,
        "number": 49371,
        "title": "Deprecate `tag` with positional arguments",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 9,
        "created_at": "2023-09-25T00:50:17Z",
        "updated_at": "2024-09-06T01:05:08Z",
        "closed_at": "2024-09-06T01:05:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "The bulk of this diff is related to indentation changes, so it's best reviewed [ignoring spacing changes](https://github.com/rails/rails/pull/49371/files?w=1)\r\n---\r\n\r\n### Motivation / Background\r\n\r\nModern evolutions of the `ActionView::Helpers::TagHelper#tag` method are intended to be called _on_ the `TagBuilder` instance itself instead of with positional arguments.\r\n\r\nFor example, `tag(\"div\")` would be called with `tag.div`.\r\n\r\nAccording to the [Legacy Syntax](https://api.rubyonrails.org/classes/ActionView/Helpers/TagHelper.html#method-i-tag-label-Legacy+syntax) heading of the [ActionView::Helpers::TagHelper#tag](https://api.rubyonrails.org/classes/ActionView/Helpers/TagHelper.html#method-i-tag) guides:\r\n\r\n> The following format is for legacy syntax support. It will be deprecated in future versions of Rails.\r\n\r\nSince deprecations must occur during releases, this commit proposes that 7.2 be the release to start the deprecation process so that a subsequent release can remove \"Legacy syntax\" support entirely.\r\n\r\n### Detail\r\n\r\nThis commit adds a deprecation warning to encourage callers to invoke the helper in the more modern style.\r\n\r\nInternally, Rails utilizes the positional argument syntax in several places. Since deprecations must be part of minor version releases, this commit wraps the internal invocations in `ActionView.deprecator.silence` blocks so that they can remain while the deprecation is made public. This compromise buys the framework time to re-structure those invocations to be compatible with the more modern syntax before the next major release.\r\n\r\nThere are several calls to `tag` with positional arguments in the test suite. This commit wraps those as well. In the future, some of those tests will be able to remove those blocks, while other tests will be able to be removed entirely once that style of invocation is no longer supported.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49371/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2575027,
        "closed_by_id": 2741,
        "label_ids": [
            107191,
            3666649
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/49371.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/49371.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2208080356,
        "number": 51424,
        "title": "Request session id unavailable when streaming HTML",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-03-26T12:13:22Z",
        "updated_at": "2024-09-05T23:39:33Z",
        "closed_at": "2024-09-05T23:39:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The default Content Security Policy nonce generator returns the `request.session.id`, but this isn’t available when streaming an HTML response.\r\n\r\n### Steps to reproduce\r\n1. Enable the default Content Security Policy by uncommenting the code generated in `config/initializers/content_security_policy.rb`\r\n2. Stream an HTML response form a controller\r\n\r\n**Content Security Policy Config:**\r\n```ruby\r\nRails.application.configure do\r\n  config.content_security_policy do |policy|\r\n    policy.default_src :self, :https\r\n    policy.font_src    :self, :https, :data\r\n    policy.img_src     :self, :https, :data\r\n    policy.object_src  :none\r\n    policy.script_src  :self, :https\r\n    policy.style_src   :self, :https\r\n  end\r\n\r\n  config.content_security_policy_nonce_generator = ->(request) { request.session.id }\r\n  config.content_security_policy_nonce_directives = %w(script-src style-src)\r\nend\r\n```\r\n\r\n**Example controller:**\r\n\r\n```ruby\r\nclass DashboardController < ApplicationController\r\n  def index\r\n    headers[\"X-Accel-Buffering\"] = \"no\"\r\n    headers[\"Cache-Control\"] = \"no-transform\"\r\n    headers[\"Last-Modified\"] = Time.now.httpdate\r\n    headers[\"Content-Type\"] = \"text/html; charset=utf-8\"\r\n\r\n    self.response_body = Enumerator.new do |buffer|\r\n      buffer << \"<html><head><title>Dashboard</title></head><body>\"\r\n      buffer << \"<h1>Dashboard</h1>\"\r\n      buffer << \"<p>Welcome to the dashboard</p>\"\r\n      buffer << \"</body></html>\"\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behaviour\r\nThe Content Security Policy headers should include a nonce based on the session id.\r\n\r\n```\r\nContent-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'; style-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'\r\n```\r\n\r\n### Actual behaviour\r\nThe Content Security Policy headers do not include a nonce.\r\n\r\n```\r\nContent-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https:; style-src 'self' https:\r\n```\r\n\r\n### Workaround\r\nAs a workaround, you can set a session attribute and remove it before setting the `response_body`.\r\n\r\n```ruby\r\nsession[:foo] = 1\r\nsession.delete(:foo)\r\n```\r\n\r\nThis seems to get the session into a state where it has an `id`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.2\r\n\r\n**Ruby version**: 3.3.0",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51424/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 246692,
        "closed_by_id": 28418009,
        "label_ids": [
            12449438
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2506558220,
        "number": 52804,
        "title": "Add Solid Queue alongside Solid Cache",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-05T01:02:04Z",
        "updated_at": "2024-09-05T21:26:25Z",
        "closed_at": "2024-09-05T21:26:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Configure Solid Queue alongside Solid Cache by default.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52804/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 12,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 12,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52804.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52804.patch",
        "pull_request_merged_at": "2024-09-05T21:26:23Z"
    },
    {
        "id": 2494494318,
        "number": 52745,
        "title": "Associations with through don't work until saved",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-29T13:42:37Z",
        "updated_at": "2024-09-05T20:47:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org/\"\r\n\r\n  gem \"rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\n  create_table :users, force: true\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.belongs_to :post\r\n    t.belongs_to :user\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n  has_many :commenters, through: :comments, source: :user\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  belongs_to :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    user = User.create!\r\n    post = Post.new\r\n\r\n    post.comments.build(user: user)\r\n\r\n    assert_equal user, post.comments.first.user\r\n    assert_equal [user], post.commenters\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen building a comment the association for `commenters` should have the values associated through the `comment` \r\n\r\n### Actual behavior\r\nAssociations with :through don't work until it's saved, `post.commenters` is returning empty\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.4\r\n\r\n**Ruby version**: 3.3.4\r\nUnsure about other versions but these are the ones I am on. \r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52745/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 15008564,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2131334204,
        "number": 51054,
        "title": "Do not force limits on nested records marked for destruction.",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-13T02:02:53Z",
        "updated_at": "2024-09-05T20:38:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #51029\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the limits for nested attributes didn't reject records marked for destruction.\r\n\r\n### Detail\r\n\r\nThis Pull Request ensures records marked for destruction won't interfere on limits.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51054/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 108208,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51054.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51054.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2127545514,
        "number": 51029,
        "title": "nested_attributes_for :limit does not account for records marked for deletion",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-02-09T17:13:42Z",
        "updated_at": "2024-09-05T20:30:08Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Noticed that when an update to a model that accepts nested attributes with a `:limit` specified that any batch update of nested records will count any records marked for deletion along with any new ones, which raises.\r\n\r\nWorkaround for now is to remove `limit` on the `nested_attributes_for` call and write a custom validation:\r\n\r\n```ruby\r\nclass Post < ApplicationRecord\r\n  has_many :comments, dependent: :destroy\r\n  accepts_nested_attributes_for :comments, allow_destroy: true\r\n\r\n  validate :validate_comments_count\r\n\r\n  private\r\n\r\n  def validate_comments_count\r\n    count = comments.count { |c| !c.marked_for_destruction? }\r\n\r\n    if count > 10\r\n      errors.add(:base, \"A post can have at most 10 comments\")\r\n    end\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n\r\n  accepts_nested_attributes_for :comments, allow_destroy: true, limit: 2\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_nested_attributes_limit\r\n    post = Post.create!(comments_attributes: [{}, {}])\r\n    first_comment, second_comment = post.comments\r\n\r\n    post.update!(comments_attributes: [\r\n      first_comment.attributes,\r\n      second_comment.attributes.merge(\"_destroy\" => 1),\r\n      {}\r\n    ])\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `limit` validation should reject any associated records `marked_for_deletion?`\r\n\r\n### Actual behavior\r\n\r\nIt instead counts all associated records.\r\n\r\n### System configuration\r\n**Rails version**:  7.1.3\r\n\r\n**Ruby version**: ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [arm64-darwin23]\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51029/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 79303,
        "label_ids": [
            107191,
            41328116
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 806576627,
        "number": 41412,
        "title": "Revert #22610 by default and make it opt-in",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2021-02-11T17:03:44Z",
        "updated_at": "2024-09-05T13:52:30Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nChange #22610 in order to revert the behaviour by default.\r\nIf the option `all: true` is given applies the new behaviour.\r\n\r\n<!-- Provide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together. -->\r\n\r\nFixes #41051\r\n\r\n<!-- If there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/41412/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1753245,
        "label_ids": [
            107190,
            128692
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/41412.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/41412.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 122512695,
        "number": 22610,
        "title": "Validate inclusion of each object in an array",
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rafaelfranca",
            "id": 47848,
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 24,
        "created_at": "2015-12-16T14:16:06Z",
        "updated_at": "2024-09-05T13:49:15Z",
        "closed_at": "2020-08-02T14:39:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "If the value for a specified attribute is an array, validating inclusion\nwill check if the array is present in the given members. `:each_object`\nallow the user to specify that each object in the array must be present\nin the given members.\n\nThis can be useful if you, for instance, use the `array: true` option on a database column and want to enforce that members of the array are included in a specified list of valid values.\n\nBefore:\n\n```\nvalidates_inclusion_of :features, in: %w(IR Bluetooth Wireless)\n```\n\nIf the attribute `features` is an array containing `[\"Bluetooth\"]` the above validation would fail, since `[\"IR\", \"Bluetooth\", \"Wireless\"].include?([\"Bluetooth\"])` is `false`.\n\nAfter:\n\n```\nvalidates_inclusion_of :features, in: %w(IR Bluetooth Wireless), each_object: true\n```\n\nWill now pass, since we're actually checking if each object in `features` are included in the given members.\n\nThis is my first pull request to Rails, so any feedback is highly appreciated.\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/22610/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 503025,
        "closed_by_id": 1034,
        "label_ids": [
            107190,
            128692
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/22610.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/22610.patch",
        "pull_request_merged_at": "2020-08-02T14:39:36Z"
    },
    {
        "id": 380492882,
        "number": 34443,
        "title": "active_storage fips 140-2 issue",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2018-11-14T01:11:07Z",
        "updated_at": "2024-09-05T13:15:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Tried using active_storage to handle file upload, but encountered an issue when FIPS mode is enforced.\r\n\r\nTried the following configuration option with same issue:\r\nRails.application.config.active_support.use_sha1_digests = true\r\n\r\nrail 5.2.1\r\n\r\nruby 2.5.0\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/34443/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 36071943,
        "label_ids": [
            149514554,
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2507664507,
        "number": 52808,
        "title": "`--skip-active-record` should imply `--skip-solid`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-05T12:33:56Z",
        "updated_at": "2024-09-05T13:15:31Z",
        "closed_at": "2024-09-05T13:10:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nOver in `rspec-rails` we have a smoke app that uses `--skip-active-record` to use that an app using Rails in this mode still works and all of our various ActiveRecord features are turned off, after the merge of #52790 this started failing because adding `solid_cache` to the Gemfile caused active record to become a dependency. We've fixed this by adding `--skip-solid` to our smoke app but this lead me to believe that similar to Active Storage, Solid Cache should be skipped when skipping Active Record.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `OPTION_IMPLICATIONS` in the rails generator to imply `skip_solid` when `skip_active_record` is activated.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52808/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 6014046,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52808.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52808.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2507511932,
        "number": 52807,
        "title": "Add an internal API to trigger association loading asynchronously",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-05T11:24:17Z",
        "updated_at": "2024-09-05T12:39:42Z",
        "closed_at": "2024-09-05T11:45:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This is not yet a public API, I'd like to experiment with a few ideas and run it by a few people first. But that's pretty much all the necessary plumbing.\r\n\r\nOne big limitation right now is with `has_many through`, as it requires two queries back to back. I'm not sure how to best handle that, but I think worst case we could at least trigger the first of the two, that would already be a win.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52807/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19192189,
        "closed_by_id": 44640,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52807.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52807.patch",
        "pull_request_merged_at": "2024-09-05T11:45:01Z"
    },
    {
        "id": 12367934,
        "number": 9893,
        "title": "Add a test to assert autosaving associations doesn't overwrite id accessor methods",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2013-03-24T01:12:11Z",
        "updated_at": "2024-09-05T12:22:11Z",
        "closed_at": "2013-06-26T05:45:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This is a bug on v3.2.13 (reported in #9130 ) where newly created associations will overwrite directly set ids. It seems to be fixed on 3-2-stable but this will help with regressions.\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/9893/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 5402,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/9893.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/9893.patch",
        "pull_request_merged_at": "2013-06-26T05:45:36Z"
    },
    {
        "id": 12367898,
        "number": 9892,
        "title": "Add a test to assert autosaving associations doesn't overwrite id accessor methods",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2013-03-24T01:08:57Z",
        "updated_at": "2024-09-05T12:22:11Z",
        "closed_at": "2013-03-24T01:10:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This is a bug on v3.2.13 (reported in #9130 ) where newly created associations will overwrite directly set ids. It seems to be fixed on 3-2-stable but this will help with regressions.\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/9892/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 162976,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/9892.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/9892.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 13719869,
        "number": 10365,
        "title": "ActiveSupport::JSON::Encoding.escape implementation",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2013-04-27T11:28:45Z",
        "updated_at": "2024-09-05T12:22:04Z",
        "closed_at": "2013-04-27T19:41:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "@rkh could you provide a brief example of data you think `ActiveSupport::JSON doesn't encode properly? I'd like to have a go at fixing #7764...\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/10365/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 27786,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/10365.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/10365.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 3665044,
        "number": 5448,
        "title": "Commas in directory names causes hang in ActiveSupport::FileUpdateChecker",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2012-03-15T12:27:29Z",
        "updated_at": "2024-09-05T12:22:01Z",
        "closed_at": "2012-03-15T12:44:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Having commas in directory names passed through to ActiveSupport::FileUpdateChecker causes an infinite hang whilst Dir[@glob] tries and fails to list files in these directories. This wasn't an issue before ~> 3.2 but on 3.2 upwards it prevents Rails from booting in development mode and prevents test suites running (rspec, cucumber at least).\n\nCommas are perfectly valid parts of directory names (on OS X at least) and escaping them when compiling the glob solves this issue.\n\nThis issue can be triggered by adding such directories to the autoload component of rails config see: https://github.com/JonRowe/rails-broken-dir-example for an example broken application.\n\nThis is a duplicate of #5445 but, as requested, against master and without fork.\n\nBe warned on OSX/MRI Ruby this causes an infinite hang on test failure... \n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/5448/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 9582,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/5448.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/5448.patch",
        "pull_request_merged_at": "2012-03-15T12:44:46Z"
    },
    {
        "id": 3663648,
        "number": 5445,
        "title": "Commas in directory names causes hang in ActiveSupport::FileUpdateChecker",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2012-03-15T10:21:33Z",
        "updated_at": "2024-09-05T12:21:50Z",
        "closed_at": "2012-03-15T12:35:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Having commas in directory names passed through to ActiveSupport::FileUpdateChecker causes an infinite hang whilst Dir[@glob] tries and fails to list files in these directories. This wasn't an issue before ~> 3.2 but on 3.2 upwards it prevents Rails from booting in development mode and prevents test suites running (rspec, cucumber at least).\n\nCommas are perfectly valid parts of directory names (on OS X at least) and escaping them when compiling the glob solves this issue.\n\nThis issue can be triggered by adding such directories to the autoload component of rails config see: https://github.com/JonRowe/rails-broken-dir-example for an example broken application.\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/5445/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 162976,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/5445.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/5445.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 3671834,
        "number": 5453,
        "title": "When Active Record has already loaded a unique association `.size` returns the wrong number.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2012-03-15T19:25:20Z",
        "updated_at": "2024-09-05T12:21:49Z",
        "closed_at": "2012-05-17T00:32:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "When ActiveRecord has already eager loaded an association a call to that association returns the wrong number, count still returns correctly because it executes a fresh query. This may be undesirable. This patch respects the `:uniq` flag on the association and filters the already loaded array accordingly before calling `.size`.\n\nTested against SQLite, Mysql and Postgres (even though this modified no sql).\n\nFixes #4982 (symptoms shown below)\n\n<pre>\nUser.where(id:5).first.followers.size\n  User Load (0.8ms)  SELECT `users`.* FROM `users` WHERE `users`.`id` = 5 LIMIT 1\n  User Load (0.3ms)  SELECT DISTINCT `users`.* FROM `users` INNER JOIN `followers_users` ON `users`.`id` = `followers_users`.`user_id` WHERE `followers_users`.`follower_id` = 5\n</pre>\n\n\n<pre>\nUser.where(id:5).includes(:followers).first.followers.size\n  User Load (0.6ms)  SELECT `users`.* FROM `users` WHERE `users`.`id` = 5 LIMIT 1\n  SQL (0.8ms)  SELECT `users`.*, `t0`.`follower_id` AS ar_association_key_name FROM `users` INNER JOIN `followers_users` `t0` ON `users`.`id` = `t0`.`user_id` WHERE `t0`.`follower_id` IN (5)\n => 18\n</pre>\n\n\nSee https://gist.github.com/2044768 for files needed to replicate\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/5453/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 3124,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/5453.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/5453.patch",
        "pull_request_merged_at": "2012-05-17T00:32:01Z"
    },
    {
        "id": 24704778,
        "number": 13461,
        "title": "Ensure format is uniform when used as cache key",
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "sgrif",
            "id": 1529387,
            "followers_url": "https://api.github.com/users/sgrif/followers",
            "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
            "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
            "organizations_url": "https://api.github.com/users/sgrif/orgs",
            "repos_url": "https://api.github.com/users/sgrif/repos",
            "received_events_url": "https://api.github.com/users/sgrif/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "sgrif",
                "id": 1529387,
                "followers_url": "https://api.github.com/users/sgrif/followers",
                "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
                "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
                "organizations_url": "https://api.github.com/users/sgrif/orgs",
                "repos_url": "https://api.github.com/users/sgrif/repos",
                "received_events_url": "https://api.github.com/users/sgrif/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2013-12-23T12:43:58Z",
        "updated_at": "2024-09-05T12:21:19Z",
        "closed_at": "2015-10-30T15:25:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Ensure that format is a symbol before using it as a cache key, this ensures\nthat differing formats will cause differing cache keys regardless of\nstring/symbol, and that similar formats will hit any existing cache.\n\nThe weird way of checking is done to reduce the possibility of DDoS through\nsymbol creation.\n\nFixes #13208 too.\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/13461/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 1529387,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/13461.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/13461.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 12589857,
        "number": 9990,
        "title": "Change routing `normalize_path` regular expression to match /(:param)other_stuff fixes #8578",
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "pixeltrix",
            "id": 6321,
            "followers_url": "https://api.github.com/users/pixeltrix/followers",
            "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
            "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
            "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
            "repos_url": "https://api.github.com/users/pixeltrix/repos",
            "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "pixeltrix",
                "id": 6321,
                "followers_url": "https://api.github.com/users/pixeltrix/followers",
                "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
                "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
                "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
                "repos_url": "https://api.github.com/users/pixeltrix/repos",
                "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 14,
        "created_at": "2013-03-28T23:39:41Z",
        "updated_at": "2024-09-05T12:21:19Z",
        "closed_at": "2019-12-25T19:38:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "There is an issue where a scoped optional parameter is incorrectly being substituted when at the root of a route so as that it then doesn't match without the parameter at the root. e.g.\n\n`scope \"/(:optional/):required\"` should match both `/optional/required` and `/required`\n\nThis is a change to the `normalize_path` regular expression fixing the incorrect substitution of the root `/` when used with an optional param, which make parameters optional again. e.g.:\n\n```\n# before \n /(:optional/):required => (/:optional):required\n# after (correct)\n/(:optional/):required => /(:optional/):required\n```\n\nFixes #8578\n\n**Edit** Updated the text to make it clearer what this is fixing\n**Edit x2** The test has been reverted to using a `-` so it can't be fixed by rewriting the regexp, but it's still a valid route.\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/9990/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 28418009,
        "label_ids": [
            107189,
            12449438
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/9990.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/9990.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 15616214,
        "number": 10972,
        "title": "Specified column type for quote_value (rebased and squashed #6763)",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2013-06-17T04:27:22Z",
        "updated_at": "2024-09-05T12:21:16Z",
        "closed_at": "2013-07-22T13:04:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "This is #6763 squashed and rebased off the current master.\n\nTo quote @alfredw\n\n```\nWhen calling quote_value the underlying connection sometimes requires\nmore information about the column to properly return the correct quoted\nvalue.\n\nI ran into this issue when using optimistic locking in JRuby and the\nactiverecord-jdbcmssql-adapter. In SQLSever 2000, we aren't allowed to\ninsert a integer into a NVARCHAR column type so we need to format it as\nN'3' if we want to insert into the NVARCHAR type. Unfortuantely, without\nthe column type being passed the connection adapter cannot properly return\nthe correct quote value because it doesn't know to return N'3' or '3'.\n\nThis patch is fairly straight forward where it just passes in the column\ntype into the quote_value, as it already has the ability to take in the column,\nso it can properly handle at the connection level.\n\nI've added the tests required to make sure that the quote_value method\nis being passed the column type so that the underlying connection can\ndetermine how to quote the value.\n```\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/10972/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/10972.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/10972.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 13666517,
        "number": 10351,
        "title": "Propose better documentation for ActiveSupports `next_week` functionaility",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2013-04-25T23:12:46Z",
        "updated_at": "2024-09-05T12:21:15Z",
        "closed_at": "2013-04-26T08:49:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Update documentation for `next_week(:day)` to better reflect implementation.\n\nAsking a Date(Time) for `next_week` is the equivalent of saying 'Give me day X in next week' but the original documentation makes it seem like the parameter is the start of next week.\n\nThis PR updates the documentation to reflect the reality, e.g. asking for `next_week(:wednesday)` is the equivalent of the english statement 'next wednesday' or 'the wednesday in next week'.\n\nThis will clear up misunderstandings like #9568\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/10351/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 162976,
        "closed_by_id": 3387,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/10351.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/10351.patch",
        "pull_request_merged_at": "2013-04-26T08:49:08Z"
    },
    {
        "id": 1300063764,
        "number": 45558,
        "title": "Fix TimeWithZone#time to return local time",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-07-11T00:42:26Z",
        "updated_at": "2024-09-05T09:38:48Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nCurrently, `TimeWithZone#time` returns UTC where time zone offset is\r\nadded/subtracted. So the value is semantically incorrect. This PR fixes it to\r\nreturn local time.\r\n\r\nClose https://github.com/rails/rails/issues/45548.\r\n\r\n### Other Information\r\n\r\nNone.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/45558/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 99586,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/45558.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/45558.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1298872874,
        "number": 45548,
        "title": "TimeWithZone#time returns incorrect time",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2022-07-08T11:09:34Z",
        "updated_at": "2024-09-05T09:37:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n> jst = Time.find_zone!(\"Asia/Tokyo\").parse(\"2022-03-30T23:59:59Z\")\r\n> jst.utc\r\n=> 2022-03-30 23:59:59 UTC # correct\r\n> jst.time\r\n=> 2022-03-31 08:59:59 UTC # wrong\r\n```\r\n\r\n### Expected behavior\r\n\r\nReturns the time in the local time zone? Or if it returns UTC, it should at least match with the `TimeWithZone#utc`.\r\n\r\n### Actual behavior\r\n\r\nReturns UTC where the time zone offset is added/subtracted.\r\n\r\n### System configuration\r\n**Rails version**: ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-linux]\r\n\r\n**Ruby version**: Rails 7.0.3",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/45548/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 99586,
        "label_ids": [
            107194,
            41328116
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2478149719,
        "number": 52670,
        "title": "Make Solid Cache the default for new Rails apps",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-21T14:11:37Z",
        "updated_at": "2024-09-05T09:02:42Z",
        "closed_at": "2024-09-05T09:02:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "The defaults for the cache are pulled in from the [template](https://github.com/rails/solid_cache/blob/87fd0e9611237b5608b5e0f4197aec74fe333ca4/lib/generators/solid_cache/install/templates/config/solid_cache.yml.tt) in Solid Cache. Currently 1 week max age and 256MB max size.\r\n\r\nRight now this sets up Solid Cache to be used in development and production - maybe we'd want to stick with a memory cache in development?\r\n\r\nWhen using Sqlite, we'll use a separate database for the cache, with the migrations for that db going into `db/cache/migrate`. We then need to adjust the db change task to move the migrations if required.\r\n\r\nFor all databases we'll use a separate connection pool for the database even if it points to the primary database. This stops cache queries from being affected by primary database transactions.\r\n\r\nAs a result the `config/database.yml` templates have been converted to the three-tier format. We could keep the two-tier format when not using Solid Cache, but the templates would start to get messy.\r\n\r\nResolves #50443 cc @dhh ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52670/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1734607,
        "closed_by_id": 1734607,
        "label_ids": [
            107195,
            123812746
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52670.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52670.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1672161826,
        "number": 47969,
        "title": "Permit frozen models to be validated",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-04-18T00:40:01Z",
        "updated_at": "2024-09-05T08:42:32Z",
        "closed_at": "2024-08-16T15:24:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nRecently stumbled upon `composed_of` and started to use it to model a concept. One nice thing about it I noticed was i could isolate all logic related to that value object outside of a model, like for example validations. Take for example:\r\n\r\n```ruby\r\nclass HourlyRate\r\n  include ActiveModel::Validations\r\n\r\n  attr_reader :rate\r\n\r\n  validates :rate, numericality: { greater_than_or_equal_to: 0 }\r\n\r\n  def initialize(rate)\r\n    @rate = rate\r\n  end\r\nend\r\n\r\nclass Person < ApplicationRecord\r\n  composed_of :hourly_rate, mapping: [%w[hourly_rate rate]]\r\n\r\n  validates_associated :hourly_rate\r\nend\r\n```\r\n\r\nWith this setup you can validate existing people no problem, but if you change the hourly_rate you run into issues.\r\n\r\n### Detail\r\n\r\nWhen you set a value using `composed_of` the value is frozen (see: https://github.com/rails/rails/blob/main/activerecord/lib/active_record/aggregations.rb#L279). But when you try to validate the object is raises a `FrozenError: can't modify frozen Person`. This is due to it trying to set the `errors` instance variable and keeping track of `validation_context`. My $0.02 is that validating shouldn't be seen as altering an object so these changes retain existing public API while making validation possible on frozen object.\r\n\r\nThis is done by memoizing errors prior to freezing, and moving the validation context into a separate object that can be altered during validation and memoizing that object prior to freezing.\r\n\r\n### Additional information\r\n\r\nI did find a related issue that was a blast from the past https://github.com/rails/rails/issues/1513. It looks to have been closed on the belief that `composed_of` was on its way out which turned out to not be the case.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/47969/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5059927,
        "closed_by_id": 47848,
        "label_ids": [
            107190
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/47969.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/47969.patch",
        "pull_request_merged_at": "2024-08-16T15:24:39Z"
    },
    {
        "id": 2505984858,
        "number": 52800,
        "title": "ActiveRecord - `update!` and `save!` do not trigger validations neither raise exceptions with emtpy attributes.",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-04T18:03:36Z",
        "updated_at": "2024-09-05T06:48:03Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"rails\", path: \"~/GitHub/rails\"\r\n  gem \"sqlite3\", \"~> 2.0\"\r\n  gem \"debug\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\nrequire \"debug\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"books\", force: :cascade do |t|\r\n    t.string \"title\"\r\n  end\r\nend\r\n\r\nclass Book < ActiveRecord::Base\r\n  validates :title, presence: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_validation_error_on_create!\r\n    assert_raises ActiveRecord::RecordInvalid do\r\n      Book.create!()\r\n    end\r\n  end\r\n\r\n  def test_validation_error_on_save!\r\n    book = Book.new\r\n\r\n    assert_raises ActiveRecord::RecordInvalid do\r\n      book.save!\r\n    end\r\n  end\r\n\r\n  def test_validation_error_on_update_with_empty_attributes\r\n    book_params = { title: \"title\" }\r\n    book = Book.create!(book_params)\r\n\r\n    assert_raises ActiveRecord::RecordInvalid do\r\n      book.update!({})\r\n    end\r\n  end\r\n\r\n  def test_validation_error_on_update_with_nil_attribute\r\n    book_params = { title: \"title\" }\r\n    book = Book.create!(book_params)\r\n\r\n    assert_silent { book.update_attribute!(:title, nil) }\r\n  end\r\n\r\n  def test_validation_error_on_save_with_empty_attributes\r\n    book_params = { title: \"title\" }\r\n    book = Book.create!(book_params)\r\n\r\n    assert_raises ActiveRecord::RecordInvalid do\r\n      book.attributes = {}\r\n      book.save!\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nValidations should be triggered.\r\n\r\n### Actual behavior\r\nThere are no exceptions:\r\n```ruby\r\nFetching gem metadata from https://rubygems.org/..........\r\nResolving dependencies...\r\n-- create_table(\"books\", {:force=>:cascade})\r\nD, [2024-09-04T23:21:52.331993 #1196081] DEBUG -- :    (1.7ms)  DROP TABLE IF EXISTS \"books\"\r\nD, [2024-09-04T23:21:52.332147 #1196081] DEBUG -- :    (0.1ms)  CREATE TABLE \"books\" (\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL, \"title\" varchar)\r\n   -> 0.0042s\r\nD, [2024-09-04T23:21:52.332799 #1196081] DEBUG -- :    (0.0ms)  CREATE TABLE \"schema_migrations\" (\"version\" varchar NOT NULL PRIMARY KEY)\r\nD, [2024-09-04T23:21:52.333911 #1196081] DEBUG -- :    (0.1ms)  CREATE TABLE \"ar_internal_metadata\" (\"key\" varchar NOT NULL PRIMARY KEY, \"value\" varchar, \"created_at\" datetime(6) NOT NULL, \"updated_at\" datet\r\nime(6) NOT NULL)\r\nD, [2024-09-04T23:21:52.349115 #1196081] DEBUG -- :   ActiveRecord::InternalMetadata Load (0.7ms)  SELECT * FROM \"ar_internal_metadata\" WHERE \"ar_internal_metadata\".\"key\" = ? ORDER BY \"ar_internal_metadata\".\r\n\"key\" ASC LIMIT 1  [[nil, \"environment\"]]\r\nD, [2024-09-04T23:21:52.349322 #1196081] DEBUG -- :   ActiveRecord::InternalMetadata Create (0.0ms)  INSERT INTO \"ar_internal_metadata\" (\"key\", \"value\", \"created_at\", \"updated_at\") VALUES ('environment', 'de\r\nvelopment', '2024-09-05 02:21:52.349161', '2024-09-05 02:21:52.349164') RETURNING \"key\"\r\nRun options: --seed 36180\r\n\r\n# Running:\r\n\r\nD, [2024-09-04T23:21:52.424816 #1196081] DEBUG -- :   SQL (0.0ms)  BEGIN immediate TRANSACTION\r\nD, [2024-09-04T23:21:52.424912 #1196081] DEBUG -- :   Book Create (0.1ms)  INSERT INTO \"books\" (\"title\") VALUES (?) RETURNING \"id\"  [[\"title\", \"title\"]]\r\nD, [2024-09-04T23:21:52.424981 #1196081] DEBUG -- :   TRANSACTION (0.0ms)  COMMIT TRANSACTION\r\nF.D, [2024-09-04T23:21:52.430380 #1196081] DEBUG -- :   SQL (0.0ms)  BEGIN immediate TRANSACTION\r\nD, [2024-09-04T23:21:52.430445 #1196081] DEBUG -- :   Book Create (0.1ms)  INSERT INTO \"books\" (\"title\") VALUES (?) RETURNING \"id\"  [[\"title\", \"title\"]]\r\nD, [2024-09-04T23:21:52.430493 #1196081] DEBUG -- :   TRANSACTION (0.0ms)  COMMIT TRANSACTION\r\nD, [2024-09-04T23:21:52.436341 #1196081] DEBUG -- :   SQL (0.0ms)  BEGIN immediate TRANSACTION\r\nD, [2024-09-04T23:21:52.436424 #1196081] DEBUG -- :   Book Update (0.1ms)  UPDATE \"books\" SET \"title\" = ? WHERE \"books\".\"id\" = ?  [[\"title\", nil], [\"id\", 2]]\r\nD, [2024-09-04T23:21:52.436481 #1196081] DEBUG -- :   TRANSACTION (0.0ms)  COMMIT TRANSACTION\r\n.D, [2024-09-04T23:21:52.436749 #1196081] DEBUG -- :   SQL (0.0ms)  BEGIN immediate TRANSACTION\r\nD, [2024-09-04T23:21:52.436810 #1196081] DEBUG -- :   Book Create (0.1ms)  INSERT INTO \"books\" (\"title\") VALUES (?) RETURNING \"id\"  [[\"title\", \"title\"]]\r\nD, [2024-09-04T23:21:52.436853 #1196081] DEBUG -- :   TRANSACTION (0.0ms)  COMMIT TRANSACTION\r\nF.\r\n\r\nFinished in 0.018287s, 273.4143 runs/s, 328.0971 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_validation_error_on_save_with_empty_attributes [run-update-with-empty-attributes.rb:68]:\r\nActiveRecord::RecordInvalid expected but nothing was raised.\r\n\r\n  2) Failure:\r\nBugTest#test_validation_error_on_update_with_empty_attributes [run-update-with-empty-attributes.rb:52]:\r\nActiveRecord::RecordInvalid expected but nothing was raised.\r\n\r\n5 runs, 6 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n<!-- Tell us what happens instead -->\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.3.4\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52800/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 108208,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2506525904,
        "number": 52803,
        "title": "Update devcontainer to use ruby 3.3.5",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-05T00:26:00Z",
        "updated_at": "2024-09-05T04:48:39Z",
        "closed_at": "2024-09-05T04:48:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Detail\r\n\r\nThis Pull Request updates the dev container to use 3.3.5.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52803/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39735028,
        "closed_by_id": 73684,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52803.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52803.patch",
        "pull_request_merged_at": "2024-09-05T04:48:39Z"
    },
    {
        "id": 2499213264,
        "number": 52758,
        "title": "Add support for ICU collations in PostgreSQL 15 or later",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-01T04:23:47Z",
        "updated_at": "2024-09-05T02:37:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because PostgreSQL 15 or later now support ICU collations.\r\n\r\n### Detail\r\n\r\nThe following parameters are newly supported in config/database.yml for PostgreSQL 15 or later.\r\n\r\n- `locale_provider`\r\n  - `libc` or `icu`\r\n- `icu_locale`\r\n  - Find the value by `SELECT collname FROM pg_collation`, Ex: `ja-x-icu`\r\n  - [Language tag](https://www.postgresql.org/docs/16/locale.html#ICU-LANGUAGE-TAG), Ex: `en-US-u-kn-ks-level2 `\r\n- `icu_rules`\r\n  - Ex: `&V <<< w <<< W`\r\n  - https://www.postgresql.org/docs/16/collation.html#ICU-TAILORING-RULES\r\n  - https://unicode-org.github.io/icu/userguide/collation/customization/\r\n\r\nRefs:\r\n- https://www.postgresql.org/docs/16/sql-createdatabase.html\r\n- https://www.postgresql.org/docs/16/collation.html\r\n- https://www.postgresql.org/docs/15/sql-createdatabase.html\r\n- https://www.postgresql.org/docs/15/collation.html\r\n\r\nThe following methods are newly added to [`ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements`](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb).\r\n\r\n- `icu_locale`\r\n  - Ex: `ActiveRecord::Base.connection.icu_locale #=> \"ja-x-icu\"`\r\n- `locale_provider`\r\n  - Ex: `ActiveRecord::Base.connection.locale_provider #=> \"i\"`\r\n  - This method returns `c`, `i` or nil (c = libc, i = icu)\r\n- `icu_rules`\r\n  - Ex: `ActiveRecord::Base.connection.icu_rules #=> \"&V <<< w <<< W\"`\r\n\r\nRefs:\r\n- https://www.postgresql.org/docs/16/catalog-pg-database.html\r\n- https://www.postgresql.org/docs/15/catalog-pg-database.html\r\n\r\n#### Current\r\n\r\n```\r\n# config/database.yml\r\ndatabase: sample_development\r\nadapter: postgresql\r\nencoding: unicode\r\npool: <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %>\r\n\r\n# \\l sample_development\r\nList of databases\r\n-[ RECORD 1 ]-----+-------------------\r\nName              | sample_development\r\nOwner             | rono23\r\nEncoding          | UTF8\r\nLocale Provider   | libc\r\nCollate           | C\r\nCtype             | C\r\nICU Locale        | \r\nICU Rules         | \r\nAccess privileges | \r\n\r\n# SELECT title FROM posts ORDER BY title ASC;\r\n title \r\n-------\r\n 1\r\n 2\r\n A\r\n B\r\n a\r\n b\r\n あ\r\n い\r\n ア\r\n イ\r\n(10 rows)\r\n```\r\n\r\n#### After this PR\r\n\r\n```\r\n# Set new parameters in config/database.yml\r\ntemplate: template0\r\nlocale_provider: icu\r\nicu_locale: ja-x-icu                                                                                                                                         \r\n\r\n# \\l sample_development\r\nList of databases\r\n-[ RECORD 1 ]-----+-------------------\r\nName              | sample_development\r\nOwner             | rono23\r\nEncoding          | UTF8\r\nLocale Provider   | icu\r\nCollate           | C\r\nCtype             | C\r\nICU Locale        | ja-x-icu\r\nICU Rules         | \r\nAccess privileges | \r\n\r\n# SELECT title FROM posts ORDER BY title ASC;\r\n title \r\n-------\r\n 1\r\n 2\r\n a\r\n A\r\n b\r\n B\r\n あ\r\n ア\r\n い\r\n イ\r\n(10 rows)\r\n```\r\n\r\n### Additional information\r\n\r\n#### PostgreSQL 15\r\n\r\n> Allow [ICU](https://www.postgresql.org/docs/15/locale.html) collations to be set as the default for clusters and databases (Peter Eisentraut)\r\nPreviously, only libc-based collations could be selected at the cluster and database levels. ICU collations could only be used via explicit `COLLATE` clauses.\r\nhttps://www.postgresql.org/docs/15/release-15.html\r\n\r\n> [icu_locale](https://www.postgresql.org/docs/15/sql-createdatabase.html)\r\nSpecifies the ICU locale ID if the ICU locale provider is used.\r\n\r\n> [locale_provider](https://www.postgresql.org/docs/15/sql-createdatabase.html)\r\nSpecifies the provider to use for the default collation in this database. Possible values are: `icu`, `libc`. `libc` is the default. The available choices depend on the operating system and build options.\r\n\r\n#### PostgreSQL 16\r\n\r\n> Allow custom ICU collation rules to be created (Peter Eisentraut)\r\nThis is done using [`CREATE COLLATION`](https://www.postgresql.org/docs/16/sql-createcollation.html)'s new RULES clause, as well as new options for [`CREATE DATABASE`](https://www.postgresql.org/docs/16/sql-createdatabase.html), [createdb](https://www.postgresql.org/docs/16/app-createdb.html), and [initdb](https://www.postgresql.org/docs/16/app-initdb.html).\r\nhttps://www.postgresql.org/docs/16/release-16.html\r\n\r\n> [icu_locale](https://www.postgresql.org/docs/16/sql-createdatabase.html#CREATE-DATABASE-ICU-LOCALE)\r\nSpecifies the ICU locale (see [Section 24.2.2.3.2](https://www.postgresql.org/docs/16/collation.html#COLLATION-MANAGING-CREATE-ICU)) for the database default collation order and character classification, overriding the setting [`locale`](https://www.postgresql.org/docs/16/sql-createdatabase.html#CREATE-DATABASE-LOCALE). The [locale provider](https://www.postgresql.org/docs/16/sql-createdatabase.html#CREATE-DATABASE-LOCALE-PROVIDER) must be ICU. The default is the setting of [`locale`](https://www.postgresql.org/docs/16/sql-createdatabase.html#CREATE-DATABASE-LOCALE) if specified; otherwise the same setting as the template database.\r\n\r\n> [locale_provider](https://www.postgresql.org/docs/16/sql-createdatabase.html#CREATE-DATABASE-LOCALE-PROVIDER)\r\nSpecifies the provider to use for the default collation in this database. Possible values are `icu` (if the server was built with ICU support) or `libc`. By default, the provider is the same as that of the [template](https://www.postgresql.org/docs/16/sql-createdatabase.html#CREATE-DATABASE-TEMPLATE). See [Section 24.1.4](https://www.postgresql.org/docs/16/locale.html#LOCALE-PROVIDERS) for details.\r\n\r\n> [icu_rules](https://www.postgresql.org/docs/16/sql-createdatabase.html#CREATE-DATABASE-ICU-RULES)\r\nSpecifies additional collation rules to customize the behavior of the default collation of this database. This is supported for ICU only. See [Section 24.2.3.4](https://www.postgresql.org/docs/16/collation.html#ICU-TAILORING-RULES) for details.\r\n\r\n### Checklist\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52758/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 26753,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52758.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52758.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2064752053,
        "number": 50565,
        "title": "Require Rack 3",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 4,
        "created_at": "2024-01-03T22:53:34Z",
        "updated_at": "2024-09-04T21:29:28Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "As this is a major version, let's drop support to Rack 2 and keep pushing the ecosystem forward.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50565/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47848,
        "label_ids": [],
        "reactions_total_count": 26,
        "reactions_plus1": 24,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 2,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1756341024,
        "number": 48468,
        "title": "Test suite hangs after upgrading from 6.1 to 7.0",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 31,
        "created_at": "2023-06-14T08:26:54Z",
        "updated_at": "2024-09-04T20:19:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nWe have a project with a multi-database (2 databases) configuration. \r\nWhen executing the test suite like follows the tests hang after some time.\r\n\r\n```ruby\r\nPARALLEL_WORKERS=1 bin/rails test\r\n```\r\n\r\nAs you can see in the sigdump all threads get stuck in `load_interlock_aware_monitor.rb:17:in 'enter' `\r\nI am currently trying to create an example project to reproduce this issue but maybe this info is enough for now to make some conclusions.\r\n\r\n```\r\nSigdump at 2023-06-14 10:11:32 +0200 process 90089 (bin/rails)\r\n  Thread #<Thread:0x00000001023db0f0 run> status=run priority=0\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:52:in `backtrace'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:52:in `dump_backtrace'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:34:in `block in dump_all_thread_backtrace'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:33:in `each'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:33:in `dump_all_thread_backtrace'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:16:in `block in dump'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:136:in `open'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:136:in `_open_dump_path'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:14:in `dump'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/sigdump-0.2.4/lib/sigdump.rb:7:in `block in setup'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:17:in `enter'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:17:in `block in mon_enter'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/share_lock.rb:187:in `yield_shares'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/dependencies/interlock.rb:41:in `permit_concurrent_loads'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:17:in `mon_enter'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:22:in `block in synchronize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `handle_interrupt'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `synchronize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:91:in `clear_query_cache'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_handling.rb:343:in `block in clear_on_handler'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_handling.rb:342:in `each'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_handling.rb:342:in `clear_on_handler'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_handling.rb:272:in `clear_query_caches_for_current_thread'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:21:in `insert'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/persistence.rb:496:in `_insert_record'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/persistence.rb:1096:in `_create_record'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/counter_cache.rb:166:in `_create_record'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/locking/optimistic.rb:79:in `_create_record'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/attribute_methods/dirty.rb:222:in `_create_record'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/callbacks.rb:459:in `block in _create_record'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:107:in `run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:929:in `_run_create_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/callbacks.rb:459:in `_create_record'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/timestamp.rb:108:in `_create_record'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/bullet-7.0.7/lib/bullet/active_record70.rb:6:in `_create_record'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/persistence.rb:1067:in `create_or_update'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/callbacks.rb:455:in `block in create_or_update'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/autosave_association.rb:370:in `around_save_collection_association'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:929:in `_run_save_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/callbacks.rb:455:in `create_or_update'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/timestamp.rb:126:in `create_or_update'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/persistence.rb:648:in `save!'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/validations.rb:53:in `save!'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/transactions.rb:302:in `block in save!'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/transactions.rb:354:in `block in with_transaction_returning_status'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/transaction.rb:319:in `block in within_new_transaction'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:25:in `handle_interrupt'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:25:in `block in synchronize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `handle_interrupt'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `synchronize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/transaction.rb:317:in `within_new_transaction'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/database_statements.rb:316:in `transaction'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/transactions.rb:350:in `with_transaction_returning_status'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/transactions.rb:302:in `save!'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/suppressor.rb:54:in `save!'\r\n      /Users/krebbl/Projects/ProCarement/care-center/app/models/medical_report.rb:121:in `save_report_as_document'\r\n      /Users/krebbl/Projects/ProCarement/care-center/test/models/medical_report_test.rb:167:in `block (3 levels) in <class:MedicalReportTest>'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/testing/assertions.rb:34:in `assert_nothing_raised'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/testing/assertions.rb:250:in `_assert_nothing_raised_or_warn'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/testing/assertions.rb:102:in `assert_difference'\r\n      /Users/krebbl/Projects/ProCarement/care-center/test/models/medical_report_test.rb:165:in `block (2 levels) in <class:MedicalReportTest>'\r\n      /Users/krebbl/Projects/ProCarement/care-center/test/models/medical_report_test.rb:172:in `instance_exec'\r\n      /Users/krebbl/Projects/ProCarement/care-center/test/models/medical_report_test.rb:172:in `block in create_test_from_should_hash'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/test.rb:102:in `block (3 levels) in run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/test.rb:199:in `capture_exceptions'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/test.rb:97:in `block (2 levels) in run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:296:in `time_it'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/test.rb:96:in `block in run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:391:in `on_signal'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/test.rb:247:in `with_info_handler'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/test.rb:95:in `run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-reporters-1.4.3/lib/minitest/reporters.rb:48:in `run_with_hooks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:1051:in `run_one_method'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:365:in `run_one_method'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:352:in `block (2 levels) in run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:351:in `each'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:351:in `block in run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:391:in `on_signal'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:378:in `with_info_handler'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:350:in `run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/railties-7.0.5/lib/rails/test_unit/line_filtering.rb:10:in `run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:182:in `block in __run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:182:in `map'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:182:in `__run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:159:in `run'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest.rb:83:in `block in autorun'\r\n  Thread #<Thread:0x0000000109047888 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/connection_pool/reaper.rb:40 sleep> status=sleep priority=0\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/connection_pool/reaper.rb:46:in `sleep'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/connection_pool/reaper.rb:46:in `block in spawn_thread'\r\n  Thread #<Thread:0x0000000109443018@Timeout stdlib thread /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/timeout-0.3.2/lib/timeout.rb:101 sleep> status=sleep priority=0\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/timeout-0.3.2/lib/timeout.rb:113:in `sleep'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/timeout-0.3.2/lib/timeout.rb:113:in `wait'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/timeout-0.3.2/lib/timeout.rb:113:in `block (2 levels) in create_timeout_thread'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/timeout-0.3.2/lib/timeout.rb:111:in `synchronize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/timeout-0.3.2/lib/timeout.rb:111:in `block in create_timeout_thread'\r\n  Thread #<Thread:0x000000010c94b918 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:28 sleep_forever> status=sleep priority=0\r\n      <internal:thread_sync>:18:in `pop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:30:in `block (2 levels) in start'\r\n  Thread #<Thread:0x000000010c94b800 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:28 sleep_forever> status=sleep priority=0\r\n      <internal:thread_sync>:18:in `pop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:30:in `block (2 levels) in start'\r\n  Thread #<Thread:0x000000010c94b710 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:28 sleep_forever> status=sleep priority=0\r\n      <internal:thread_sync>:18:in `pop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:30:in `block (2 levels) in start'\r\n  Thread #<Thread:0x000000010c94b620 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:28 sleep_forever> status=sleep priority=0\r\n      <internal:thread_sync>:18:in `pop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:30:in `block (2 levels) in start'\r\n  Thread #<Thread:0x000000010c94b530 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:28 sleep_forever> status=sleep priority=0\r\n      <internal:thread_sync>:18:in `pop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:30:in `block (2 levels) in start'\r\n  Thread #<Thread:0x000000010c94b440 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:28 sleep_forever> status=sleep priority=0\r\n      <internal:thread_sync>:18:in `pop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:30:in `block (2 levels) in start'\r\n  Thread #<Thread:0x000000010c94b350 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:28 sleep_forever> status=sleep priority=0\r\n      <internal:thread_sync>:18:in `pop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:30:in `block (2 levels) in start'\r\n  Thread #<Thread:0x000000010c94b260 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:28 sleep_forever> status=sleep priority=0\r\n      <internal:thread_sync>:18:in `pop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/minitest-5.18.0/lib/minitest/parallel.rb:30:in `block (2 levels) in start'\r\n  Thread #<Thread:0x000000010ce4f180@worker-1 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:332 sleep_forever> status=sleep priority=0\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:17:in `enter'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:17:in `block in mon_enter'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/share_lock.rb:187:in `yield_shares'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/dependencies/interlock.rb:41:in `permit_concurrent_loads'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:17:in `mon_enter'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:22:in `block in synchronize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `handle_interrupt'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `synchronize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:128:in `cache_sql'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:107:in `select_all'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/querying.rb:54:in `_query_by_sql'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:942:in `block in exec_main_query'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:962:in `skip_query_cache_if_necessary'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:928:in `exec_main_query'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:914:in `block in exec_queries'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:962:in `skip_query_cache_if_necessary'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:908:in `exec_queries'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:695:in `load'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:250:in `records'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/bullet-7.0.7/lib/bullet/active_record70.rb:46:in `records'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:520:in `find_take'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:98:in `take'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:473:in `find_one'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:457:in `find_with_ids'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:69:in `find'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/querying.rb:22:in `find'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/core.rb:271:in `find'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:129:in `locate'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:154:in `block in locate'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:164:in `block in unscoped'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:881:in `_scoping'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:428:in `scoping'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/scoping/default.rb:43:in `unscoped'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:164:in `unscoped'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:154:in `locate'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:16:in `locate'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:148:in `deserialize_global_id'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:132:in `deserialize_argument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:43:in `block in deserialize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:43:in `map'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:43:in `deserialize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/core.rb:190:in `deserialize_arguments'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/core.rb:180:in `deserialize_arguments_if_needed'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/execution.rb:44:in `perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/instrumentation.rb:14:in `block in perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/instrumentation.rb:25:in `block in instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/notifications.rb:206:in `block in instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/notifications.rb:206:in `instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/instrumentation.rb:35:in `instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/instrumentation.rb:14:in `perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/logging.rb:18:in `block in perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/tagged_logging.rb:99:in `block in tagged'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/tagged_logging.rb:37:in `tagged'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/tagged_logging.rb:99:in `tagged'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/logging.rb:25:in `tag_logger'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/logging.rb:18:in `perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/execution.rb:24:in `block in execute'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/railtie.rb:54:in `block (4 levels) in <class:Railtie>'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/execution_wrapper.rb:92:in `wrap'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/reloader.rb:72:in `block in wrap'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/execution_wrapper.rb:92:in `wrap'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/reloader.rb:71:in `wrap'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/railtie.rb:53:in `block (3 levels) in <class:Railtie>'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/execution.rb:22:in `execute'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/queue_adapters/async_adapter.rb:70:in `perform'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:352:in `run_task'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:343:in `block (3 levels) in create_worker'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:334:in `loop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:334:in `block (2 levels) in create_worker'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:333:in `catch'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:333:in `block in create_worker'\r\n  Thread #<Thread:0x000000010d989d20@worker-2 /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:332 sleep_forever> status=sleep priority=0\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:17:in `enter'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:17:in `block in mon_enter'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/share_lock.rb:187:in `yield_shares'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/dependencies/interlock.rb:41:in `permit_concurrent_loads'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:17:in `mon_enter'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:22:in `block in synchronize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `handle_interrupt'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/concurrency/load_interlock_aware_monitor.rb:21:in `synchronize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:128:in `cache_sql'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:107:in `select_all'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/querying.rb:54:in `_query_by_sql'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:942:in `block in exec_main_query'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:962:in `skip_query_cache_if_necessary'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:928:in `exec_main_query'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:914:in `block in exec_queries'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:962:in `skip_query_cache_if_necessary'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:908:in `exec_queries'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:695:in `load'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:250:in `records'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/bullet-7.0.7/lib/bullet/active_record70.rb:46:in `records'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:520:in `find_take'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:98:in `take'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:473:in `find_one'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:457:in `find_with_ids'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation/finder_methods.rb:69:in `find'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/querying.rb:22:in `find'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/core.rb:271:in `find'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:129:in `locate'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:154:in `block in locate'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:164:in `block in unscoped'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:881:in `_scoping'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/relation.rb:428:in `scoping'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activerecord-7.0.5/lib/active_record/scoping/default.rb:43:in `unscoped'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:164:in `unscoped'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:154:in `locate'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/globalid-1.1.0/lib/global_id/locator.rb:16:in `locate'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:148:in `deserialize_global_id'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:132:in `deserialize_argument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:43:in `block in deserialize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:43:in `map'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/arguments.rb:43:in `deserialize'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/core.rb:190:in `deserialize_arguments'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/core.rb:180:in `deserialize_arguments_if_needed'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/execution.rb:44:in `perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/instrumentation.rb:14:in `block in perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/instrumentation.rb:25:in `block in instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/notifications.rb:206:in `block in instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/notifications.rb:206:in `instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/instrumentation.rb:35:in `instrument'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/instrumentation.rb:14:in `perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/logging.rb:18:in `block in perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/tagged_logging.rb:99:in `block in tagged'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/tagged_logging.rb:37:in `tagged'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/tagged_logging.rb:99:in `tagged'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/logging.rb:25:in `tag_logger'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/logging.rb:18:in `perform_now'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/execution.rb:24:in `block in execute'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/railtie.rb:54:in `block (4 levels) in <class:Railtie>'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/execution_wrapper.rb:92:in `wrap'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/reloader.rb:72:in `block in wrap'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/execution_wrapper.rb:92:in `wrap'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/reloader.rb:71:in `wrap'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/railtie.rb:53:in `block (3 levels) in <class:Railtie>'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activesupport-7.0.5/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/execution.rb:22:in `execute'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/activejob-7.0.5/lib/active_job/queue_adapters/async_adapter.rb:70:in `perform'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:352:in `run_task'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:343:in `block (3 levels) in create_worker'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:334:in `loop'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:334:in `block (2 levels) in create_worker'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:333:in `catch'\r\n      /Users/krebbl/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:333:in `block in create_worker'\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe tests should just run through\r\n\r\n### Actual behavior\r\n\r\nThe tests get stuck after some while\r\n\r\n### System configuration\r\n**Rails version**: 7.0.5\r\n**Ruby version**: 3.2.0\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48468/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "user_id": 951433,
        "closed_by_id": 28418009,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2056800530,
        "number": 50454,
        "title": "Extract Action Notifier framework for push notifications",
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "dhh",
            "id": 2741,
            "followers_url": "https://api.github.com/users/dhh/followers",
            "following_url": "https://api.github.com/users/dhh/following{/other_user}",
            "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
            "organizations_url": "https://api.github.com/users/dhh/orgs",
            "repos_url": "https://api.github.com/users/dhh/repos",
            "received_events_url": "https://api.github.com/users/dhh/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 13,
        "created_at": "2023-12-27T00:58:14Z",
        "updated_at": "2024-09-04T20:02:09Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "One of the most exciting developments in web standards this year was the full adoption of Web Push by Apple. This means we now have a reliable push notification standard that works in Safari, Chrome, and Firefox, which [reduces the need for native applications](https://world.hey.com/dhh/native-mobile-apps-are-optional-for-b2b-startups-in-2024-4c870d3e). But getting the service worker, web push configuration, and permission flow right is surprisingly complicated. We already have some great gems, like web-push, to handle some of the underlying plumbing, but putting it all together is far more complicated than it ought to be. So let's compress that complexity with a new dedicated framework.\r\n\r\nWhile compressing the complexity of Web Push is the primary motivation for Action Notifier, it's also a great time to add an plugin setup that allows us to plug in adapters for services like pinpoint or other native platform protocols. But the intention is not to support every possible delivery format for notifications under the sun (like SMS and definitely not email, we have Action Mailer for that).\r\n\r\nThe first stab at this will be an extraction from ONCE #1. So until there's a first gem for this, let's hold any more detailed discussion of features or capabilities.\r\n\r\nPrior art that'll be examined: https://github.com/palkan/active_delivery + [Notified](https://github.com/excid3/noticed)",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50454/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "label_ids": [],
        "reactions_total_count": 60,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 60,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2056788843,
        "number": 50452,
        "title": "Add structured logging next to developer logging",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11540740,
            "number": 92,
            "title": "8.1.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2024-09-04T20:01:58Z",
            "updated_at": "2024-09-17T22:42:43Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 10,
        "created_at": "2023-12-27T00:26:24Z",
        "updated_at": "2024-09-04T20:01:58Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "When you want to aggregate the data from your Rails application into a data analysis platform, it's a real pain trying to parse the developer-focused log lines that Rails spits out by default. In addition to these log lines, which are great in development and for manual inspection, we should add structured json logging on a per-request basis that can easily be digested by analytics.\r\n\r\nBoth Shopify and 37signals have been using in-house structured logging for a long time, so extracting something from those battle-tested scenarios is the path we intend to go.\r\n\r\ncc @Jeremy @rafaelfranca ",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50452/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 128,
        "reactions_plus1": 80,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 12,
        "reactions_confused": 0,
        "reactions_heart": 36,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2498134898,
        "number": 52753,
        "title": "`ActiveRecord::Base.attributes_for_inspect` should default to `:all`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 9,
        "created_at": "2024-08-30T20:35:24Z",
        "updated_at": "2024-09-04T19:47:12Z",
        "closed_at": "2024-09-04T19:47:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nAfter updating to Rails 7.2, we noticed that attributes were missing when inspecting AR objects in a production-like console. We found #49765. After discussing this with @rafaelfranca and the author of the PR, @andrewn617, we came to the conclusion that this should default to `:all`. \r\n\r\n### Detail\r\n\r\nThis PR changes the default of `attributes_for_inspect` to `:all`. There's a commit on this branch that also updated the Rails 7.2 new defaults initializer, but I removed that as it's not on main and I'm unsure how to handle that.\r\n\r\n### Additional information\r\n\r\nThis PR is going off of a discussion with @rafaelfranca. It's possible there is more to change here to make this work properly, and I apologize if thats the case. Happy to make more updates. I'm curious if, since we want new Rails applications to have this default set to true, if the `production.rb` environment file should be updated to include the configuration change.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52753/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 7348,
        "closed_by_id": 7348,
        "label_ids": [
            107195,
            150377
        ],
        "reactions_total_count": 5,
        "reactions_plus1": 4,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52753.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52753.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2503309681,
        "number": 52786,
        "title": "Fix authentication generator double signature",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-03T16:31:46Z",
        "updated_at": "2024-09-04T19:37:59Z",
        "closed_at": "2024-09-04T19:06:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Related to https://github.com/rails/rails/pull/52504\r\n\r\nCloses https://github.com/rails/rails/issues/52799\r\n\r\nBefore this commit, the session id stored in the cookies was signed twice:\r\n\r\n- Once with `cookies.signed`\r\n- Once with `session.signed_id`\r\n\r\n```rb\r\ndef set_current_session(session)\r\n  # ...\r\n  cookies.signed.permanent[:session_token] = { value: session.signed_id, httponly: true, same_site: :lax }\r\nend\r\n```\r\n\r\nThis commit removes the double signature.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52786/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 33979976,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 2,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52786.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52786.patch",
        "pull_request_merged_at": "2024-09-04T19:06:22Z"
    },
    {
        "id": 2505106737,
        "number": 52799,
        "title": "Unnecessary double signature in authentication generator",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-04T11:43:02Z",
        "updated_at": "2024-09-04T19:06:23Z",
        "closed_at": "2024-09-04T19:06:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In the `Authentication` concern of the authentication generator ([link to code](https://github.com/rails/rails/blob/main/railties/lib/rails/generators/rails/authentication/templates/controllers/concerns/authentication.rb)), we store the signed id of the session in the signed cookies: \r\n\r\n```rb\r\ndef set_current_session(session)\r\n  Current.session = session\r\n  cookies.signed.permanent[:session_token] = { value: session.signed_id, httponly: true, same_site: :lax }\r\nend\r\n```\r\n\r\nAs the cookie is already signed, there is no need to store the `session.signed_id`. We could simply store the `session.id`.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52799/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 33979976,
        "closed_by_id": 2741,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2056734792,
        "number": 50443,
        "title": "Solid Cache should be the default caching backend for Rails 8",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 10350173,
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 24,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-09-20T22:30:41Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 29,
        "created_at": "2023-12-26T22:08:12Z",
        "updated_at": "2024-09-04T18:53:55Z",
        "closed_at": "2024-09-04T18:53:55Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Like with Solid Queue, [Solid Cache](https://github.com/rails/solid_cache) gives us a database-agnostic backend for Rails.cache that works well as an out-of-the-box default in production – without any configuration needed or dependencies (like Redis) required.\r\n\r\nThe tables should be setup out of the box with \"rails new\", but you should be able to avoid this using `--skip-solid-cache` or just `--skip-solid`.\r\n\r\nWork outstanding:\r\n\r\n- [ ] Add size-based trimming to prevent SC from filling up tiny DBs.\r\n- [ ] Release Solid Cache 1.0\r\n\r\ncc @djmb",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50443/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 22,
        "reactions_plus1": 13,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 3,
        "reactions_rocket": 6,
        "reactions_eyes": 0
    },
    {
        "id": 2503995843,
        "number": 52790,
        "title": "Add Solid Cache (and get ready for Solid Queue)",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-09-03T23:36:00Z",
        "updated_at": "2024-09-04T18:49:46Z",
        "closed_at": "2024-09-04T18:49:44Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Solid Cache will be the new default caching backend for production deployments out of the box in Rails 8. We're also going to add Solid Queue by default, and both solid options will be bundled behind the same `--skip-solid` flag.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52790/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 9,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 7,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52790.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52790.patch",
        "pull_request_merged_at": "2024-09-04T18:49:44Z"
    },
    {
        "id": 2487204630,
        "number": 52714,
        "title": "[Bug][ActiveRecord] Callbacks are called multiple times when preloading `includes(...)` is used",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-08-26T16:01:03Z",
        "updated_at": "2024-09-04T18:05:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Where you preload some associations with `includes(:association)` callbacks are called multiple times.\r\n\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  gem 'rails'\r\n  gem 'minitest-rails'\r\n  gem 'sqlite3', '~> 1.4'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:', query_cache: false)\r\nActiveRecord::Base.logger = Logger.new(nil)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table 'fields', force: :cascade do |t|\r\n    t.bigint 'parent_id'\r\n\r\n    t.string :name\r\n\r\n    t.integer :position\r\n    t.index %i[parent_id position], unique: true\r\n  end\r\n\r\n  create_table 'posts', force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table 'post_values', force: :cascade do |t|\r\n    t.bigint 'parent_id'\r\n    t.references :post, null: true\r\n    t.references :field, null: false\r\n\r\n    t.string :value\r\n\r\n    t.integer :position\r\n    t.index %i[parent_id position], unique: true\r\n  end\r\nend\r\n\r\nDESTROY_EVENTS = []\r\n\r\nclass Field < ActiveRecord::Base\r\n  before_destroy { DESTROY_EVENTS << { self.class.to_s => self.attributes } }\r\n\r\n  belongs_to :parent, class_name: 'Field', inverse_of: :subfields, optional: true\r\n\r\n  has_many :subfields, foreign_key: :parent_id, class_name: 'Field', dependent: :destroy\r\n  has_many :post_values, dependent: :destroy, inverse_of: :parent\r\n\r\n  accepts_nested_attributes_for :post_values, allow_destroy: true, reject_if: :all_blank\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :post_value, dependent: :destroy\r\n\r\n  accepts_nested_attributes_for :post_value, allow_destroy: true, reject_if: :all_blank\r\nend\r\n\r\nclass PostValue < ActiveRecord::Base\r\n  before_destroy { DESTROY_EVENTS << { self.class.to_s => self.attributes } }\r\n\r\n  belongs_to :field, inverse_of: :post_values\r\n  belongs_to :post, inverse_of: :post_value, optional: true\r\n  belongs_to :parent, class_name: 'PostValue', inverse_of: :subvalues, optional: true\r\n\r\n  has_many :subvalues,\r\n           -> { order(position: :asc) },\r\n           foreign_key: :parent_id,\r\n           class_name: 'PostValue',\r\n           dependent: :destroy,\r\n           inverse_of: :parent\r\n\r\n  accepts_nested_attributes_for :subvalues, allow_destroy: true, reject_if: :all_blank\r\nend\r\n\r\ndescribe \"ActiveRecord Bug\" do\r\n  let(:post) { Post.create!(name: 'Post 1') }\r\n  \r\n  let(:field) do\r\n    Field.create!(\r\n      name: 'Field 1',\r\n      position: 1,\r\n      subfields: [\r\n        Field.new(name: 'Field 1.1', subfields: [\r\n                    Field.new(name: 'Field 1.1.1', subfields: [\r\n                                Field.new(name: 'Field 1.1.1.1'),\r\n                                Field.new(name: 'Field 1.1.1.2'),\r\n                                Field.new(name: 'Field 1.1.1.3')\r\n                              ]),\r\n                    Field.new(name: 'Field 1.1.2', subfields: [\r\n                                Field.new(name: 'Field 1.1.2.1'),\r\n                                Field.new(name: 'Field 1.1.2.2'),\r\n                                Field.new(name: 'Field 1.1.2.3')\r\n                              ]),\r\n                    Field.new(name: 'Field 1.1.3', subfields: [\r\n                                Field.new(name: 'Field 1.1.3.1'),\r\n                                Field.new(name: 'Field 1.1.3.2'),\r\n                                Field.new(name: 'Field 1.1.3.3')\r\n                              ])\r\n                  ]),\r\n        Field.new(name: 'Field 1.2', subfields: [\r\n                    Field.new(name: 'Field 1.2.1', subfields: [\r\n                                Field.new(name: 'Field 1.2.1.1'),\r\n                                Field.new(name: 'Field 1.2.1.2'),\r\n                                Field.new(name: 'Field 1.2.1.3')\r\n                              ]),\r\n                    Field.new(name: 'Field 1.2.2', subfields: [\r\n                                Field.new(name: 'Field 1.2.2.1'),\r\n                                Field.new(name: 'Field 1.2.2.2'),\r\n                                Field.new(name: 'Field 1.2.2.3')\r\n                              ]),\r\n                    Field.new(name: 'Field 1.2.3', subfields: [\r\n                                Field.new(name: 'Field 1.2.3.1'),\r\n                                Field.new(name: 'Field 1.2.3.2'),\r\n                                Field.new(name: 'Field 1.2.3.3')\r\n                              ])\r\n                  ])\r\n      ]\r\n    )\r\n  end\r\n  \r\n  let(:post_values) do\r\n    PostValue.create!(\r\n      field: field,\r\n      value: 'Value 1',\r\n      subvalues: [\r\n        PostValue.new(value: 'Value 1.1', field: field.subfields[0], subvalues: [\r\n                        PostValue.new(value: 'Value 1.1.1', field: field.subfields[0].subfields[0], subvalues: [\r\n                                        PostValue.new(value: 'Value 1.1.1.1',\r\n                                                      field: field.subfields[0].subfields[0].subfields[0]),\r\n                                        PostValue.new(value: 'Value 1.1.1.2',\r\n                                                      field: field.subfields[0].subfields[0].subfields[1]),\r\n                                        PostValue.new(value: 'Value 1.1.1.3',\r\n                                                      field: field.subfields[0].subfields[0].subfields[2])\r\n                                      ])\r\n                      ]),\r\n        PostValue.new(value: 'Value 1.2', field: field.subfields[0], subvalues: [\r\n                        PostValue.new(value: 'Value 1.2.1', field: field.subfields[1].subfields[0], subvalues: [\r\n                                        PostValue.new(value: 'Value 1.1.1.1',\r\n                                                      field: field.subfields[1].subfields[0].subfields[0]),\r\n                                        PostValue.new(value: 'Value 1.1.1.2',\r\n                                                      field: field.subfields[1].subfields[0].subfields[1]),\r\n                                        PostValue.new(value: 'Value 1.1.1.3',\r\n                                                      field: field.subfields[1].subfields[0].subfields[2])\r\n                                      ])\r\n                      ])\r\n      ]\r\n    )\r\n  end\r\n  \r\n  def setup\r\n    post\r\n    field\r\n    post_values\r\n  end\r\n  \r\n  # def test_no_duplicate_events_without_preloading\r\n  #   DESTROY_EVENTS.clear\r\n\r\n  #   Field.find_by(parent_id: nil).destroy!\r\n  \r\n  #   puts \"\\nNo preloading: #{DESTROY_EVENTS.count} == #{DESTROY_EVENTS.uniq.count}\\n\"\r\n    \r\n  #   assert_equal DESTROY_EVENTS.count, DESTROY_EVENTS.uniq.count\r\n  # end\r\n  \r\n  def test_no_duplicate_events_with_preloading\r\n    DESTROY_EVENTS.clear\r\n\r\n    Field.includes(\r\n      subfields: {\r\n        subfields: [:subfields, :post_values], \r\n        post_values: [:subvalues],\r\n      },\r\n      post_values: {\r\n        subvalues: [:subvalues]\r\n      }\r\n    ).find_by(parent_id: nil).destroy!\r\n      \r\n      \r\n    # puts \"\\nWith preloading: #{DESTROY_EVENTS.count} == #{DESTROY_EVENTS.uniq.count}\\n\"\r\n    assert_equal DESTROY_EVENTS.count, DESTROY_EVENTS.uniq.count\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nCallbacks should behave the same with and without preloading associations\r\n\r\n### Actual behavior\r\nThere are duplicated calls for the same callback\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.3.4\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52714/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 490234,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2501407476,
        "number": 52774,
        "title": "Hoist `nil` check out of loop",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-02T18:02:23Z",
        "updated_at": "2024-09-04T17:28:48Z",
        "closed_at": "2024-09-04T17:28:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because we needlessly repeat a `nil` check for every element in an Array, and every key/value pair in a Hash.\r\n\r\n### Detail\r\n\r\nThis Pull Request tweaks the implementation of `Array#as_json` and `Hash#as_json`\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] ~Tests are added or updated if you fix a bug or add a feature.~\r\n* [x] ~CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.~\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52774/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5703449,
        "closed_by_id": 47848,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52774.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52774.patch",
        "pull_request_merged_at": "2024-09-04T17:28:47Z"
    },
    {
        "id": 2505004392,
        "number": 52798,
        "title": "Fix `find_by_token_for` for models with composite primary keys",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-04T10:58:36Z",
        "updated_at": "2024-09-04T14:41:35Z",
        "closed_at": "2024-09-04T14:35:00Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #52796.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52798/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 160941,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52798.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52798.patch",
        "pull_request_merged_at": "2024-09-04T14:35:00Z"
    },
    {
        "id": 2504864994,
        "number": 52796,
        "title": "`token_for` does not work with composite primary keys",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-04T10:00:14Z",
        "updated_at": "2024-09-04T14:35:01Z",
        "closed_at": "2024-09-04T14:35:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n```\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\nrequire \"pry\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nActiveRecord::Base.generated_token_verifier = ActiveSupport::MessageVerifier.new(\"secret\")\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true, primary_key: %i[user_id account_id] do |t|\r\n    t.bigint \"user_id\", null: false\r\n    t.bigint \"account_id\", null: false\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  generates_token_for :test\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    Post.create!(user_id: 1, account_id: 1)\r\n    token = Post.first.generate_token_for(:test)\r\n    post = Post.find_by_token_for(:test, token)\r\n\r\n    assert post\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe post can be retrieved by the token. \r\n\r\n### Actual behavior\r\n```\r\nArgumentError: Expected corresponding value for [\"user_id\", \"account_id\"] to be an Array\r\n```\r\nis raised. \r\n\r\n### System configuration\r\n**Rails version**:\r\n`8.0.0.alpha`\r\n\r\n**Ruby version**:\r\n`ruby 3.3.1 (2024-04-23 revision c56cd86388) [arm64-darwin23]`\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52796/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2853450,
        "closed_by_id": 160941,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1953737551,
        "number": 49717,
        "title": "Rails 7.1 - can't define enums for attributes which don't exist in table",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11472308,
            "number": 90,
            "title": "7.2.2",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 5,
            "state": "open",
            "created_at": "2024-08-21T21:24:04Z",
            "updated_at": "2024-09-20T18:52:26Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 46,
        "created_at": "2023-10-20T07:51:32Z",
        "updated_at": "2024-09-04T13:45:05Z",
        "closed_at": "2024-08-26T17:07:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Not sure if this is an intended change or not. Pre 7.1, I could define an attr on a model using `attribute` and define enum values for it, then use enum helper methods. I'm using this heavily in my current project for i18ns etc, so defining the enum values as an array and manually validating won't cover all my use cases\r\n\r\nSince 7.1, this isn't possible.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  attribute :topic\r\n  enum topic: %i[sports politics entertainment]\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    post.assign_attributes(topic: :sports)\r\n\r\n    assert_equal true, post.sports?\r\n  end\r\nend# frozen_string_literal: true\r\n\r\n\r\n```\r\n\r\n### Expected behavior\r\nPost should instantiate correctly and can use enum helper methods\r\n\r\n### Actual behavior\r\nError thrown\r\n\r\n`RuntimeError: Unknown enum attribute 'topic' for Post`\r\n\r\n### System configuration\r\n**Rails version**: 7.1.1\r\n\r\n**Ruby version**: ruby 3.1.2p20\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49717/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 40039308,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 435006400,
        "number": 36027,
        "title": "create_or_find_by doesn't attempt to find the record when you also have validates_uniqueness_of :field",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2019-04-19T00:17:39Z",
        "updated_at": "2024-09-04T12:44:38Z",
        "closed_at": "2021-06-29T20:44:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n``` ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :email\r\n    t.index :email, unique: true\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.string :email\r\n    t.index :email, unique: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates :email, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_without_validation\r\n    count = Post.count\r\n    post = Post.create_or_find_by!(email: 'test@example.com')\r\n    assert_equal count+1, Post.count\r\n\r\n    post2 = Post.create_or_find_by!(email: 'test@example.com')\r\n    assert_equal count+1, Post.count # count didn't change\r\n    assert_equal post.id, post2.id\r\n  end\r\n\r\n  def test_with_validation\r\n    count = Comment.count\r\n    comment = Comment.create_or_find_by!(email: 'test@example.com')\r\n    assert_equal count+1, Comment.count\r\n\r\n    # raises ActiveRecord::RecordInvalid: Validation failed: Email has already been taken\r\n    comment2 = Comment.create_or_find_by!(email: 'test@example.com')\r\n    assert_equal count+1, Comment.count\r\n    assert_equal comment.id, comment2.id\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`create_or_find_by` should find the existing record when there is a uniqueness validation on the field.\r\n\r\n### Actual behavior\r\nAn `ActiveRecord::RecordInvalid` exception is raised because the record is validated before it is created, which checks the database and finds an existing record. `create_or_find_by` doesn't get the `ActiveRecord::RecordNotUnique` exception it is expecting so it doesn't attempt to `find` the record.\r\n\r\n### System configuration\r\n**Rails version**: master\r\n\r\n**Ruby version**: ruby 2.5.3p105\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/36027/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 441,
        "closed_by_id": 5634381,
        "label_ids": [
            41328116
        ],
        "reactions_total_count": 6,
        "reactions_plus1": 5,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 1,
        "reactions_eyes": 0
    },
    {
        "id": 2417571103,
        "number": 52359,
        "title": "Fix `find_or_initialize_by` for finding by associations with composite primary keys",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-07-18T23:42:13Z",
        "updated_at": "2024-09-04T10:43:05Z",
        "closed_at": "2024-07-19T20:21:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #52358.\r\n\r\nThe problem was that when a primary key includes `\"id\"` column, then we should use `id_value` method to get its value.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52359/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 1080678,
        "label_ids": [
            107191,
            377277835
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52359.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52359.patch",
        "pull_request_merged_at": "2024-07-19T20:21:05Z"
    },
    {
        "id": 2060189735,
        "number": 50483,
        "title": "Warning on serialize from ActiveStorage",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-12-29T15:21:41Z",
        "updated_at": "2024-09-04T10:20:23Z",
        "closed_at": "2024-01-16T09:43:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "```\r\nDEPRECATION WARNING: Passing the class as positional argument is deprecated and will be removed in Rails 7.2.\r\n\r\nPlease pass the class as a keyword argument:\r\n\r\n  serialize :metadata, type: Object\r\n```\r\n\r\nComes from:\r\n\r\n```\r\nhas_one_attached :csv_file\r\n```\r\n\r\nruby 3.2.2 (2023-03-30 revision e51014f9c0) +YJIT [arm64-darwin22]\r\n\r\nRails 7.1.2\r\n\r\n------\r\n\r\nIt seems like the issue is coming from rails, this happened after the upgrade to rails 7.1",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50483/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 71096653,
        "closed_by_id": 71096653,
        "label_ids": [
            664533972
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2504646726,
        "number": 52794,
        "title": "[RF-DOCS] Rails Routing Guide [ci-skip] (#52521)",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-04T08:25:33Z",
        "updated_at": "2024-09-04T08:55:33Z",
        "closed_at": "2024-09-04T08:55:16Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Here are some of the things addressed from this Guide.\r\n\r\n- [X] We mention Rack application right away, good place to link to the [Rack guide](https://edgeguides.rubyonrails.org/rails_on_rack.html).\r\n- [X] Would it make sense to link \"CRUD operation\" to something like the [AR Basics CRUD](https://edgeguides.rubyonrails.org/active_record_basics.html#crud-reading-and-writing-data) section? We don't _always_ need to tie CRUD to database, it's more about the concept.\r\n- [X] Under Path and URL helpers, it might make sense to turn that list into a table to make it easier to scan?\r\n- [X] Singular resources starts with examples of using get, maybe it should be specific to resource and leave get to Non-Resourceful Routes section? That section doesn't start with \"simple\" examples.\r\n- [X] \"Because you might want to use the same controller for a singular route (/account) and a plural route (/accounts/45), singular resources map to plural controllers.\" => I've never seen this be the case, I think this can be reworded to explain that singular resources map to plural controllers, without this idea of \"use the same controller\".\r\n- [X] Under shallow nesting, there's a long example with three child resources to demonstrante that \"all get the same shallow behavior\"... maybe that'd be better with just 2 so that the table doesn't get so big/long.\r\n- [X] Under creating paths and URLs from objects, it explains how to create paths from objects (i.e. polymorphic routing), that may be a good segway to show that it uses the route key / singular route key from ActiveModel::Naming to figure that out. (could be a note/tip of sorts for example, just thought it'd be good to make that connection somewhere) Also ActiveModel::Conversion#to_param would be used to convert the IDs.\r\n- [X] member and collection are explained under \"Adding more RESTful actions\", but there's not a good clarification of what the terms represent, i.e. that member refers to routes acting on a single element, much like show/update/destroy, and collection referes to routes acting on multiple (or a collection of) elements like index. Is it worth clarifying further?\r\n- [X] Consider: Constraints could be a main section rather than live under non-resourceful routes, because generally speaking, they can be applied anywhere, even for resources. The only specific one would be match...via: --> Good point. Tried to move the 3 or 4 sub-sections related to constraints, but couldn't decide where they fit, after non-resource routes or before, and how to transition into them...leaving it as is for now.\r\n- [X] Under Route Globbing and Wildcard Segments there's a waning about passing format: false related to \"old 3.0.x behavior\" which can either be explained better (what's the meaning of passing format: false), and/or potentially removed (at least the mention to \"3.0.x behavior\" could be removed) \r\n- [X] When explaining about using draw to break down very large route files, that subsection could be a caution/warning of sorts to call more attention to the fact that most people shouldn't need it.\r\n- [X] We could explain how to check routes via console with Rails.application.routes.url_helpers under inspecting routes.\r\n- [X] Document the somewhat recent `--unused` option to rails routes. ([Reference](https://github.com/rails/rails/pull/51316#issuecomment-1994428608))\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because [REPLACE ME]\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52794/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 28561,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52794.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52794.patch",
        "pull_request_merged_at": "2024-09-04T08:55:16Z"
    },
    {
        "id": 2504647436,
        "number": 52795,
        "title": "Cherry pick 69c86f9606",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-04T08:25:49Z",
        "updated_at": "2024-09-04T08:55:31Z",
        "closed_at": "2024-09-04T08:55:27Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because [REPLACE ME]\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52795/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 28561,
        "label_ids": [
            107188,
            107189,
            300028327,
            1174770998
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52795.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52795.patch",
        "pull_request_merged_at": "2024-09-04T08:55:27Z"
    },
    {
        "id": 2451668756,
        "number": 52523,
        "title": "[RF-DOCS]Active Record Associations Guide [ci-skip]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-06T20:48:18Z",
        "updated_at": "2024-09-04T08:22:42Z",
        "closed_at": "2024-09-04T08:22:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nUpdate the Active Record Association Documentation.\r\n\r\n### Additional information\r\n\r\n- [x] The images used to show the relationships of the different types of associations have both the table declarations, as well as a code sample, but the code sample is also in the guide. We could probably simplify the images by cutting off the code samples from them and leaving them in the guide code.\r\n- [x] belongs_to section mentions bi-directional association and links to it within the same guide, but doesn't do the same for has_one and has_many, mentioned right after in the same paragraph.\r\n- [x] There's a note about using bigint :supplier_id in the section between belongs_to and has_one, but up until that point it's always been using belongs_to in migrations... it's probably something that doesn't need to be in this area of the guide.\r\n- [x] The has_many :through vs has_and_belongs_to_many section ends with a composite keys mention, we could link to the new guide there.\r\n- [x] Associations between models with composite PKs may be simplified.\r\n- [x] One example in bi-directional associations mentions Book belongs_to :writer, but then uses book.author a few lines below, which is incorrect.\r\n- [x] STI section could be expanded, it's very useful in certain situations.\r\n- [x] Add more info and make it clear\r\n- [x] Group sections better\r\n- [x] Amend the References section to be integrated with associations \r\n- [x] Abstract and remove duplications for options and scopes   \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52523/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2786819,
        "closed_by_id": 28561,
        "label_ids": [
            150377,
            6434393529
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52523.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52523.patch",
        "pull_request_merged_at": "2024-09-04T08:22:42Z"
    },
    {
        "id": 2385109955,
        "number": 52253,
        "title": "Add tests for streaming chunks.",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-07-02T03:24:05Z",
        "updated_at": "2024-09-04T05:40:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThe tests for streaming responses, as modified in <https://github.com/rails/rails/pull/52094> are insufficient to determine whether the response included multiple chunks. We should ensure that this is the case, as well as ensuring that the response body conforms to an \"Enumerable Body\" as defined by the Rack specification when `stream: true` is requested.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52253/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 30030,
        "label_ids": [
            107189,
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52253.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52253.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2490670856,
        "number": 52726,
        "title": "[#52699] Update `TimeZoneConverter#==` method to make it symmetric",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-28T01:22:07Z",
        "updated_at": "2024-09-04T01:24:18Z",
        "closed_at": "2024-08-28T18:55:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "So it can properly compare `other` with `itself`, and remove the comparison of type, scale, limit & precision.\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because better implementation suggested on #52699.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes  `TimeZoneConverter#==` method to make it symmetric.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52726/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 108208,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52726.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52726.patch",
        "pull_request_merged_at": "2024-08-28T18:55:23Z"
    },
    {
        "id": 1046326846,
        "number": 43603,
        "title": "ActiveRecord::Relation#each_slice runs an extra query before the select query",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-11-06T00:44:10Z",
        "updated_at": "2024-09-03T23:58:59Z",
        "closed_at": "2022-02-28T21:15:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nUsing Rails version >= 5.0, run `#each_slice` on an `ActiveRecord::Relation` object and see that a count query followed by a select query are made.\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nTo match the behavior from Rails 4: When calling `#each_slice` on an `ActiveRecord::Relation` object, it only generates a select query.\r\n[Rails 4 Test Case](https://gist.github.com/ttstarck/2e29c913626bc39ffee0715cfa4e8254#file-rails_4_test-rb)\r\n[Rails 4 Test Run Output](https://gist.github.com/ttstarck/2e29c913626bc39ffee0715cfa4e8254#file-rails_4_test_run_output-txt)\r\n\r\n``` ruby\r\n# Using Post defined in Rails 4 Test Case above\r\nActiveRecord::Base.logger = Logger.new(STDOUT);\r\nPost.all.class\r\n=> Post::ActiveRecord_Relation\r\nPost.all.each_slice(5) {}\r\nD, [2021-11-05T17:15:11.496169 #35496] DEBUG -- :   Post Load (0.2ms)  SELECT \"posts\".* FROM \"posts\"\r\n=> nil\r\n```\r\n\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nCalling `#each_slice` on an `ActiveRecord::Relation` object generates two queries: a count query followed by a select query.\r\n\r\n[Rails 6 Test Case](https://gist.github.com/ttstarck/2e29c913626bc39ffee0715cfa4e8254#file-rails_6_bug_test-rb)\r\n[Rails 6 Test Run Output](https://gist.github.com/ttstarck/2e29c913626bc39ffee0715cfa4e8254#file-rails_6_bug_test_run_output-txt)\r\n\r\n``` ruby\r\n# Using Post defined in the Rails 6 Test Case above\r\nActiveRecord::Base.logger = Logger.new(STDOUT);\r\nPost.all.class\r\n=> Post::ActiveRecord_Relation\r\nPost.all.each_slice(5) {}\r\nD, [2021-11-05T17:11:12.366823 #35456] DEBUG -- :    (0.2ms)  SELECT COUNT(*) FROM \"posts\"\r\nD, [2021-11-05T17:11:12.367303 #35456] DEBUG -- :   Post Load (0.1ms)  SELECT \"posts\".* FROM \"posts\"\r\n=> nil\r\n```\r\n\r\n### Possible Fix\r\nIn Rails 4, `#each_slice` was not defined on the relation object, but was instead run against the `.to_a` of the relation (see [here](https://github.com/rails/rails/blob/4-2-stable/activerecord/lib/active_record/relation/delegation.rb#L131-L132)).\r\n\r\nHowever in Rails 5 and beyond, `#each_slice` was missed when adding the delegations in `ActiveRecord::Delegation` to the `records` method. A fix for this would be to add `#each_slice` into that list defined in `ActiveRecord::Delegation` [here](https://github.com/rails/rails/blob/5-2-stable/activerecord/lib/active_record/relation/delegation.rb#L71-L74)\r\n``` ruby\r\nmodule ActiveRecord::Delegation\r\n  delegate :each_slice, to: :records\r\nend\r\n```\r\n\r\n[Rails 6 Test with Fix Added](https://gist.github.com/ttstarck/2e29c913626bc39ffee0715cfa4e8254#file-rails_6_fixed_test-rb)\r\n[Rails 6 Test Run with Fix Added](https://gist.github.com/ttstarck/2e29c913626bc39ffee0715cfa4e8254#file-rails_6_fixed_test_run-txt)\r\n\r\n\r\n### System configuration\r\n**Rails version**: Bug exists in versions >= 5.0, tested on 5.2.6 and 6.1.4.1\r\n**Ruby version**: 2.6.1",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/43603/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 16530564,
        "closed_by_id": 28418009,
        "label_ids": [
            107191,
            12449438
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2503755607,
        "number": 52788,
        "title": "Add require for `ClassAttribute` in class/attribute core extension",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-09-03T20:46:44Z",
        "updated_at": "2024-09-03T23:46:27Z",
        "closed_at": "2024-09-03T20:57:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because rails/rails@1962e8d introduced the `ClassAttribute` class. We need to require it in the `core_ext/class/attribute.rb` or else we will get a const missing error in gems or apps that are only requiring that core extension and not all of active support ([for example](https://github.com/Shopify/app_profiler/blob/6cec5eb427b1033a0866837767fb0b344aee96ec/lib/app_profiler.rb#L3)).\r\n\r\n### Detail\r\n\r\nAdd a require.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52788/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39735028,
        "closed_by_id": 44640,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52788.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52788.patch",
        "pull_request_merged_at": "2024-09-03T20:57:39Z"
    },
    {
        "id": 2501583447,
        "number": 52778,
        "title": "Use 127.0.0.1 instead of localhost so Docker DB can be easily used",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-02T21:06:29Z",
        "updated_at": "2024-09-03T23:20:59Z",
        "closed_at": "2024-09-03T23:20:58Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "It's become common practice to run the development database out of Docker. To connect to a Docker-based MySQL DB out of the box, we need to use 127.0.0.1 instead of localhost.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52778/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52778.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52778.patch",
        "pull_request_merged_at": "2024-09-03T23:20:57Z"
    },
    {
        "id": 2497591086,
        "number": 52749,
        "title": "Fix migration log message for down operations",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-30T15:44:21Z",
        "updated_at": "2024-09-03T23:11:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because when **reverting** a migration I was getting the message `Migrating to AddUsernameColumnToUser (20240827174134)`, which doesn't seem like an accurate description of the operation.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the message based on the operation.\r\n- `up` operation: message keeps being the same (`Migrating to AddUsernameColumnToUser (20240827174134)`)\r\n- `down` operation: message changed (`Reverting AddUsernameColumnToUser (20240827174134)`)\r\n\r\n`AddUsernameColumnToUser` is just an example of a migration name\r\n`20240827174134` is the timestamp\r\n\r\n### Additional information\r\n\r\n-\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52749/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 824254,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52749.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52749.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1955519183,
        "number": 49733,
        "title": "Since rails 7.1, executing with a disconnected Mysql2Adapter no longer raises ConnectionNotEstablished.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-21T14:39:24Z",
        "updated_at": "2024-09-03T22:01:00Z",
        "closed_at": "2023-10-28T09:44:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Since rails 7.1, executing with a disconnected Mysql2Adapter no longer raises ConnectionNotEstablished.\r\n\r\n### Steps to reproduce\r\nin my project, conn.disconnect! is used to disconnect the connection after detecting a temporary database connection failure.\r\n (e.g. failover / connection failure due to restart...etc)\r\n\r\nUntil Rails 7.0.8, when using a disconnected connection, ActiveRecord::ConnectionNotEstablished would be raised and conn.execute would fail.\r\n(I have a mechanism to try to reconnect using this ConnectionNotEstablished Error)\r\n\r\nSince Rails 7.1.0, conn.execute does not raise an error despite being disconnected.\r\n\r\nPerhaps this change was made by this PR ( https://github.com/rails/rails/pull/44591).\r\n\r\nAre there any plans to modify it to raise the error?\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", '7.1.1' # failed\r\n  # gem \"rails\", '7.1.0' # failed\r\n  # gem \"rails\", '7.0.8' # passed\r\n\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\ndb_name = \"test_connection\"\r\noptions = { host: \"127.0.0.1\", port: 3306 }\r\n\r\nadapter = 'mysql2'\r\n\r\nActiveRecord::Base.establish_connection(adapter: adapter, username: \"root\", **options)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Base.connection.drop_database db_name\r\nActiveRecord::Base.connection.create_database db_name\r\nActiveRecord::Base.establish_connection(adapter: adapter, username: \"root\", database: db_name, **options)\r\nActiveRecord::Schema.define do\r\n  create_table :users, force: true do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_disconnected_conn_execute\r\n    conn = User.connection\r\n    conn.disconnect!\r\n     # v7.0.8: pass, v7.1.0 and v7.1.1: failed\r\n    assert_raises(ActiveRecord::ConnectionNotEstablished) { conn.execute(\"select 1;\") }\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nConnectionNotEstablished is raised in case of execute using a disconnected connection.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nThe execute method does not raise an error.\r\nexecute completes successfully and returns Mysql::Result.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.1\r\n**Ruby version**: 3.2.2\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49733/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 20330326,
        "closed_by_id": 44640,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1760067059,
        "number": 48495,
        "title": "Added `foregin_key` to the allowed validation options for managing columns and tables in migration",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-16T07:16:19Z",
        "updated_at": "2024-09-03T20:12:28Z",
        "closed_at": "2023-06-19T01:07:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because raise an error when adding columns in a new migration if `foregin_key` is included. \r\n\r\n### Detail\r\n\r\nThis Pull Request changes fix an error when adding columns in a new migration if `foregin_key` is included.\r\nThe error occurs in cases where `foregin_key` is specified such as `add_reference` in an old migration definition. For example, the bellow:\r\n\r\n```ruby\r\nclass ChangeTableUsers < ActiveRecord::Migration[6.0]\r\n  def change\r\n    add_reference :users, :posts, foregin_key: true\r\n  end\r\nend\r\n\r\n#=> eval error: Unknown key: :foregin_key. Valid keys are: :limit, :precision, :scale, :default, :null, :collation, :comment, :primary_key, :if_exists, :if_not_exists, :auto_increment, :charset, :as, :size, :unsigned, :first, :after, :type, :stored\r\n```\r\n\r\nAn error is generated if an option other than the allowed option is entered. The `foregin_key` is not included in the allowed options, but it is necessary, so it was added.\r\n\r\nAlso, `add_reference` is now compatible with lower versions.\r\n\r\n### Additional information\r\n\r\n- Modified PR: https://github.com/rails/rails/pull/46178\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48495/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 18366969,
        "closed_by_id": 18366969,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/48495.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/48495.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2307702612,
        "number": 51873,
        "title": "[ci skip] Align documentation with conventional practice",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-05-21T08:34:43Z",
        "updated_at": "2024-09-03T18:07:01Z",
        "closed_at": "2024-09-03T18:06:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis pull request has been created to (1) align documentation with conventional practice, (2) prefer continuity by maintaining names from previous code blocks, and (3) clear up other potential sources of confusion.\r\n\r\n### Detail\r\n\r\nA search on GitHub reveals that, typically, custom Railtie classes are named `Railtie`, with Rails itself embracing this convention (perhaps even fostering it). If we named the class in the docs to align with this practice, learners can supplement the material with what they find on GitHub and within Rails itself.\r\n\r\nSecondly, the first time we introduce a custom Railtie class, it's called `Railtie`. Unfortunately, in subsequent code examples, `MyRailtie` is introduced. In the first code block, we indicate the file path where the class is/could be defined [(`lib/my_gem/railtie.rb`)](https://github.com/rails/rails/blob/692f25a9254c58c64b138770e6b604e73de38620/railties/lib/rails/railtie.rb#L39). In the subsequent blocks we don't. I think this could also be a little confusing. If we were to keep the old class name, it might be easy for a learner to infer that we're developing the same class we created in the first code block.\r\n\r\nThe other changes replace `MyRailtie` and substitute it with `MyGem`. Reason is, the custom Railtie doesn't seem to be the appropriate place for those functions given that they are very specific to the gem. I think what we want to encourage there is this: the Railtie lets you specify what code to run for every hook. Your gem, not the custom Railtie, hosts the code. For example, I was confused by [`MyRailtie.setup!`](https://github.com/rails/rails/blob/692f25a9254c58c64b138770e6b604e73de38620/railties/lib/rails/railtie.rb#L84). I wondered where the `setup!` method came from and whether it could have been inherited from the `Rails::Railtie` parent. So I replaced `MyRailtie` with `MyGem` to make the arbitrariness of that code more obvious.\r\n\r\n### Checklist\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51873/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 929886,
        "closed_by_id": 6014046,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51873.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51873.patch",
        "pull_request_merged_at": "2024-09-03T18:06:36Z"
    },
    {
        "id": 2476989737,
        "number": 52664,
        "title": "Revert keyword argument changes to routing mapper",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-21T03:54:56Z",
        "updated_at": "2024-09-03T17:47:23Z",
        "closed_at": "2024-08-21T04:23:38Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Reverts #52512 and #52605\r\n\r\nFixes #52663\r\n\r\n@gmcgibbon sorry! We need to back these out. This seems to be breaking routes for a lot of folks, including GitHub, devise, others.\r\n\r\nIf we want to make a change like this we need it to go through a deprecation cycle where passing a hash continues to work but warns a user to add a keyword splat or switch to keyword args.\r\n\r\nThe way the previous code failed for people was also pretty dangerous, it would (depending on the hash) silently `to_s` the hash passed in and use that as a path component. It might also be a good idea if we reintroduce these changes to even outside of the deprecation to check for a Hash being passed in.\r\n\r\nWe also need to have tests for the deprecated behaviour to ensure it works (w/ `assert_deprecated`). I've added a test here showing the hash-options case. I think we're also missing coverage of some of the mapper because the some of the logic being reverted also does not seem quite right https://github.com/rails/rails/pull/52512#discussion_r1724295738",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52664/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 131752,
        "closed_by_id": 131752,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52664.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52664.patch",
        "pull_request_merged_at": "2024-08-21T04:23:38Z"
    },
    {
        "id": 2503421492,
        "number": 52787,
        "title": "Fix apple-modile-web-app-capable deprecation warning on browser console",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-03T17:38:28Z",
        "updated_at": "2024-09-03T17:47:14Z",
        "closed_at": "2024-09-03T17:45:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the current generator adds a meta attribute with the value `apple-mobile-web-app-capable` which is deprecated in favor of `mobile-web-app-capable`\r\n\r\n### Detail\r\n\r\n![Screenshot 2024-09-03 at 18 38 03](https://github.com/user-attachments/assets/56d3f983-fae5-4faa-8234-108714d278b1)\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52787/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 374424,
        "closed_by_id": 6014046,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52787.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52787.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2502117325,
        "number": 52781,
        "title": "Separate specific db schema",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-03T07:22:30Z",
        "updated_at": "2024-09-03T15:34:34Z",
        "closed_at": "2024-09-03T15:34:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nI am maintaining two adapters : [postgis](github.com/rgeo/activerecord-postgis-adapter) and [cockroachdb](github.com/cockroachdb/activerecord-cockroachdb-adapter). For the later, we need to change the schema specific build. But since it is quite close to postgresql, we still return `true` on `current_adapter?(:PostgreSQLAdapter)`. So the actual configuration would force to replace the whole `schema.rb` trunk file.\r\n\r\n### Detail\r\n\r\nThis Pull Request moves adapter specific schema definitions to these adapters. It is a little bit less DRY, but helps with creating external adapters.\r\n\r\n### Additional information\r\n\r\nWe could consider having a file for what is common between trilogy and mysql2, required by both specific schemas. I'm not sure this is worth it though.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52781/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 11378424,
        "closed_by_id": 160941,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52781.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52781.patch",
        "pull_request_merged_at": "2024-09-03T15:34:34Z"
    },
    {
        "id": 1756680381,
        "number": 48470,
        "title": "Store `secret_key_base` in `Rails.config` for local environments.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-14T11:30:21Z",
        "updated_at": "2024-09-03T15:32:26Z",
        "closed_at": "2023-06-14T21:52:17Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Rails `secrets` have been deprecated in favor of `credentials`.\r\nHowever, for the local environments `Rails.application.secrets` is still used to store `secret_key_base`.\r\n\r\nWe can store `secret_key_base` in `Rails.config.secret_key_base` instead.\r\n\r\nThis change allows us to deprecate calling `Rails.application.secrets`. See #48472.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48470/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 160941,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/48470.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/48470.patch",
        "pull_request_merged_at": "2023-06-14T21:52:17Z"
    },
    {
        "id": 1959373528,
        "number": 49765,
        "title": "Make the output of `ActiveRecord::Core#inspect` configurable.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 29,
        "created_at": "2023-10-24T14:20:10Z",
        "updated_at": "2024-09-03T14:49:10Z",
        "closed_at": "2023-11-08T20:08:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nFixes https://github.com/rails/rails/issues/49707\r\n\r\nThis Pull Request has been created because we noticed that `ActiveRecord::Core#inspect` was taking >9s to run for some large objects in production. This is because the parameter filter is be executed for every attribute.\r\n\r\n### Detail\r\n\r\nThis Pull Request introduces configuration for `ActiveRecord::Core#inspect`. By default, `inspect` just returns the object with its id (eg `#<Post id: 1>`. The attributes to include can be configured with `Post.attributes_to_inspect=`. If you want to full output with all the attributes you can call `Post.full_inspect`. \r\n\r\n### Additional information\r\n\r\nIn my first draft I had a config to disable this, if you just always want to use `full_inspect`. But it seems easy enough just to do `alias_method :inspect, :full_inspect` on the model, or in `ApplicationRecord` if you want to disable it globally. So the config didn't seem worth it to me.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49765/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 39735028,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            107195
        ],
        "reactions_total_count": 10,
        "reactions_plus1": 0,
        "reactions_minus1": 6,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 4,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/49765.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/49765.patch",
        "pull_request_merged_at": "2023-11-08T20:08:36Z"
    },
    {
        "id": 2411761768,
        "number": 52345,
        "title": "Protect against invalid validate option on remove_check_constraint",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-07-16T18:14:32Z",
        "updated_at": "2024-09-03T11:49:19Z",
        "closed_at": "2024-09-03T11:47:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nWhen you have a `remove_check_constraint` with `validate: false`, the Rails migration can fail, producing the error: `raise(ArgumentError, \"Table '#{table_name}' has no check constraint for #{expression || options}\")`.\r\n\r\n```ruby\r\nremove_check_constraint(\r\n  :diagram_notes,\r\n  \"width IS NOT NULL\",\r\n  name: \"diagram_notes_width_null\",\r\n  validate: false,\r\n)\r\n```\r\n\r\nThis occurs because `remove_check_constraint` calls `check_constraint_for!`, which filters out any validations of constraints that may have `validate: false`. Since `validate` is an acceptable option on `add_check_constraint` but not on `remove_check_constraint`.\r\n\r\n### Detail\r\n\r\nIn this PR - I am proposing to ensure that migrations do not fail with an unrelated or hard-to-understand exception when `validate: false` is accidentally passed to `remove_check_constraint`. We are simply dropping that attribute. \r\n\r\n### Additional information\r\n\r\nHave followed it up with a spec as well. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52345/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1100970,
        "closed_by_id": 1100970,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52345.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52345.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2340685293,
        "number": 52046,
        "title": "ConnectionPool leak connections",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2024-06-07T15:13:29Z",
        "updated_at": "2024-09-03T07:16:29Z",
        "closed_at": "2024-06-08T10:23:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nPre-Requirements: you must use mysql2 database adapter\r\nOpen `rails c` in stage or dev environment. Then run following snippet:\r\n```ruby\r\n# Fast solution to not clear cache after call fetch_count_mysql_connections because it obtains connection\r\npid = Process.fork do\r\n  module MockSlowDatabase\r\n    # Let's simulate database connection timeout error, override following method:\r\n    # https://github.com/brianmario/mysql2/blob/0.5.5/ext/mysql2/client.c#L1076\r\n    # https://dev.mysql.com/doc/c-api/8.0/en/mysql-get-server-info.html\r\n    def server_info(...)\r\n      raise 'database connection timeout error'\r\n    end\r\n  end\r\n  \r\n  Object.const_get('Mysql2::Client').class_eval do\r\n    prepend MockSlowDatabase\r\n  end\r\n  \r\n  50.times do\r\n    ActiveRecord::Base.connection\r\n  rescue StandardError\r\n    nil\r\n  end\r\n\r\n  puts 'pool stat:'\r\n  puts ActiveRecord::Base.connection_pool.stat\r\nend\r\n\r\ndef fetch_count_mysql_connections\r\n  ActiveRecord::Base.connection.execute(\"SELECT COUNT(*) FROM INFORMATION_SCHEMA.PROCESSLIST;\").to_a.dig(0, 0)\r\nend\r\n\r\n$connections = []\r\n$connections << fetch_count_mysql_connections\r\n\r\n$finished = false\r\n\r\nThread.new do\r\n  loop do\r\n    $connections << fetch_count_mysql_connections\r\n    break if $finished\r\n    sleep 1\r\n  end\r\nend\r\n\r\nProcess.wait pid\r\n$finished = true\r\nsleep 1\r\n\r\nputs $connections\r\n```\r\n\r\n### Expected behavior\r\nConnection obtained by  `ActiveRecord::Base.connection` saved to connection pool\r\n\r\n### Actual behavior\r\nEvery call of `ActiveRecord::Base.connection` creates connection in database, but not saves it to pool, so database receives 50 new connections\r\n\r\n### Reason why it is a bug\r\nImagine that you have unstable database or network between rails app and database server\r\nWhen your application try to obtain new connection in mysql server, rails gem do next:\r\n1. Opens new database connection\r\nhttps://github.com/rails/rails/blob/v7.1.3.4/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L676\r\nThis will cause usual tcp handshake. Connection to database will be obtained even if you have issue with database(slow database)\r\n2. Sends request to receive database version\r\nhttps://github.com/rails/rails/blob/v7.1.3.4/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L678 \\\r\nhttps://github.com/brianmario/mysql2/blob/0.5.5/ext/mysql2/client.c#L1076 \\\r\nhttps://dev.mysql.com/doc/c-api/8.0/en/mysql-get-server-info.html \\\r\nThis will cause tcp package to database server. Database server must accept this package, perform command and return back data. So if we have issue with database(database slows down and perform any query more than 1+ minute), then ruby thread will be blocked for a long time.\r\nImagine that you have timeout(for example rack-timeout gem) 30s, then you will faced with timeout and exception will be raised \\\r\nWhen exeption raised inside `checkout_new_connection`, `conn` variable is unset so `adopt_connection` in `ensure` block works only for case when `checkout_new_connection` returns value\r\n### System configuration\r\n**Rails version**:  6.1.7, but version independent\r\n\r\n**Ruby version**: 3.2.2, but version independent\r\n\r\n**Mysql version**: 5.7, but problem will be reached for any versions\r\n\r\n### Monkeypatch for rails 7.1.3.2\r\nThis could also be a solution\r\n```ruby\r\n# This is a changed copy of\r\n# https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L689\r\n\r\nraise \"outdated connection_pool leak monkeypatch\" if Rails.version != '7.1.3.2'\r\n\r\n# If you faced with this error, that mean rails version is changed in project\r\n# To solve this error open file for current rails version of this project\r\n# https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L689\r\n# And investigate connection pool leak is fixed or not\r\n# How to investigate leak fixed or not:\r\n# Open issue\r\n# https://github.com/rails/rails/issues/52046\r\n# And run provided code snipped\r\n# If fixed: delete this file\r\n# if not: investigate changes of methods try_to_checkout_new_connection and new_connection\r\n# Reimplement monkeypatch\r\n# And change rails version in condition above\r\n\r\nmodule ActiveRecord\r\n  module ConnectionAdapters\r\n    class ConnectionPool\r\n      def try_to_checkout_new_connection\r\n        # first in synchronized section check if establishing new conns is allowed\r\n        # and increment @now_connecting, to prevent overstepping this pool's @size\r\n        # constraint\r\n        do_checkout = synchronize do\r\n          if @threads_blocking_new_connections.zero? && (@connections.size + @now_connecting) < @size\r\n            @now_connecting += 1\r\n          end\r\n        end\r\n        if do_checkout\r\n          begin\r\n            # if successfully incremented @now_connecting establish new connection\r\n            # outside of synchronized section\r\n            conn = checkout_new_connection\r\n            conn.pool = self\r\n            conn.check_version\r\n            conn\r\n          rescue ConnectionNotEstablished => ex\r\n            raise ex.set_pool(self)\r\n          ensure\r\n            synchronize do\r\n              if conn\r\n                @thread_cached_conns[connection_cache_key(current_thread)] ||= conn\r\n                adopt_connection(conn)\r\n                # returned conn needs to be already leased\r\n                conn.lease\r\n              end\r\n              @now_connecting -= 1\r\n            end\r\n          end\r\n        end\r\n      end\r\n\r\n      def new_connection\r\n        Base.public_send(db_config.adapter_method, db_config.configuration_hash)\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Monkeypatch for rails 6.1.7\r\n```ruby\r\n# This is a changed copy of\r\n# https://github.com/rails/rails/blob/v6.1.7/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L892\r\n\r\nraise \"outdated connection_pool leak monkeypatch\" if Rails.version != '6.1.7'\r\n\r\n# If you faced with this error, that mean rails version is changed in project\r\n# To solve this error open file for current rails version of this project\r\n# https://github.com/rails/rails/blob/v6.1.7/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L892\r\n# And investigate connection pool leak is fixed or not\r\n# How to investigate leak fixed or not:\r\n# Open issue\r\n# https://github.com/rails/rails/issues/52046\r\n# And run provided code snipped\r\n# If fixed: delete this file\r\n# if not: investigate changes of methods try_to_checkout_new_connection and new_connection\r\n# Reimplement monkeypatch\r\n# And change rails version in condition above\r\n\r\nmodule ActiveRecord\r\n  module ConnectionAdapters\r\n    class ConnectionPool\r\n      def try_to_checkout_new_connection\r\n        # first in synchronized section check if establishing new conns is allowed\r\n        # and increment @now_connecting, to prevent overstepping this pool's @size\r\n        # constraint\r\n        do_checkout = synchronize do\r\n          if @threads_blocking_new_connections.zero? && (@connections.size + @now_connecting) < @size\r\n            @now_connecting += 1\r\n          end\r\n        end\r\n        if do_checkout\r\n          begin\r\n            # if successfully incremented @now_connecting establish new connection\r\n            # outside of synchronized section\r\n            conn = checkout_new_connection\r\n            conn.check_version\r\n            conn\r\n          ensure\r\n            synchronize do\r\n              if conn\r\n                @thread_cached_conns[connection_cache_key(current_thread)] ||= conn\r\n                adopt_connection(conn)\r\n                # returned conn needs to be already leased\r\n                conn.lease\r\n              end\r\n              @now_connecting -= 1\r\n            end\r\n          end\r\n        end\r\n      end\r\n\r\n      def new_connection\r\n        Base.public_send(db_config.adapter_method, db_config.configuration_hash)\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Rails 7.1.0.beta1 and higher versions behaviour\r\nThis commit changes behaviour of obtaining connection on tcp layer and \"defer to first use\"\r\nhttps://github.com/rails/rails/commit/8551e64e2411811f26d210601abdba6e13d8798c\r\n\r\nBut first use happens on the next line after rails initialize new connection for mysql2 adapter as you can see here:\r\nhttps://github.com/rails/rails/blob/v7.1.0.beta1/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L673-L675\r\n\r\nBug is still present but also connection obtaining becomes more implicit(but still obtained when you call ActiveRecord::Base.connection without any usage)\r\n\r\n### Other database adapters\r\nI tested only mysql adapter, but i think this bug will be present for other adapters too. Just lets check code for postgresql:\r\nhttps://github.com/rails/rails/blob/v6.1.7/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L426C21-L426C35\r\nLooks like tcp package will be sent too for check version\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52046/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 31796775,
        "closed_by_id": 44640,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2329070717,
        "number": 51990,
        "title": "Exit status 3 when Action Cable integration tests fail due to Saucelabs error",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-06-01T10:44:54Z",
        "updated_at": "2024-09-03T03:13:21Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "This is to mitigate errors like:\r\nhttps://buildkite.com/rails/rails/builds/107403#018f9917-fd63-4701-9620-f9caf2caaf2d/1163-1195\r\n\r\n```\r\nERROR [karma-server]:\r\nError: [init({...}})] The environment you requested was unavailable.\r\n```\r\n\r\nWe can make buildkite-config retry this status and soft-fail on exit 3.\r\n\r\nFor example,\r\nhttps://buildkite.com/changelog/56-command-steps-can-now-be-made-to-soft-fail\r\n\r\nI _think_ we can combine this with a retry policy on the exit status:\r\nhttps://buildkite.com/docs/pipelines/command-step#retry-attributes-automatic-retry-attributes\r\n\r\n/cc @matthewd ",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51990/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "label_ids": [
            300028327
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51990.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51990.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2499934603,
        "number": 52764,
        "title": "Change controller generator to use _path instead of _url for redirects",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-02T03:47:22Z",
        "updated_at": "2024-09-02T20:47:41Z",
        "closed_at": "2024-09-02T16:24:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Partially addresses https://github.com/rails/rails/issues/52756.\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because the Rails codebase is now promoting redirecting with paths instead of URLs. Namely we need to [change `redirect_to posts_url`](https://github.com/rails/rails/issues/52756#issuecomment-2323398590) in our generators.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the scaffold controller template to use `redirect_to posts_path` instead of `redirect_to posts_url`. It also adds redirect expectations in tests.\r\n\r\nPlease note that internally paths are still converted to URLs when redirecting ([ref](https://github.com/rails/rails/issues/52756#issuecomment-2323728578)). Changing this behavior may be trickier so I am leaving it out of this PR.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52764/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 236461,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52764.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52764.patch",
        "pull_request_merged_at": "2024-09-02T16:24:08Z"
    },
    {
        "id": 2501456254,
        "number": 52775,
        "title": "Require zlib in top level active_record.rb file",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-02T18:42:24Z",
        "updated_at": "2024-09-02T20:29:19Z",
        "closed_at": "2024-09-02T19:02:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis pull request has been created in replacement of https://github.com/rails/rails/pull/52760.\r\n\r\nA good point was made that shared dependencies should rather be required in top level active_record.rb file (https://github.com/rails/rails/pull/52760#issuecomment-2325005602).\r\n\r\nBut this is not the case today for `require \"zlib\"`, which is not present in [activerecord/lib/active_record.rb](https://github.com/rails/rails/blob/main/activerecord/lib/active_record.rb) but:\r\n\r\n* Present in [activerecord/lib/active_record/encryption/encryptor.rb](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/encryption/encryptor.rb) where `Zlib` is not used (leftover from https://github.com/rails/rails/pull/51735)\r\n* Not present in [activerecord/lib/active_record/encryption/config.rb](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/encryption/config.rb) where `Zlib` is used. This does not trigger an issue because `require \"zlib\"` is present in [activerecord/lib/active_record/migration.rb](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/migration.rb) which is usually autoloaded before when requiring the top level active_record.rb file.\r\n\r\nAlthough functional, this setup seems brittle and/or accidental.\r\n\r\nLet's rather move the `require \"zlib\"` directive to the top level \"active_record\" file as recommend for shared dependencies.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52775/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 58582,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52775.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52775.patch",
        "pull_request_merged_at": "2024-09-02T19:02:08Z"
    },
    {
        "id": 2499318051,
        "number": 52760,
        "title": "Require \"zlib\" where `Zlib` is referenced",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-01T08:52:59Z",
        "updated_at": "2024-09-02T20:29:13Z",
        "closed_at": "2024-09-02T15:40:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nIn https://github.com/rails/rails/pull/51735, the reference to `Zlib` was moved from [activerecord/lib/active_record/encryption/encryptor.rb](https://github.com/rails/rails/pull/51735/files#diff-ba005dd3f120df81a5c246216d66abf0922f26b6f1c2e93c9516d94b7c959213) to [activerecord/lib/active_record/encryption/config.rb](https://github.com/rails/rails/pull/51735/files#diff-be4704f10be1ac4cee2a88fda4fec863e60e7f7204e94624c5137dc8e5d151b4), but the `require \"zlib\"` directive stayed in the original file.\r\n\r\nAs a result, loading `ActiveRecord::Encryption::Config` can result in such errors:\r\n\r\n```shell\r\n/[...]/activerecord/lib/active_record/encryption/config.rb:59:in `set_defaults': uninitialized constant ActiveRecord::Encryption::Config::Zlib (NameError)\r\n\r\n          self.compressor = Zlib\r\n                            ^^^^\r\n```\r\n\r\nI encountered this issue while testing a private gem of mine against rails `main` branch (the change from https://github.com/rails/rails/pull/51735 is not released yet).\r\n\r\n### Additional information\r\n\r\nThis was an opportunity to add `require \"zlib` to two other files where it was also missing.\r\n\r\nI've kept this additional change in a separate commit for clarity during review.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52760/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 58582,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52760.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52760.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2501500838,
        "number": 52777,
        "title": "Make sure we are using the correct connection pool when dumping the schema",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-02T19:30:36Z",
        "updated_at": "2024-09-02T20:19:35Z",
        "closed_at": "2024-09-02T20:19:34Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "This was broken by https://github.com/rails/rails/commit/175bf8259a83853836657c0fbf300dfa3842e535.\r\n\r\nBefore we were switching the connection pool to use the one for the\r\ncorrespondent db config, but since we moved the `dump_schema` call to\r\noutside of the `with_temporary_pool` block, we were using the default\r\nconnection pool.\r\n\r\nFixes https://github.com/rails/rails/issues/52776.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52777/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47848,
        "closed_by_id": 2741,
        "label_ids": [
            107191,
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 1,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52777.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52777.patch",
        "pull_request_merged_at": "2024-09-02T20:19:34Z"
    },
    {
        "id": 2501475072,
        "number": 52776,
        "title": "Schema dumps incorrectly for secondary databases",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-09-02T19:02:35Z",
        "updated_at": "2024-09-02T20:19:35Z",
        "closed_at": "2024-09-02T20:19:35Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Consider this database.yml:\r\n\r\n```yaml\r\ndevelopment:\r\n  primary:\r\n    <<: *default\r\n    database: storage/development.sqlite3\r\n  cache:\r\n    <<: *default\r\n    database: storage/cache.sqlite3\r\n    migrations_paths: db/cache_migrate\r\n```\r\n\r\nThere are two databases. Now assume that we haven't yet run the migrations. So there are no db/*schema.rb files yet.\r\n\r\nWhen we run `rails db:prepare`, migrations for both databases will be run correctly, but when the schema.rb for the secondary cache database is due to be dumped, it'll be dumped as the development database.\r\n\r\nThis is happening because https://github.com/rails/rails/blob/main/activerecord/lib/active_record/tasks/database_tasks.rb#L214 calls which then calls https://github.com/rails/rails/blob/main/activerecord/lib/active_record/tasks/database_tasks.rb#L214 to trigger the SchemaDumper. But the `migration_connection_pool` references `migration_class`, which is always ActiveRecord::Base, so you get the schema that belongs to that. Which is the primary.\r\n\r\nWe need the call to the dumper to use a connection pool that belongs to the cache db for this to work correctly.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52776/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 2741,
        "closed_by_id": 2741,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2499288953,
        "number": 52759,
        "title": "Update API docs to recommend `form_with` over `form_tag` and `form_for` [ci skip]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-01T07:47:14Z",
        "updated_at": "2024-09-02T19:41:44Z",
        "closed_at": "2024-09-02T16:17:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Ref: [discussion](https://discuss.rubyonrails.org/t/should-form-tag-and-form-for-be-fully-deprecated-now/86501)\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because DHH [mentioned](https://discuss.rubyonrails.org/t/should-form-tag-and-form-for-be-fully-deprecated-now/86501/2?u=jeromedalbert) that we're better off steering folks through guides and docs towards the new `form_with` syntax. The guides already [mention](https://guides.rubyonrails.org/form_helpers.html#using-form-tag-and-form-for) that `form_tag` and `form_for` are soft-deprecated, but the API docs don't. As a result people might be unsure which one to choose if they only search in the API docs.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the API docs to recommend `form_with` over `form_tag` and `form_for`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52759/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 236461,
        "closed_by_id": 47848,
        "label_ids": [
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52759.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52759.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2496668089,
        "number": 52747,
        "title": "Allow registering test directories for CodeStatistics",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-30T09:09:04Z",
        "updated_at": "2024-09-02T19:40:32Z",
        "closed_at": "2024-09-02T17:59:15Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Make it easier for third party gems, to register test directories.\r\n\r\nFor example `rspec-rails` currently appends to the TEST_TYPES constant:\r\n\r\n      ::STATS_DIRECTORIES << [\"#{name} specs\", dir]\r\n      ::CodeStatistics::TEST_TYPES << \"#{name} specs\"\r\n\r\nhttps://github.com/rspec/rspec-rails/blob/418daeb0f492e693b7bd2c6bba1c2c1aee3a4d37/lib/rspec/rails/tasks/rspec.rake#L44\r\n\r\nWith this change it can be simplified to:\r\n\r\n    ::Rails::CodeStatistics.register_directory \"#{name} specs\", dir, test_directory: true\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52747/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52747.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52747.patch",
        "pull_request_merged_at": "2024-09-02T17:59:15Z"
    },
    {
        "id": 2501095639,
        "number": 52770,
        "title": "[ci skip] Update active_record_basics.md doc",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-02T14:21:50Z",
        "updated_at": "2024-09-02T19:29:44Z",
        "closed_at": "2024-09-02T19:17:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\ntypo here (on site too https://guides.rubyonrails.org/active_record_basics.html#read )\r\n\r\n### Detail\r\n\r\nbook = Book.find_by(title: \"Metaprogramming Ruby 2\") returns a list of records:SELECT \"books\".* FROM \"books\" WHERE \"books\".\"author\" = ? LIMIT ? [[\"author\", \"J.R.R. Tolkien\"], [\"LIMIT\", 1]]\r\n\r\nchanged to:\r\n\r\n\"title\" = ? LIMIT ? [[\"title\", \"Metaprogramming Ruby 2\"]\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52770/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 45661430,
        "closed_by_id": 28561,
        "label_ids": [
            150377,
            1072773639
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52770.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52770.patch",
        "pull_request_merged_at": "2024-09-02T19:17:31Z"
    },
    {
        "id": 2494248937,
        "number": 52744,
        "title": "Fix `distinct.count` when using `select` with multiple arel expressions",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-29T12:04:58Z",
        "updated_at": "2024-09-02T18:16:05Z",
        "closed_at": "2024-09-02T18:16:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Currently, this works across all database adapters:\r\n```ruby\r\nSomeModel.select(arel_table[:some_column]).count\r\n```\r\n\r\nMySQL also support `COUNT DISTINCT` over multiple columns, but this is not working and produces invalid SQL:\r\n```ruby\r\nSomeModel.select(arel_table[:column1], arel_table[:column2]).distinct.count\r\n```\r\n\r\nSo this PR fixes that case.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52744/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 12642,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52744.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52744.patch",
        "pull_request_merged_at": "2024-09-02T18:16:05Z"
    },
    {
        "id": 2498062605,
        "number": 52752,
        "title": "Test DevcontainerGenerator",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-30T19:41:51Z",
        "updated_at": "2024-09-02T17:52:22Z",
        "closed_at": "2024-09-02T17:52:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis PR adds tests for the devcontainer generator.\r\n\r\nDuring discussion with @andrewn617  in #52704, we decided that although the generator is tested via the app generator, and now hidden from the generator list in favor of the devcontainer command, it would still be beneficial to test it directly.\r\n\r\n### Detail\r\n\r\nI took the devcontainer tests from `railties/test/generators/app_generator_test.rb`, copied them over, and split them up by option, and tidied up.\r\n\r\nTests for all of the possible option values, plus a shared test for configuration that should not vary due to options. The common test is run against the default generator, and then every time an argument is used. May be overkill, but I don't think these tests are expensive\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated ~~if you fix a bug or add a feature~~.\r\n* [ ] ~~CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.~~\r\n\r\n### Additional Notes\r\n\r\nI have found one issue with `application_system_test_case` modification. The generator uses `gsub_file` in such a way that it is not idempotent, and gets **pretty messed up** on the second run.  I started to add a test for it, but didn't want to get stuck on that here. I can add a separate issue if need be. Here was the start of my test for that, if anyone wants to try it out:\r\n```ruby\r\ndef test_system_test_option_idempotent\r\n  copy_application_system_test_case\r\n\r\n  run_generator\r\n\r\n  assert_file(\"test/application_system_test_case.rb\") do |system_test_case|\r\n    assert_match(/^  if ENV\\[\"CAPYBARA_SERVER_PORT\"\\]/, system_test_case)\r\n    assert_match(/^    served_by host: \"rails-app\", port: ENV\\[\"CAPYBARA_SERVER_PORT\"\\]/, system_test_case)\r\n    assert_match(/^    driven_by :selenium, using: :headless_chrome, screen_size: \\[ 1400, 1400 \\], options: {$/, system_test_case)\r\n    assert_match(/^      browser: :remote,$/, system_test_case)\r\n    assert_match(/^      url: \"http:\\/\\/\\#{ENV\\[\"SELENIUM_HOST\"\\]}:4444\"$/, system_test_case)\r\n  end\r\n\r\n  run_generator\r\n  assert_file(\"test/application_system_test_case.rb\") do |system_test_case|\r\n    # TODO: assert only one\r\n    # assert_match(/^  if ENV\\[\"CAPYBARA_SERVER_PORT\"\\]/, system_test_case)\r\n  end\r\nend\r\n```\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52752/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28872849,
        "closed_by_id": 47848,
        "label_ids": [
            107195,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52752.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52752.patch",
        "pull_request_merged_at": "2024-09-02T17:52:22Z"
    },
    {
        "id": 2501162283,
        "number": 52771,
        "title": "No need to install `bundler` since it is a default gem since Ruby 2.6",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-02T14:54:23Z",
        "updated_at": "2024-09-02T17:51:19Z",
        "closed_at": "2024-09-02T17:51:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis commit removes \"gem install bundler --conservative\" command from `bin/setup` command because bundler is installed as a default gem since Ruby 2.6.0.\r\n\r\n### Detail\r\n\r\n* Ruby 2.6.0 Released https://www.ruby-lang.org/en/news/2018/12/25/ruby-2-6-0-released/\r\n> Bundler is now installed as a default gem.\r\n\r\nThe current Rails main branch requires Ruby 3.1.0 that is higher than 2.6.0. https://github.com/rails/rails/blob/8bac99ad7a403ef52a5c97e7afa73c7bbcc67110/rails.gemspec#L12\r\n\r\n### Additional information\r\n\r\nThis line has been added via https://github.com/rails/rails/commit/58d3e025793bec3a97c6f3afd8d3e36040d21167 for Rails 4.2.0 that support Ruby 1.9.3. Ruby 1.9.3 did not install bundler as a default gem.\r\nhttps://github.com/rails/rails/blob/7847a19f476fb9bee287681586d872ea43785e53/rails.gemspec#L10\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52771/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 73684,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52771.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52771.patch",
        "pull_request_merged_at": "2024-09-02T17:51:19Z"
    },
    {
        "id": 2501345484,
        "number": 52772,
        "title": "Allow to skip the server in `bin/setup`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-02T17:00:31Z",
        "updated_at": "2024-09-02T17:50:43Z",
        "closed_at": "2024-09-02T17:50:41Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Closes #52768",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52772/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47848,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52772.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52772.patch",
        "pull_request_merged_at": "2024-09-02T17:50:41Z"
    },
    {
        "id": 2500804077,
        "number": 52768,
        "title": "Fix dev container smoke test",
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "andrewn617",
            "id": 39735028,
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "andrewn617",
                "id": 39735028,
                "followers_url": "https://api.github.com/users/andrewn617/followers",
                "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
                "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
                "organizations_url": "https://api.github.com/users/andrewn617/orgs",
                "repos_url": "https://api.github.com/users/andrewn617/repos",
                "received_events_url": "https://api.github.com/users/andrewn617/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-02T12:08:08Z",
        "updated_at": "2024-09-02T17:50:42Z",
        "closed_at": "2024-09-02T17:50:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nDev Container smoke test is broken by [this commit](https://github.com/rails/rails/commit/7ed09d3a387a780278700ac6edac3e97aa41aa3a), which introduced running `bin/dev` to consistently start the server as part of `bin/setup`.\r\n\r\n### Expected behavior\r\nAfter creating the dev container we run `bin/setup`, which runs the server. The workflow then hangs forever and times out.\r\n\r\nFor example: https://github.com/rails/rails/actions/runs/10637687852\r\n\r\n### Actual behavior\r\nAfter creating the dev container we bundle gems and setup the db but do not run the server, so we can run tests.\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n**Ruby version**:\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52768/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 39735028,
        "closed_by_id": 47848,
        "label_ids": [
            107195,
            776781281
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2500202121,
        "number": 52766,
        "title": "Document more examples of create_join_table naming results",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-02T07:21:53Z",
        "updated_at": "2024-09-02T17:33:18Z",
        "closed_at": "2024-09-02T17:33:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "The API documentation mentions lexical order but doesn't go into detail what that means.\r\nCurrently the guides go into [more detail](https://guides.rubyonrails.org/association_basics.html#creating-join-tables-for-has-and-belongs-to-many-associations) but it isn't very clear.\r\nHopefully adding some examples clears things up.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52766/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 28561,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52766.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52766.patch",
        "pull_request_merged_at": "2024-09-02T17:33:05Z"
    },
    {
        "id": 2273741190,
        "number": 51704,
        "title": "[ci skip]Docs highlight form_with over form_for",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-05-01T15:57:13Z",
        "updated_at": "2024-09-02T16:22:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\n[`form_for` has been soft-deprecated in favour of `form_with`.](https://guides.rubyonrails.org/form_helpers.html#using-form-tag-and-form-for)\r\nHowever, the documentation outside of the Rails Guide does not show this change\r\nand in the case of these changes it misses `form_with` completely.\r\n\r\nChanges:\r\n\r\n- Adding `form_with` before `form_for` in documentation. \r\n- Replacing `form_with` with `form_for` in example code.\r\n- Editing to keep the lines within columns\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51704/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1710795,
        "label_ids": [
            107189,
            107195,
            3666649
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51704.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51704.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2459778322,
        "number": 52569,
        "title": "Add support for multiple databases for Active Storage/Action Text/Action Mailbox",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-08-11T21:56:14Z",
        "updated_at": "2024-09-02T13:10:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes: https://github.com/rails/rails/issues/38755\r\n\r\nSimilar to how Solid Queue and Solid Cache are configured:\r\nhttps://github.com/rails/solid_queue/blob/main/app/models/solid_queue/record.rb\r\nhttps://github.com/rails/solid_cache/blob/main/app/models/solid_cache/record.rb",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52569/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 617116,
        "label_ids": [
            150377,
            664533972,
            1174770998,
            1180817762
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52569.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52569.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2497494548,
        "number": 52748,
        "title": "It's not possible to override attribute-based `key_provider` or `key` using `ActiveRecord::Encryption.with_encryption_context`",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-30T15:12:09Z",
        "updated_at": "2024-09-02T12:24:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\n  gem \"debug\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Encryption.config.primary_key = SecureRandom.base64(32)\r\nActiveRecord::Encryption.config.key_derivation_salt = SecureRandom.base64(32)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :title\r\n    t.text :content\r\n  end\r\nend\r\n\r\nclass DummyKeyProvider\r\n  def encryption_key\r\n    ActiveRecord::Encryption::Key.new(\"a\" * 32)\r\n  end\r\n\r\n  def decryption_keys(_)\r\n    [encryption_key]\r\n  end\r\nend\r\n\r\nclass YetAnotherKeyProvider\r\n  def encryption_key\r\n    ActiveRecord::Encryption::Key.new(\"b\" * 32)\r\n  end\r\n\r\n  def decryption_keys(_)\r\n    [encryption_key]\r\n  end\r\nend\r\n\r\nclass DebuggingEncryptor\r\n  def encrypt(clean_text, key_provider: default_key_provider, cipher_options: {})\r\n    \"#{clean_text} (#{key_provider.class})\"\r\n  end\r\n\r\n  def decrypt(encrypted_text, key_provider: default_key_provider, cipher_options: {})\r\n    encrypted_text.tr(\" (#{key_provider.class})\", \"\")\r\n  end\r\n\r\n  def encrypted?(text)\r\n    text.include?(\" (\")\r\n  end\r\n\r\n  def binary?\r\n    false\r\n  end\r\n\r\n  private\r\n\r\n  def default_key_provider\r\n    ActiveRecord::Encryption.key_provider\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  encrypts :content\r\n  encrypts :title\r\nend\r\n\r\nclass PostWithKey < ActiveRecord::Base\r\n  self.table_name = \"posts\"\r\n  encrypts :content\r\n  encrypts :title, key: SecureRandom.hex(16)\r\nend\r\n\r\nclass PostWithDummyKeyProvider < ActiveRecord::Base\r\n  self.table_name = \"posts\"\r\n  encrypts :content\r\n  encrypts :title, key_provider: DummyKeyProvider.new\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_key_provider_is_overriden_when_no_options_are_provided\r\n    ActiveRecord::Encryption.with_encryption_context(key_provider: DummyKeyProvider.new, encryptor: DebuggingEncryptor.new) do\r\n      post = Post.create!(content: \"Content is overridden\", title: \"And so is title\")\r\n\r\n      assert_equal \"Content is overridden (DummyKeyProvider)\", post.content_before_type_cast\r\n      assert_equal \"And so is title (DummyKeyProvider)\", post.title_before_type_cast\r\n    end\r\n  end\r\n\r\n  def test_key_provider_is_not_overridden_when_key_provider_is_provided\r\n    ActiveRecord::Encryption.with_encryption_context(key_provider: YetAnotherKeyProvider.new, encryptor: DebuggingEncryptor.new) do\r\n      post = PostWithDummyKeyProvider.create!(content: \"Content is overridden\", title: \"But title isn't\")\r\n\r\n      assert_equal \"Content is overridden (YetAnotherKeyProvider)\", post.content_before_type_cast\r\n      assert_equal \"But title isn't (YetAnotherKeyProvider)\", post.title_before_type_cast\r\n    end\r\n  end\r\n\r\n  def test_key_provider_is_not_overridden_when_key_is_provided\r\n    ActiveRecord::Encryption.with_encryption_context(key_provider: YetAnotherKeyProvider.new, encryptor: DebuggingEncryptor.new) do\r\n      post = PostWithKey.create!(content: \"Content is overridden\", title: \"But title isn't\")\r\n\r\n      assert_equal \"Content is overridden (YetAnotherKeyProvider)\", post.content_before_type_cast\r\n      assert_equal \"But title isn't (YetAnotherKeyProvider)\", post.title_before_type_cast\r\n    end\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nA key provider passed with `ActiveRecord::Encryption.with_encryption_context` should have precedence over any other configured key provider, either attribute-based (as in `encrypts :attribute, key_provider: CustomKeyProvider.new`) or the default application key provider (via `ActiveRecord::Encryption.config.key_provider`).\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nA custom encryption context overrides the default application key provider, but not an attribute-based key provider - either configured as `key_provider` or `key`. Both tests in the bug report script fail.\r\n\r\n\r\n### System configuration\r\n**Rails version**: `7.2.1`\r\n\r\n**Ruby version**: `3.3.4`\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52748/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 761956,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2164771293,
        "number": 51237,
        "title": "Fix label with `for` option not getting prefixed by form `namespace` value",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-03-02T11:37:13Z",
        "updated_at": "2024-09-02T11:50:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis PR is created because when a `form_for` has the `namespace` option, all other fields are prefixed with it except for the `label` tag which has the `for` option.\r\n\r\n### Detail\r\n\r\nExample:\r\n```rb\r\nform_for(@post, namespace: SecureRandom.urlsafe_base64) do |f|\r\n  concat f.label(:title, for: \"my_custom_post_title\")\r\n  concat f.text_field(:title, id: \"my_custom_post_title\")\r\nend\r\n```\r\nIn the above example, the label will not be linked to the text field, which shouldn't be the case just because the `namespace` option is present.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51237/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 50948617,
        "label_ids": [
            3666649
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51237.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51237.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2493854640,
        "number": 52743,
        "title": "`remove_check_constraint` cannot be safely rolled back automatically from 7.1",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-29T08:59:39Z",
        "updated_at": "2024-09-02T10:50:32Z",
        "closed_at": "2024-09-02T10:50:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In PostgreSQL 12+, the best practice for safely adding a NOT NULL constraint to an existing column is to add a check constraint with `NOT VALID` and then run `VALIDATE CONSTRAINT`.\r\n\r\n- [Explanation by strong_migration](https://github.com/ankane/strong_migrations/tree/v2.0.0?tab=readme-ov-file#setting-not-null-on-an-existing-column)\r\n- [The official documentation mentions that table scans are skipped due to check constraints](https://www.postgresql.org/docs/12/sql-altertable.html#:~:text=Ordinarily%20this%20is%20checked%20during%20the%20ALTER%20TABLE%20by%20scanning%20the%20entire%20table%3B%20however%2C%20if%20a%20valid%20CHECK%20constraint%20is%20found%20which%20proves%20no%20NULL%20can%20exist%2C%20then%20the%20table%20scan%20is%20skipped.)\r\n\r\nHowever, when the above steps are split into multiple migrations, there is an issue starting from 7.1 where rollback does not work properly.\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\nrequire \"debug\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", \"7.2.1\"\r\n\r\n  # works fine in 7.0\r\n  # gem \"rails\", \"7.0.8.4\"\r\n\r\n  # same issue found in main\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  # works fine by https://github.com/rails/rails/pull/52345\r\n  # gem \"rails\", github: \"shayonj/rails\", branch: \"s/remove-reference-validate-check\"\r\n\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(\r\n  adapter: \"postgresql\",\r\n  host: \"127.0.0.1\",\r\n  username: \"postgres\",\r\n  password: \"postgres\"\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.decimal :amount\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass AddCheckConstraint < ActiveRecord::Migration::Current\r\n  def change\r\n    add_check_constraint :payments, \"amount IS NOT NULL\", name: \"amount_is_not_null\", validate: false\r\n  end\r\nend\r\n\r\nclass ValidateCheckConstraint < ActiveRecord::Migration::Current\r\n  def change\r\n    validate_check_constraint :payments, name: \"amount_is_not_null\"\r\n  end\r\nend\r\n\r\nclass AddNotNullConstraint < ActiveRecord::Migration::Current\r\n  def change\r\n    change_column_null :payments, :amount, false\r\n    remove_check_constraint :payments, \"amount IS NOT NULL\", name: \"amount_is_not_null\", validate: false\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration\r\n    AddCheckConstraint.migrate(:up)\r\n    ValidateCheckConstraint.migrate(:up)\r\n    options = Payment.connection.check_constraints(:payments).first.options\r\n    assert_equal({ name: \"amount_is_not_null\", validate: true }, options)\r\n\r\n    # Imagine having to revert due to some problem\r\n    AddNotNullConstraint.migrate(:up)\r\n    AddNotNullConstraint.migrate(:down)\r\n    options = Payment.connection.check_constraints(:payments).first.options\r\n    assert_equal({ name: \"amount_is_not_null\", validate: false }, options)\r\n\r\n    ValidateCheckConstraint.migrate(:down)\r\n    ValidateCheckConstraint.migrate(:up)\r\n    AddNotNullConstraint.migrate(:up)\r\n    Payment.reset_column_information\r\n    assert_equal([], Payment.connection.check_constraints(:payments))\r\n    refute Payment.columns.last.null\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt works fine without any errors. This is the output in 7.0.8.4:\r\n\r\n```\r\n# Running:\r\n\r\n==  AddCheckConstraint: migrating =============================================\r\n-- add_check_constraint(:payments, \"amount IS NOT NULL\", {:name=>\"amount_is_not_null\", :validate=>false})\r\nD, [2024-08-29T17:40:13.638859 #97833] DEBUG -- :    (2.8ms)  ALTER TABLE \"payments\" ADD CONSTRAINT amount_is_not_null CHECK (amount IS NOT NULL) NOT VALID\r\n   -> 0.0029s\r\n==  AddCheckConstraint: migrated (0.0029s) ====================================\r\n\r\n==  ValidateCheckConstraint: migrating ========================================\r\n-- validate_check_constraint(:payments, {:name=>\"amount_is_not_null\"})\r\nD, [2024-08-29T17:40:13.643207 #97833] DEBUG -- :    (1.4ms)  ALTER TABLE \"payments\" VALIDATE CONSTRAINT \"amount_is_not_null\"\r\n   -> 0.0043s\r\n==  ValidateCheckConstraint: migrated (0.0043s) ===============================\r\n\r\n==  AddNotNullConstraint: migrating ===========================================\r\n-- change_column_null(:payments, :amount, false)\r\nD, [2024-08-29T17:40:13.647904 #97833] DEBUG -- :    (1.5ms)  ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL\r\n   -> 0.0022s\r\n-- remove_check_constraint(:payments, \"amount IS NOT NULL\", {:name=>\"amount_is_not_null\", :validate=>false})\r\nD, [2024-08-29T17:40:13.651109 #97833] DEBUG -- :    (1.4ms)  ALTER TABLE \"payments\" DROP CONSTRAINT \"amount_is_not_null\"\r\n   -> 0.0032s\r\n==  AddNotNullConstraint: migrated (0.0055s) ==================================\r\n\r\n==  AddNotNullConstraint: reverting ===========================================\r\n-- add_check_constraint(:payments, \"amount IS NOT NULL\", {:name=>\"amount_is_not_null\", :validate=>false})\r\nD, [2024-08-29T17:40:13.655610 #97833] DEBUG -- :    (1.9ms)  ALTER TABLE \"payments\" ADD CONSTRAINT amount_is_not_null CHECK (amount IS NOT NULL) NOT VALID\r\n   -> 0.0019s\r\n-- change_column_null(:payments, :amount, true)\r\nD, [2024-08-29T17:40:13.656864 #97833] DEBUG -- :    (1.1ms)  ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP NOT NULL\r\n   -> 0.0011s\r\n==  AddNotNullConstraint: reverted (0.0057s) ==================================\r\n\r\n==  ValidateCheckConstraint: reverting ========================================\r\nD, [2024-08-29T17:40:13.661665 #97833] DEBUG -- :    (0.8ms)  ALTER TABLE \"payments\" VALIDATE CONSTRAINT \"amount_is_not_null\"\r\n==  ValidateCheckConstraint: reverted (0.0031s) ===============================\r\n\r\n==  ValidateCheckConstraint: migrating ========================================\r\n-- validate_check_constraint(:payments, {:name=>\"amount_is_not_null\"})\r\nD, [2024-08-29T17:40:13.662904 #97833] DEBUG -- :    (0.4ms)  ALTER TABLE \"payments\" VALIDATE CONSTRAINT \"amount_is_not_null\"\r\n   -> 0.0012s\r\n==  ValidateCheckConstraint: migrated (0.0012s) ===============================\r\n\r\n==  AddNotNullConstraint: migrating ===========================================\r\n-- change_column_null(:payments, :amount, false)\r\nD, [2024-08-29T17:40:13.663744 #97833] DEBUG -- :    (0.8ms)  ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL\r\n   -> 0.0008s\r\n-- remove_check_constraint(:payments, \"amount IS NOT NULL\", {:name=>\"amount_is_not_null\", :validate=>false})\r\nD, [2024-08-29T17:40:13.665126 #97833] DEBUG -- :    (0.6ms)  ALTER TABLE \"payments\" DROP CONSTRAINT \"amount_is_not_null\"\r\n   -> 0.0014s\r\n==  AddNotNullConstraint: migrated (0.0022s) ==================================\r\n\r\n.\r\n\r\nFinished in 0.032080s, 31.1721 runs/s, 124.6883 assertions/s.\r\n1 runs, 4 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Actual behavior\r\n\r\n`remove_check_constraint` fails with the following error.  This is the output in 7.2.1. Similarly for the main branch.\r\n\r\n```\r\n# Running:\r\n\r\n==  AddCheckConstraint: migrating =============================================\r\n-- add_check_constraint(:payments, \"amount IS NOT NULL\", {:name=>\"amount_is_not_null\", :validate=>false})\r\nD, [2024-08-29T17:42:19.429752 #97885] DEBUG -- :    (2.6ms)  ALTER TABLE \"payments\" ADD CONSTRAINT amount_is_not_null CHECK (amount IS NOT NULL) NOT VALID\r\n   -> 0.0028s\r\n==  AddCheckConstraint: migrated (0.0028s) ====================================\r\n\r\n==  ValidateCheckConstraint: migrating ========================================\r\n-- validate_check_constraint(:payments, {:name=>\"amount_is_not_null\"})\r\nD, [2024-08-29T17:42:19.434150 #97885] DEBUG -- :    (1.2ms)  ALTER TABLE \"payments\" VALIDATE CONSTRAINT \"amount_is_not_null\"\r\n   -> 0.0043s\r\n==  ValidateCheckConstraint: migrated (0.0044s) ===============================\r\n\r\n==  AddNotNullConstraint: migrating ===========================================\r\n-- change_column_null(:payments, :amount, false)\r\nD, [2024-08-29T17:42:19.436597 #97885] DEBUG -- :    (1.0ms)  ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL\r\n   -> 0.0010s\r\n-- remove_check_constraint(:payments, \"amount IS NOT NULL\", {:name=>\"amount_is_not_null\", :validate=>false})\r\nE\r\n\r\nFinished in 0.010987s, 91.0167 runs/s, 91.0167 assertions/s.\r\n\r\n  1) Error:\r\nBugTest#test_migration:\r\nArgumentError: Table 'payments' has no check constraint for amount IS NOT NULL\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/schema_statements.rb:1778:in `check_constraint_for!'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/schema_statements.rb:1308:in `remove_check_constraint'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration/default_strategy.rb:10:in `method_missing'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration.rb:1059:in `block in method_missing'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration.rb:1025:in `block in say_with_time'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/3.2.0/benchmark.rb:296:in `measure'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration.rb:1025:in `say_with_time'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration.rb:1048:in `method_missing'\r\n    test.rb:53:in `change'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration.rb:994:in `exec_migration'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration.rb:978:in `block (2 levels) in migrate'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/3.2.0/benchmark.rb:296:in `measure'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration.rb:977:in `block in migrate'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:389:in `with_connection'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration.rb:976:in `migrate'\r\n    /Users/kazuma.watanabe/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/activerecord-7.2.1/lib/active_record/migration.rb:741:in `migrate'\r\n    test.rb:65:in `test_migration'\r\n\r\n1 runs, 1 assertions, 0 failures, 1 errors, 0 skips\r\n```\r\n\r\nTo avoid this error, you need to run `remove_check_constraint` with `validate: true`, but this is unsafe as it may acquire a long-term exclusive lock on a large table if it gets rolled back.\r\n\r\nThe only workaround is to explicitly define the `down` method, but that clearly seems redundant.\r\n\r\n```ruby\r\nclass AddNotNullConstraint < ActiveRecord::Migration::Current\r\n  def up\r\n    change_column_null :payments, :amount, false\r\n    remove_check_constraint :payments, \"amount IS NOT NULL\", name: \"amount_is_not_null\", validate: true\r\n  end\r\n\r\n  def down\r\n    add_check_constraint :payments, \"amount IS NOT NULL\", name: \"amount_is_not_null\", validate: false\r\n    change_column_null :payments, :amount, true\r\n  end\r\nend\r\n```\r\n\r\nStrictly speaking, it is debatable whether the `AddNotNullConstraint` should be able to be rolled back automatically, since it does not revert to the previous state even if it is rolled back, but considering the above scenario, I believe it would be more useful to have it be reversible.\r\n\r\nIncidentally, this issue is fixed by https://github.com/rails/rails/pull/52345.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.1\r\n\r\n**Ruby version**: 3.2.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52743/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 9624059,
        "closed_by_id": 9624059,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2500469185,
        "number": 52767,
        "title": "Rails 7.0: Update encryption key configuration error message for clarity",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-02T09:29:39Z",
        "updated_at": "2024-09-02T09:30:04Z",
        "closed_at": "2024-09-02T09:30:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "7-0-stable",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52767/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1826884,
        "closed_by_id": 1826884,
        "label_ids": [
            300028327
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52767.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52767.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2489692003,
        "number": 52721,
        "title": "Fix PostgreSQL Cidr#change?: comparing '0.0.0.0'/'::' to nil",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-27T15:18:42Z",
        "updated_at": "2024-09-02T08:43:33Z",
        "closed_at": "2024-08-27T16:11:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nSteps to reproduce are below comments.\r\nhttps://github.com/rails/rails/pull/51758#issuecomment-2311677430\r\n\r\n### Detail\r\n\r\n`PostgreSQL Cidr#change?` raise an error of NoMethodError: undefined method 'prefix' when comparing `0.0.0.0` / `::` to nil.\r\n\r\nThis Pull Request changes fixes the error by use `IPAddr#eql?` and updates a test case.\r\n\r\n`IPAddr#eql?` compares instance classes.\r\nThe following is  the behavior of `IPAddr#eql?`:\r\n```ruby\r\n# IPv4\r\nIPAddr.new(\"0.0.0.0\").eql?(nil)\r\n=> false\r\nIPAddr.new(\"0.0.0.0\") == nil\r\n=> true\r\n\r\n# IPv6\r\nIPAddr.new(\"::\").eql?(nil)\r\n=> false\r\nIPAddr.new(\"::\") == nil\r\n=> true\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52721/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 564142,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52721.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52721.patch",
        "pull_request_merged_at": "2024-08-27T16:11:25Z"
    },
    {
        "id": 2499433982,
        "number": 52762,
        "title": "[ci skip] Add example to configure ActiveRecord::Encryption",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-01T12:15:32Z",
        "updated_at": "2024-09-02T05:19:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "## Add example to configure ActiveRecord::Encryption via environment variable\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because In Rails 7.1 [Configuring Encryption Guide](https://guides.rubyonrails.org/v7.1/active_record_encryption.html#setup), we are showing how we can setup using environment variables.\r\n\r\nDocumentation in Rails 7.1 (Does not work in rails 7.0\r\n```ruby\r\nconfig.active_record.encryption.primary_key = ENV['ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY']\r\nconfig.active_record.encryption.deterministic_key = ENV['ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY']\r\nconfig.active_record.encryption.key_derivation_salt = ENV['ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT']\r\n```\r\n\r\nWhen we are using the same method for Rails 7.0, while the initializer doesn't raise an error, but it doesn't properly set the `primary_key`, `deterministic_key`, and `key_derivation_salt`. Causing the encryption not setup properly.\r\n\r\nThis PR is adding a working method, when configuring via environment variables for Rails 7.0.x\r\n\r\nThis is working in Rails 7.0\r\n```ruby\r\nActiveRecord::Encryption.configure(\r\n  primary_key: ENV[\"ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\"],\r\n  deterministic_key: ENV[\"ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\"],\r\n  key_derivation_salt: ENV[\"ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\"],\r\n)\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52762/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1826884,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52762.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52762.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 223373466,
        "number": 28821,
        "title": "build_association unexpectedly DELETEs record if already saved.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2017-04-21T12:48:28Z",
        "updated_at": "2024-09-01T23:27:29Z",
        "closed_at": "2017-09-07T22:53:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nRails 5 but older versions too.\r\n\r\n```ruby\r\nclass Parent < ApplicationRecord\r\n  has_one :child\r\nend\r\n\r\nclass Child < ApplicationRecord\r\n  belongs_to :parent\r\nend\r\n\r\nparent = Parent.create\r\nchild = parent.build_child\r\nchild.name = \"Why\"\r\nchild.save \r\n# => INSERT INTO \"children\"\r\nparent.build_child\r\n# => DELETE # wut‽\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn other places `build` is documented as an alias for `new`. So I expect it to be dumb and just instantiate an empty AR object regardless of what's in the database. Especially as you can't do `parent.association.new # undefined on method new for nil` and there's no `new_association` or even `association(:child).new`, so this is the only method to do that. I couldn't find any docs for `build_foo_association` as it's a generated method, so I don't know what the _expected_ expected behaviour is or how it came about.\r\n\r\n\r\n### Actual behavior\r\n\r\n* If the association isn't created yet, `build_association` does what I'd expect and instantiates a new AR object. \r\n* But if the association was saved before, `build_association` deletes the record before instantiating a new AR object.\r\n\r\nThis behaviour may be useful in some cases, but the naming seems completely unexpected. Renaming to `replace_association` in Rails 6 would be my preference. \r\n\r\nTangential issue with FKs #17325\r\n\r\nSomeone [bitten by this before on Stack Overflow](http://stackoverflow.com/questions/20945853/rails-has-one-build-association-deletes-record-before-save)\r\n\r\n[A pull](https://github.com/rails/rails/pull/13838/files) added comment \"To avoid database inconsistencies\" but it isn't clear what that means. \r\n\r\nI've used Rails for years and this is the first time the usually well considered API has really bitten me. But this innocuous method has caused valid data to be deleted putting our app into an inconsistent state taking hours to track down. Perhaps Rails is worried about a duplicate being saved, but that's a lot better than a complete record being deleted when a user clicks back. As `build` aliasses`new` surely it's simple OOP; you call `new` twice you get 2 objects in memory. If you only want to do something with one of them then that's up to you. This feels like Rails overstepping the mark.\r\n\r\nClose issue if core thinks it makes sense as is or theres no chance of changing such an old behaviour. I partly opened just to aid in googling the quirk. Thanks.\r\n\r\n\r\n### Workaround\r\n\r\nAs there isn't a built in method that simply instantiates a has_one, you have to check:\r\n\r\n```ruby\r\nparent.build_child unless parent.child\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/28821/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 885003,
        "closed_by_id": 28418009,
        "label_ids": [
            107191,
            12449438
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2499616527,
        "number": 52763,
        "title": "Fix parameters `deep_transform_keys` has conflicted keys",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-01T18:22:18Z",
        "updated_at": "2024-09-01T23:26:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nFixes #52754\r\nRelated to the last comments from #50361\r\n\r\n### Detail\r\n\r\nChanges `deep_transform_keys` and `deep_transform_keys!` to keep the non-empty object when transformed keys conflict with the original key.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52763/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5642707,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52763.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52763.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2485180018,
        "number": 52707,
        "title": "feat: Add `where.exists_with` methods",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2024-08-25T10:58:58Z",
        "updated_at": "2024-09-01T18:10:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "To filter parent model records, with any one child associated with it by semi-joins between parent and children\r\n\r\n### Motivation / Background\r\n\r\nTo optimize the performance when filtering parent model records based on the presence of associated records, we propose using semi-joins instead of full joins. Typically, we rely on methods like `where.associated` and `where.missing`, which utilize `JOIN` clauses. However, in scenarios where we don't need the associated records joins in the result set, semi-joins offer a more efficient alternative. They help avoid the overhead of returning duplicate rows when there are multiple matches.\r\n\r\nFor example, to retrieve posts with at least one comment, we can now write:\r\n```ruby\r\nPost.where.exists_with(:comments)\r\n```",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52707/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 67046614,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 7,
        "reactions_plus1": 3,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 2,
        "reactions_eyes": 1,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52707.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52707.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2452962780,
        "number": 52527,
        "title": "restrict_with_error prevents destruction of associated record when parent record is destroyed",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-07T09:04:27Z",
        "updated_at": "2024-09-01T15:36:00Z",
        "closed_at": "2024-09-01T15:36:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  gem 'rails'\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem 'sqlite3', '~> 1.4'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :chart_dashboard_elements, force: true do |t|\r\n    t.references :chart_configurator, null: false, foreign_key: true\r\n  end\r\n\r\n  create_table :chart_configurators, force: true do |t|\r\n  end\r\nend\r\n\r\nclass ChartDashboardElement < ActiveRecord::Base\r\n  belongs_to :chart_configurator, dependent: :destroy\r\nend\r\n\r\nclass ChartConfigurator < ActiveRecord::Base\r\n  has_one :chart_dashboard_element, dependent: :restrict_with_error\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_destroy\r\n    chart = ChartDashboardElement.create!(chart_configurator: ChartConfigurator.create!)\r\n\r\n    chart.destroy!\r\n\r\n    assert_equal 0, ChartDashboardElement.all.count\r\n    assert_equal 0, ChartConfigurator.all.count\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n`ChartDashboardElement` and `ChartConfigurator` are destroyed. I would except `restrict_with_error` does not apply in this case because the relevant record is being destroyed.\r\n\r\nWhen you replace `:restrict_with_error` with `:destroy` it does work.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nA error is given: `ActiveRecord::RecordNotDestroyed: Failed to destroy ChartDashboardElement with id=1`\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.4\r\n\r\n**Ruby version**: 3.3.2\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52527/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 194562,
        "closed_by_id": 39735028,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2493817120,
        "number": 52742,
        "title": "Inconsistent type handling for `real` columns in PostgreSQL schema dumps and loads",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-29T08:43:01Z",
        "updated_at": "2024-09-01T15:30:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nWhen dumping a PostgreSQL schema that includes a `real` column (defined as `float(24)`), the column is represented as `float` in the generated schema dump. However, when loading this schema, the `real` column is converted to `double precision`.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", \"7.1.4\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\ndbconfig = {\r\n  adapter: \"postgresql\",\r\n  username: \"postgres\",\r\n  password: \"postgres\",\r\n  host: \"localhost\",\r\n  database: \"migration_test\"\r\n}\r\nActiveRecord::Base.establish_connection(dbconfig.merge(database: \"postgres\"))\r\nActiveRecord::Base.connection.drop_database(\"migration_test\")\r\nActiveRecord::Base.connection.create_database(\"migration_test\")\r\nActiveRecord::Base.establish_connection(dbconfig)\r\n\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nclass CreatePaymentWithFloatColumn < ActiveRecord::Migration::Current\r\n  def change\r\n    create_table :payments do |t|\r\n      t.float :amount, limit: 24\r\n    end\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    CreatePaymentWithFloatColumn.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"real\", Payment.columns_hash[\"amount\"].sql_type\r\n\r\n    io = StringIO.new\r\n    ActiveRecord::SchemaDumper.dump(ActiveRecord::Base.connection, io)\r\n    assert_includes('t.float \"amount\", limit: 24', io.string)\r\n  end\r\nend\r\n```\r\n\r\nresult:\r\n```\r\nRun options: --seed 55169\r\n\r\n# Running:\r\n\r\n==  CreatePaymentWithFloatColumn: migrating ===================================\r\n-- create_table(:payments)\r\nD, [2024-08-29T17:34:22.146929 #38268] DEBUG -- :    (2.8ms)  CREATE TABLE \"payments\" (\"id\" bigserial primary key, \"amount\" float(24))\r\n   -> 0.0187s\r\n==  CreatePaymentWithFloatColumn: migrated (0.0187s) ==========================\r\n\r\nF\r\n\r\nFinished in 0.036045s, 27.7431 runs/s, 83.2293 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_migration_up [migration_test.rb:50]:\r\nExpected \"t.float \\\"amount\\\", limit: 24\" to include \"# This file is auto-generated from the current state of the database. Instead\\n# of editing this file, please use the migrations feature of Active Record to\\n# incrementally modify your database, and then regenerate this schema definition.\\n#\\n# This file is the source Rails uses to define your schema when running `bin/rails\\n# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to\\n# be faster and is potentially less error prone than running all of your\\n# migrations from scratch. Old migrations may fail to apply correctly if those\\n# migrations use external dependencies or application code.\\n#\\n# It's strongly recommended that you check this file into your version control system.\\n\\nActiveRecord::Schema[7.2].define(version: 0) do\\n  # These are extensions that must be enabled in order to support this database\\n  enable_extension \\\"plpgsql\\\"\\n\\n  create_table \\\"payments\\\", force: :cascade do |t|\\n    t.float \\\"amount\\\"\\n  end\\nend\\n\".\r\n\r\n1 runs, 3 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nA `real` column defined in a PostgreSQL schema should be preserved as a `real` column when dumped and loaded. \r\n\r\nsee: https://www.postgresql.org/docs/14/datatype-numeric.html#DATATYPE-FLOAT\r\n> PostgreSQL also supports the SQL-standard notations float and float(p) for specifying inexact numeric types. Here, p specifies the minimum acceptable precision in binary digits. PostgreSQL accepts float(1) to float(24) as selecting the real type, while float(25) to float(53) select double precision. Values of p outside the allowed range draw an error. float with no precision specified is taken to mean double precision.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nThe current behavior results in a conversion from `real` to `double precision` during the dump and load process.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.4\r\n\r\n**Ruby version**: 3.3.4\r\n\r\n**PostgreSQL version**: 14.7\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52742/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3143443,
        "label_ids": [
            107191,
            70310659,
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2483762187,
        "number": 52696,
        "title": "Add :row_count in cached sql.active_record payload",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-23T19:31:56Z",
        "updated_at": "2024-09-01T12:56:13Z",
        "closed_at": "2024-08-23T21:39:43Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Previously in #50887 we added `:row_count` to the instrumentation payload for sql.active_record, but only for uncached queries. This adds the same information on queries which are cached.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52696/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 131752,
        "closed_by_id": 131752,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52696.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52696.patch",
        "pull_request_merged_at": "2024-08-23T21:39:43Z"
    },
    {
        "id": 2498422911,
        "number": 52755,
        "title": "Running `bin/setup` in an application template errors out when `bin/dev` uses Foreman",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-30T23:26:32Z",
        "updated_at": "2024-09-01T10:02:51Z",
        "closed_at": "2024-09-01T09:55:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "The issue started appearing on Rails main after this commit was merged: https://github.com/rails/rails/commit/7ed09d3a387a780278700ac6edac3e97aa41aa3a.\r\n\r\n### Steps to reproduce\r\n\r\nRun the following shell commands:\r\n\r\n```shell\r\necho 'after_bundle { run \"bin/setup\" }' > template.rb\r\n\r\nrails new myapp --main --css tailwind -m $(pwd)/template.rb\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe template should not error out.\r\n\r\n### Actual behavior\r\n\r\nThe template errors out:\r\n\r\n```\r\n== Starting development server ==\r\n...\r\nInstalling foreman...\r\n...\r\nSuccessfully installed foreman-0.88.1\r\n1 gem installed\r\n/Users/jerome/.asdf/installs/ruby/3.3.2/lib/ruby/site_ruby/3.3.0/bundler/rubygems_integration.rb:265:in `block in replace_bin_path': can't find executable foreman for gem foreman. foreman is not currently included in the bundle, perhaps you meant to add it to your Gemfile? (Gem::Exception)\r\n        from /Users/jerome/.asdf/installs/ruby/3.3.2/lib/ruby/site_ruby/3.3.0/bundler/rubygems_integration.rb:293:in `block in replace_bin_path'\r\n        from /Users/jerome/.asdf/installs/ruby/3.3.2/lib/ruby/gems/3.3.0/bin/foreman:25:in `<main>'\r\n```\r\n\r\nNote: if I `cd myapp` and run `bin/setup` again, it works with no errors.\r\n\r\n### System configuration\r\n**Rails version**: main (8.0.0.alpha)\r\n\r\n**Ruby version**: 3.3.2\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52755/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 236461,
        "closed_by_id": 236461,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2498972446,
        "number": 52757,
        "title": "Rails multi Tenant with Multi DB not working - No connection pool for 'Activerecord::Base' found.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-31T17:40:39Z",
        "updated_at": "2024-09-01T08:42:44Z",
        "closed_at": "2024-09-01T08:42:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nWe have implemented Multi-tenancy with Multiple Databases with Rails 7.0\r\n\r\nWe are strong DB configurations into MetaDB and loading dynamically like this:\r\n\r\n      \r\n\r\n \r\n      db_config = MetadbDsDetail.all.each_with_object({}) do |db_detail, db_hash|\r\n      next if db_detail.blank?\r\n      puts \"************* Available ECL db details #{db_detail} *******************\"\r\n      lxp_db = {\r\n        adapter: 'mysql2',\r\n        database: db_detail.db_name,\r\n        username: db_detail.username,\r\n        password: db_detail.decrypt_password(db_detail.password),\r\n        host: db_detail.db_url,\r\n        port: db_detail.try(:port) || 3306,\r\n        pool: db_detail.db_pool || 100,\r\n        reaping_frequency: db_detail.reaping_frequency || 5\r\n      }\r\n\r\n      lxp_replica_db = {\r\n        adapter: 'mysql2',\r\n        database: db_detail.replica_db,\r\n        username: db_detail.replica_username,\r\n        password: db_detail.decrypt_password(db_detail.replica_password),\r\n        host: db_detail.replica_db_url,\r\n        port: db_detail.try(:replica_port) || 3306,\r\n        pool: db_detail.replica_db_pool || 100,\r\n        reaping_frequency: db_detail.reaping_frequency || 5\r\n      }\r\n\r\n      ecl_master_db = {\r\n        adapter: db_detail.ecl_adapter,\r\n        database: db_detail.ecl_master_db_name,\r\n        username: db_detail.ecl_master_username,\r\n        password: db_detail.decrypt_password(db_detail.ecl_master_password),\r\n        host: db_detail.ecl_master_db_url,\r\n        port: db_detail.try(:ecl_master_port) || 3306,\r\n        pool: db_detail.ecl_master_db_pool || 100,\r\n        reaping_frequency: db_detail.ecl_master_reaping_frequency || 5\r\n      }\r\n\r\n      db_hash[db_detail.db_name.to_sym] = lxp_db\r\n      db_hash[db_detail.replica_db.to_sym] = lxp_replica_db\r\n      db_hash[db_detail.ecl_master_db_name.to_sym] = ecl_master_db\r\n    end\r\n    new_config = Rails.application.config.database_configuration.merge!(db_config)\r\n    ActiveRecord::Base.configurations = new_config\r\n\r\nSideki Middleware code to Switch connection\r\n\r\n     `# lib/sidekiq/middleware/server_middleware.rb\r\n      class ServerSideMiddleware\r\n        def call(worker, job, queue)\r\n          # before_action logic here\r\n          if MULTI_DB_ENABLED\r\n            lxp_tenant = job['lxp_tenant'] if job['lxp_tenant'].present?\r\n            ecl_tenant = job['ecl_tenant'] if job['ecl_tenant'].present?\r\n      \r\n            if(lxp_tenant || ecl_tenant)\r\n              switch_tenant_connection(lxp_tenant, BaseLxp, :lxp_tenant_sidekiq_server) if lxp_tenant\r\n              switch_tenant_connection(ecl_tenant, ApplicationRecord, :ecl_tenant_sidekiq_server) if ecl_tenant\r\n              yield # Execute the job\r\n            # elsif Sidekiq::Cron::Job.all.map(&:klass).uniq.include?(job['class']) # MULTIDB: cron jobs needs to run for all databases\r\n            #   exec_cron_on_multi_db\r\n            else\r\n              yield\r\n              puts \"Job #{job.class} with Job Id #{job} in queue #{queue} does not have tenant argument\"\r\n            end\r\n          end\r\n          puts \"After executing #{worker.class} with job #{job}\" # after_action logic here\r\n        end\r\n      \r\n        def exec_cron_on_multi_db\r\n          yield && return if Rails.env.test?\r\n          ecl_details = MetadbDsDetail.all\r\n          ecl_details.each do |ecl_db|\r\n            ActiveRecord::Base.connection.schema_cache.clear!\r\n            ApplicationRecord.establish_connection(ecl_db.ecl_master_db_name.to_sym)\r\n            # ActiveRecord::Base.descendants.each(&:reset_column_information)\r\n            yield if block_given?\r\n          end\r\n        end\r\n      \r\n        def switch_tenant_connection(tenant, base_class, store_key)\r\n          if tenant.present?\r\n            base_class.establish_connection(tenant.to_sym)\r\n            RequestStore.store[store_key] = tenant\r\n          end\r\n        end\r\n      end\r\n```\r\n In Above code we are getting proper value for ecl_tanent and lxp_tanent but we are facing multiple issues for multiple Jobs like\r\n `No connection pool for 'Activerecord::Base' found.`\r\n `ActiveRecord::ConnectionNotEstablished`\r\n \r\n How to solve this?\r\n\r\n### Expected behavior\r\nIdeally, it should switch connection to the correct DB and execute code.\r\n\r\n### Actual behavior\r\nGiving Connecton Pool and ConnectionNotEstablished Error\r\n\r\n### System configuration\r\n**Rails version**: '~> 7.0', '>= 7.0.8\r\n\r\n**Ruby version**: '3.0.6'\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52757/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 3773204,
        "closed_by_id": 5657035,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2296461332,
        "number": 51830,
        "title": "Rails 7.1 changes established database connection after calling `rails db:test:prepare` for multi-database apps",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-05-14T21:43:53Z",
        "updated_at": "2024-09-01T02:52:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n1. `rails new example`\r\n2. In the new app, setup a multiple-database configuration `config/database.yml` file:\r\n\r\n    ```\r\n    default: &default\r\n      adapter: sqlite3\r\n      pool: <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %>\r\n      timeout: 5000\r\n    \r\n    development:\r\n      primary:\r\n        <<: *default\r\n        database: db/development.sqlite3\r\n      animals:\r\n        <<: *default\r\n        database: db/animals_development.sqlite3\r\n    \r\n    test:\r\n      primary:\r\n        <<: *default\r\n        database: db/test.sqlite3\r\n      animals:\r\n        <<: *default\r\n        database: db/animals_test.sqlite3\r\n    ```\r\n    \r\n3. Add the following to the beginning of `db/seeds.rb`:\r\n\r\n    ```\r\n    puts \"Seed DB Config: #{ApplicationRecord.connection.pool.db_config.inspect}\"\r\n    ```\r\n    \r\n4. Run `rails db:migrate` to create the schema files.\r\n5. Run `RAILS_ENV=test rails db:drop db:test:prepare db:seed`\r\n\r\n### Expected behavior\r\n\r\nIn Rails 7.0 and prior, the `seed` task would run against the default, `primary` database connection, which is what I would expect. This can be seen by the output of this example app on Rails 7.0:\r\n\r\n```\r\nRAILS_ENV=test rails db:drop db:test:prepare db:seed\r\nDropped database 'db/test.sqlite3'\r\nDropped database 'db/animals_test.sqlite3'\r\nSeed DB Config: #<ActiveRecord::DatabaseConfigurations::HashConfig:0x0000000121fd1368 @env_name=\"test\", @name=\"primary\", @configuration_hash={:adapter=>\"sqlite3\", :pool=>5, :timeout=>5000, :database=>\"db/test.sqlite3\"}>\r\n```\r\n\r\n### Actual behavior\r\n\r\nIn Rails 7.1+, the `seed` task runs against the last database connection defined, which may cause seeding to break. Here is the same output from this type of multi-database example app in Rails 7.1:\r\n\r\n```\r\nRAILS_ENV=test rails db:drop db:test:prepare db:seed\r\nDropped database 'db/test.sqlite3'\r\nDropped database 'db/animals_test.sqlite3'\r\nSeed DB Config: #<ActiveRecord::DatabaseConfigurations::HashConfig:0x000000012d0d76f8 @env_name=\"test\", @name=\"animals\", @configuration_hash={:adapter=>\"sqlite3\", :pool=>5, :timeout=>5000, :database=>\"db/animals_test.sqlite3\"}>\r\n```\r\n\r\nNote that now the seeding process is trying to run while connected to the secondary `animals` database. In a more real-life scenario, this may cause seeding to fail, since seeds may not work if running against a non-primary database where your model tables may not exist.\r\n\r\nYou can also see how it's the `db:test:prepare` task that is affecting the active connection, since if you call `db:seed` by itself in Rails 7.1, it does still connect to the expected primary database. So this issue is specific to chaining multiple tasks in a single invocation after `db:test:prepare`.\r\n\r\n```\r\nRAILS_ENV=test rails db:seed\r\nSeed DB Config: #<ActiveRecord::DatabaseConfigurations::HashConfig:0x0000000125c5a140 @env_name=\"test\", @name=\"primary\", @configuration_hash={:adapter=>\"sqlite3\", :pool=>5, :timeout=>5000, :database=>\"db/test.sqlite3\"}>\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.2\r\n\r\n**Ruby version**: 3.3.1\r\n\r\n### Additional notes\r\n\r\n- I believe this happens since the `db:test:purge` task (which is called as a dependency of `db:test:prepare`) loops over the database connections and leaves the app connected to whatever the last connection to be looped over was: https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/railties/databases.rake#L559-L563\r\n- As noted above, you can side-step this issue if you call the tasks with separate CLI invocations. So, for example, if you call `RAILS_ENV=test rails db:drop db:test:prepare && RAILS_ENV=test rails db:seed` instead, then the seed task does execute against the expected primary database, but this means tasks are working different when called in isolation versus being chained.\r\n- In this example, it impacts the seed task, but this could impact any other rake task chained after `db:test:prepare` in the same CLI invocation, since in all cases, it leaves the active database connection as the last one defined for multi-database apps.\r\n- I don't think this happened in Rails 7.0 because `db:test:prepare` would specifically reset the connection back to the default connection: https://github.com/rails/rails/blob/v7.0.8.1/activerecord/lib/active_record/railties/databases.rake#L559-L563\r\n- So I believe it's related to these changes in 7.1: https://github.com/rails/rails/pull/46270 However, `db:test:purge` doesn't use the new `with_temporary_connection_for_each` approach (which does help avoid these type of problems). But I'm note entirely certain it can use the new approach, since on a quick test, I ran into errors, since the database doesn't exist yet in my example case (due to the `db:drop`). But there might be other better ways to leverage the new setup for this specific task.\r\n- Alternatively, another possible solution/workaround would be to call `ActiveRecord::Base.establish_connection(ActiveRecord::Tasks::DatabaseTasks.env.to_sym)` at the end of the `db:test:purge` task to reset any connections the loop may have established. That worked in a quick test, but again, I'm unsure if that's necessarily the best solution.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51830/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "user_id": 12112,
        "closed_by_id": 28418009,
        "label_ids": [
            107191,
            41328116
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2472921317,
        "number": 52646,
        "title": "After touch callback does not run after destroy when using cache counter ",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2024-08-19T09:42:45Z",
        "updated_at": "2024-09-01T02:28:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :projects, force: true do |t|\r\n    t.string :title\r\n    t.boolean :completed, default: false\r\n    t.integer :project_items_count, default: 0\r\n    t.timestamps\r\n  end\r\n\r\n  create_table :project_items, force: true do |t|\r\n    t.integer :project_id\r\n    t.string :title\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass ProjectItem < ActiveRecord::Base\r\n  belongs_to :project, touch: true, counter_cache: true # Only an issue with counter_cache\r\n\r\n  def completed?\r\n    true # just assume this is true for simplicity\r\n  end\r\nend\r\n\r\nclass Project < ActiveRecord::Base\r\n  has_many :project_items, dependent: :destroy\r\n\r\n  after_touch :update_completed\r\n\r\n  def update_completed\r\n    update(completed: project_items.reload.any? && project_items.reload.all?(&:completed?))\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    project = Project.create!\r\n    project.project_items << [ProjectItem.create!]\r\n\r\n    assert_equal 1, project.project_items.count\r\n    assert_equal true, project.reload.completed?\r\n\r\n    ProjectItem.first.destroy!\r\n    # project.project_items.first.destroy! ## This works ##\r\n\r\n    assert_equal 0, project.project_items.count\r\n    assert_equal false, project.reload.completed?\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\nThe `after_touch` callback should run on destroy.\r\nRegardless of `catch_counter: true` and not calling destroy through the association e.g. `project.project_items.first.destroy` works\r\n\r\n### Actual behavior\r\nThe after touch callback does not run when `cache_counter: true` and `ProjectItem.first.destroy`\r\n\r\n### System configuration\r\n**Rails version**: 7.2\r\n\r\n**Ruby version**: 3.3.4\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52646/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 23489664,
        "label_ids": [
            107191,
            41328116
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2476082398,
        "number": 52658,
        "title": "`BIND=\"::\" rails s` fails",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-08-20T16:35:43Z",
        "updated_at": "2024-09-01T00:46:33Z",
        "closed_at": "2024-08-20T17:32:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nAttempt to start the built-in rails server listening bound to ipv6 interfaces:\r\n\r\n```\r\n$ BIND=\"::\" rails s\r\n```\r\n\r\nObserve failure due to URL parsing (to do: add error trace)\r\n\r\n### Expected behavior\r\n\r\nCorrectly binds the rails server to ipv6 interfaces.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThrows an error\r\n\r\n### System configuration\r\n**Rails version**: 7.1 (mastodon)\r\n\r\n**Ruby version**: 3.3.4\r\n\r\n### Additional Note:\r\n\r\nUsing the URL syntax for ipv6 loopback does work, but isn't technically the correct syntax.\r\n\r\n```\r\nBIND=\"[::]\" rails s\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52658/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 30827,
        "closed_by_id": 47848,
        "label_ids": [
            131864
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 333434461,
        "number": 33155,
        "title": "has_one through not available on unpersisted instances",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2018-06-18T21:05:07Z",
        "updated_at": "2024-08-31T20:40:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Opening a new issue since the old one was marked as stale and I didn't get to it in time (doesn't seem like I can re-open it).\r\n\r\nhttps://github.com/rails/rails/issues/31975\r\n\r\n@adamlogic confirmed that this still reproduces on current master: https://github.com/rails/rails/issues/31975#issuecomment-397656705\r\n\r\nNote: I believe the way that this works is by associating with post_id, so if that's the case it makes sense that this would be the behavior, and I suppose this becomes an enhancement request.\r\n\r\n`Comment` knows that it has a `Post` associated with it as evidenced by the passed assertion on L66, so is it possible to leverage that relationship to make the `through` association work?\r\n\r\n### Steps to reproduce\r\n\r\nScript to reproduce: https://gist.github.com/zachwalton/395412f5b7e97837e6273981dbb7faf3\r\n\r\n### Expected behavior\r\n\r\n`owner` should be not be nil when accessed through the `has_one through` association\r\n\r\n### Actual behavior\r\n\r\n`owner` is nil when accessed through the `has_one through` association\r\n\r\n### System configuration\r\n**Rails version**: 5.1.2\r\n\r\n**Ruby version**: 2.4.2\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/33155/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 303729,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 10,
        "reactions_plus1": 10,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2131057210,
        "number": 51052,
        "title": "New find_or_create_by behavior in Rails 7.1 can introduce subtransactions in PostgreSQL",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-02-12T21:59:02Z",
        "updated_at": "2024-08-31T19:55:00Z",
        "closed_at": "2024-08-31T19:55:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In https://github.com/rails/rails/pull/45720, `find_or_create_by` was modified to call `create_or_find_by`, but that [method](https://github.com/rails/rails/blob/023a3eb3c046091a5d52027393a6d29d0576da01/activerecord/lib/active_record/relation.rb#L214-L218) can introduce subtransactions in PostgreSQL via the `transaction(requires_new: true)` call:\r\n\r\n```ruby\r\ndef create_or_find_by(attributes, &block)\r\n  transaction(requires_new: true) { create(attributes, &block) }\r\nrescue ActiveRecord::RecordNotUnique\r\n  find_by!(attributes)\r\nend\r\n```\r\n\r\nAs I mentioned in https://about.gitlab.com/blog/2021/09/29/why-we-spent-the-last-month-eliminating-postgresql-subtransactions/, we spent a lot of effort to get rid of subtransactions because they suffer from significant performance issues at scale. We saw all our database replicas stall out at times as a result:\r\n\r\n> In a busy database, it's possible for the size of the subtransaction log to grow so large that the working set no longer fits into memory. This results in a lot of cache misses, which in turn causes a high amount of disk I/O and CPU as PostgreSQL furiously tries to load data from disk to keep up with all the lookups.\r\n\r\nHas this been solved in PostgreSQL yet? No. The commits highlighted in https://postgres.ai/blog/20210831-postgresql-subtransactions-considered-harmful#ideas-for-postgresql-development haven't made it into PostgreSQL upstream yet. I see there is recent activity in this thread: https://www.postgresql.org/message-id/flat/CAFiTN-vzDvNz=ExGXz6gdyjtzGixKSqs0mKHMmaQ8sOSEFZ33A@mail.gmail.com\r\n\r\nFor now, we're going to patch ActiveRecord to revert the change, but I'd suggest reverting this or making it some option for those who really need to deal with the racy conditions outlined.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51052/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 963826,
        "closed_by_id": 28418009,
        "label_ids": [
            12449438
        ],
        "reactions_total_count": 6,
        "reactions_plus1": 6,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2002933292,
        "number": 50120,
        "title": "switch to dynamic database problem",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-20T20:17:29Z",
        "updated_at": "2024-08-31T19:10:11Z",
        "closed_at": "2023-11-20T20:37:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nHi, I am using rails 7.1 and ruby 3.2.2. My business is multi-tenant: database per tenant. And also, the `db_config` must be fetched from other server, so I cannot use [this approach](https://guides.rubyonrails.org/active_record_multiple_databases.html#setting-up-your-application).\r\n\r\nI created a class\r\n\r\n```rb\r\nclass DatabaseService\r\n  # rubocop:disable Style/ClassVars\r\n  @@db_config = ActiveRecord::Base.connection_db_config.configuration_hash.deep_dup.freeze\r\n  # rubocop:enable Style/ClassVars\r\n\r\n  class << self\r\n    def root_db_config\r\n      @@db_config\r\n    end\r\n\r\n    def switch_database(db_config:)\r\n      ActiveRecord::Base.establish_connection(db_config)\r\n\r\n      return unless block_given?\r\n\r\n      yield\r\n    ensure\r\n      # ActiveRecord::Base.close if block_given?\r\n      # switch_root_database if block_given?\r\n      ActiveRecord::Base.connection_pool.release_connection if block_given?\r\n    end\r\n\r\n    def switch_root_database\r\n      ActiveRecord::Base.establish_connection(@@db_config)\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nAlso, I created a middleware\r\n\r\n```rb\r\n# frozen_string_literal: true\r\n\r\nclass SwitchTenantDatabaseMiddleware\r\n  def initialize(app)\r\n    @app = app\r\n  end\r\n\r\n  def call(env)\r\n    request = Rack::Request.new(env)\r\n\r\n    domain = URI(request.referer).host\r\n    tenant = get_tenant_by_domain(domain:)\r\n    db_config = tenant['db_config'].symbolize_keys\r\n\r\n    ActiveRecord::Base.connection_pool.with_connection do\r\n      DatabaseService.switch_database(\r\n        db_config: DatabaseService.root_db_config.merge(\r\n          database: db_config[:database],\r\n          username: db_config[:username],\r\n          password: db_config[:password]\r\n        )\r\n      )\r\n    end\r\n\r\n    @app.call(env)\r\n  ensure\r\n    # DatabaseService.switch_root_database\r\n    # ActiveRecord::Base.connection_pool.release_connection\r\n    ActiveRecord::Base.connection.close\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nCan connect to the database\r\n\r\n### Actual behavior\r\n\r\nRaise error `ActiveRecord::ConnectionNotEstablished: No connection pool for 'ActiveRecord::Base' found`\r\n\r\n### System configuration\r\n**Rails version**: 7.1.1\r\n\r\n**Ruby version**: 3.2.2\r\n\r\n### Debug\r\n\r\n- The ensure block is for trying to remove the connection from the pool to fix the bug, but it seems useless\r\n\r\n- I log the `ActiveRecord::Base.connection_pool.stat` result to terminal, the result from the request before the one that raises error above is `{:size=>15, :connections=>3, :busy=>0, :dead=>0, :idle=>3, :waiting=>0, :checkout_timeout=>5.0}`, the size is still greater than the `connections`, but I still not understand why it still raise the error.\r\n\r\n- When error, I checked this file `active_record/connection_adapters/abstract/connection_handler.rb`, the result of `connection_name_to_pool_manager[connection_name]` is `#<ActiveRecord::ConnectionAdapters::PoolManager:0x0000000108a4c910 @role_to_shard_mapping={:writing=>{}}>`, while the success one, the `:writing` will be an object instead of empty object.\r\n\r\nHere the full backtrace\r\n\r\n```\r\n# [\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activerecord/lib/active_record/connection_handling.rb:283:in `connection_pool'\",\r\n#   \"app/services/database_service.rb:53:in `switch_database'\",\r\n#   \"app/middlewares/switch_tenant_database_middleware.rb:22:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/etag.rb:29:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/conditional_get.rb:31:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/head.rb:15:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activerecord/lib/active_record/migration.rb:654:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/callbacks.rb:101:in `run_callbacks'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/callbacks.rb:28:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/executor.rb:14:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/actionable_exceptions.rb:16:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/sentry-rails-5.13.0/lib/sentry/rails/rescued_exception_interceptor.rb:9:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/debug_exceptions.rb:29:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/sentry-ruby-5.13.0/lib/sentry/rack/capture_exceptions.rb:13:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/railties/lib/rails/rack/logger.rb:37:in `call_app'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/railties/lib/rails/rack/logger.rb:24:in `block in call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/tagged_logging.rb:135:in `block in tagged'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/tagged_logging.rb:39:in `tagged'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/tagged_logging.rb:135:in `tagged'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/broadcast_logger.rb:240:in `method_missing'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/railties/lib/rails/rack/logger.rb:24:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/remote_ip.rb:92:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/request_id.rb:28:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/runtime.rb:24:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/server_timing.rb:59:in `block in call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/server_timing.rb:24:in `collect_events'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/server_timing.rb:58:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/executor.rb:14:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/static.rb:25:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/sendfile.rb:114:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/host_authorization.rb:141:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-cors-2.0.1/lib/rack/cors.rb:102:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/railties/lib/rails/engine.rb:529:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/configuration.rb:272:in `call'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/request.rb:100:in `block in handle_request'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/thread_pool.rb:378:in `with_force_shutdown'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/request.rb:99:in `handle_request'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/server.rb:443:in `process_client'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/server.rb:241:in `block in run'\",\r\n#   \".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/thread_pool.rb:155:in `block in spawn_thread'\"\r\n# ]\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50120/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 15771072,
        "closed_by_id": 1080678,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2325543960,
        "number": 51950,
        "title": "Raise when using key which can't respond to `#to_sym` in EncryptedConfiguration",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-05-30T12:21:08Z",
        "updated_at": "2024-08-31T12:08:19Z",
        "closed_at": "2024-08-11T09:17:26Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "As is the case when trying to use an integer as a key, which is unsupported.\r\n\r\nThis replaces the following less-friendly error:\r\n\r\n```\r\nNoMethodError: undefined method 'to_sym' for an instance of Integer\r\n    lib/active_support/ordered_options.rb:38:in 'ActiveSupport::OrderedOptions#[]='\r\n    lib/active_support/delegation.rb:167:in 'Kernel#public_send'\r\n    lib/active_support/delegation.rb:167:in 'ActiveSupport::EncryptedConfiguration#method_missing'\r\n```\r\n\r\nWith a more helpful error message:\r\n\r\n```\r\nActiveSupport::EncryptedConfiguration::InvalidKeyError: Key '42' is invalid, it must respond to '#to_sym' from configuration in '/tmp/config-20240530-4153925-tfzzt/credentials.yml.enc'.\r\n    lib/active_support/encrypted_configuration.rb:99:in 'block in ActiveSupport::EncryptedConfiguration#deep_symbolize_keys'\r\n    lib/active_support/core_ext/hash/keys.rb:120:in 'block in Hash#_deep_transform_keys_in_object'\r\n    lib/active_support/core_ext/hash/keys.rb:119:in 'Hash#each'\r\n    lib/active_support/core_ext/hash/keys.rb:119:in 'Enumerable#each_with_object'\r\n    lib/active_support/core_ext/hash/keys.rb:119:in 'Hash#_deep_transform_keys_in_object'\r\n    lib/active_support/core_ext/hash/keys.rb:66:in 'Hash#deep_transform_keys'\r\n    lib/active_support/encrypted_configuration.rb:96:in 'ActiveSupport::EncryptedConfiguration#deep_symbolize_keys'\r\n    lib/active_support/encrypted_configuration.rb:86:in 'ActiveSupport::EncryptedConfiguration#config'\r\n```\r\n\r\nFixes: #51215",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51950/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "closed_by_id": 44640,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51950.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51950.patch",
        "pull_request_merged_at": "2024-08-11T09:17:26Z"
    },
    {
        "id": 2055645682,
        "number": 50437,
        "title": "Add a bug report for Action Cable",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-12-25T12:05:15Z",
        "updated_at": "2024-08-31T10:47:36Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "This was the first approach that came to mind, maybe would be interesting to demonstrate using the built-in [TestHelper](https://edgeapi.rubyonrails.org/classes/ActionCable/TestHelper.html).\r\n\r\nThere is probably some work to get this passing in CI, similar to #49527, too.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50437/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 277819,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 4,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 4,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50437.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50437.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1959672475,
        "number": 49769,
        "title": "Support non-column-backed attributes for `enum`",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-10-24T16:45:38Z",
        "updated_at": "2024-08-31T05:20:38Z",
        "closed_at": "2023-10-24T17:46:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Follow-up to #45734.\r\n\r\nThis re-adds support for using `enum` with non-column-backed attributes while still guarding against typos in enum attribute names.  When using `enum` with a non-column-backed attribute, the attribute must be previously declared with an explicit type.  For example:\r\n\r\n  ```ruby\r\n  class Post < ActiveRecord::Base\r\n    attribute :topic, :string\r\n    enum topic: %i[science tech engineering math]\r\n  end\r\n  ```\r\n\r\nFixes #49717.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/49769/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 771968,
        "closed_by_id": 771968,
        "label_ids": [
            107191,
            107195
        ],
        "reactions_total_count": 15,
        "reactions_plus1": 7,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 8,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/49769.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/49769.patch",
        "pull_request_merged_at": "2023-10-24T17:46:05Z"
    },
    {
        "id": 2459827184,
        "number": 52572,
        "title": "Upgrading 7.1.3.4 to 7.2: Unrecognized ActiveSupport::Cache.format_version",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-12T00:14:12Z",
        "updated_at": "2024-08-31T03:08:40Z",
        "closed_at": "2024-08-12T11:17:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n- Rails app running rails version 7.1.3.4\r\n- Change gemfile from `\"rails\", \"~> 7.1\"` to `\"rails\", \"~> 7.2\"`\r\n- Run `bundle update`\r\n- Run `bin/rails app:update`\r\n\r\n### Expected behavior\r\n- `bin/rails app:update` should update whatever it needs, maybe create a `new_defaults...` file, etc.\r\n\r\n### Actual behavior\r\n\r\n```\r\n> bin/rails app:update\r\n/gems/ruby/3.3.0/gems/activesupport-7.2.0/lib/active_support/cache.rb:769:in `default_serializer': Unrecognized ActiveSupport::Cache.format_version: 7.2 (ArgumentError)\r\n\r\n            raise ArgumentError, \"Unrecognized ActiveSupport::Cache.format_version: #{Cache.format_version.inspect}\"\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\tfrom /gems/ruby/3.3.0/gems/activesupport-7.2.0/lib/active_support/cache.rb:303:in `block in initialize'\r\n\tfrom /gems/ruby/3.3.0/gems/activesupport-7.2.0/lib/active_support/cache.rb:301:in `delete'\r\n\tfrom /gems/ruby/3.3.0/gems/activesupport-7.2.0/lib/active_support/cache.rb:301:in `initialize'\r\n\tfrom /gems/ruby/3.3.0/gems/motor-admin-0.4.27/lib/motor/assets.rb:15:in `new'\r\n\tfrom /gems/ruby/3.3.0/gems/motor-admin-0.4.27/lib/motor/assets.rb:15:in `<module:Assets>'\r\n\tfrom /gems/ruby/3.3.0/gems/motor-admin-0.4.27/lib/motor/assets.rb:4:in `<module:Motor>'\r\n\tfrom /gems/ruby/3.3.0/gems/motor-admin-0.4.27/lib/motor/assets.rb:3:in `<main>'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'\r\n\tfrom /gems/ruby/3.3.0/gems/bootsnap-1.18.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'\r\n\tfrom /gems/ruby/3.3.0/gems/zeitwerk-2.6.17/lib/zeitwerk/kernel.rb:34:in `require'\r\n\tfrom /gems/ruby/3.3.0/gems/motor-admin-0.4.27/lib/motor.rb:70:in `<main>'\r\n\tfrom /gems/ruby/3.3.0/gems/motor-admin-0.4.27/lib/motor-admin.rb:3:in `require_relative'\r\n\tfrom /gems/ruby/3.3.0/gems/motor-admin-0.4.27/lib/motor-admin.rb:3:in `<main>'\r\n\tfrom <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:37:in `require'\r\n\tfrom <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:37:in `require'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'\r\n\tfrom /gems/ruby/3.3.0/gems/zeitwerk-2.6.17/lib/zeitwerk/kernel.rb:34:in `require'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundler/runtime.rb:60:in `block (2 levels) in require'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundler/runtime.rb:55:in `each'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundler/runtime.rb:55:in `block in require'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundler/runtime.rb:44:in `each'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundler/runtime.rb:44:in `require'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundler.rb:187:in `require'\r\n\tfrom /apife/config/application.rb:7:in `<main>'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'\r\n\tfrom /gems/ruby/3.3.0/gems/bootsnap-1.18.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'\r\n\tfrom /gems/ruby/3.3.0/gems/railties-7.2.0/lib/rails/command/actions.rb:15:in `require_application!'\r\n\tfrom /gems/ruby/3.3.0/gems/railties-7.2.0/lib/rails/commands/app/update_command.rb:24:in `configs'\r\n\tfrom /gems/ruby/3.3.0/gems/railties-7.2.0/lib/rails/commands/app/update_command.rb:15:in `perform'\r\n\tfrom /gems/ruby/3.3.0/gems/thor-1.3.1/lib/thor/command.rb:28:in `run'\r\n\tfrom /gems/ruby/3.3.0/gems/thor-1.3.1/lib/thor/invocation.rb:127:in `invoke_command'\r\n\tfrom /gems/ruby/3.3.0/gems/railties-7.2.0/lib/rails/command/base.rb:178:in `invoke_command'\r\n\tfrom /gems/ruby/3.3.0/gems/thor-1.3.1/lib/thor.rb:527:in `dispatch'\r\n\tfrom /gems/ruby/3.3.0/gems/railties-7.2.0/lib/rails/command/base.rb:73:in `perform'\r\n\tfrom /gems/ruby/3.3.0/gems/railties-7.2.0/lib/rails/command.rb:71:in `block in invoke'\r\n\tfrom /gems/ruby/3.3.0/gems/railties-7.2.0/lib/rails/command.rb:149:in `with_argv'\r\n\tfrom /gems/ruby/3.3.0/gems/railties-7.2.0/lib/rails/command.rb:69:in `invoke'\r\n\tfrom /gems/ruby/3.3.0/gems/railties-7.2.0/lib/rails/commands.rb:18:in `<main>'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'\r\n\tfrom /usr/local/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'\r\n\tfrom /gems/ruby/3.3.0/gems/bootsnap-1.18.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'\r\n\tfrom bin/rails:4:in `<main>'\r\n```\r\n\r\nI checked the [file](https://github.com/rails/rails/blob/fb6c4305939da06efdf2893d99130e7829c53e8b/activesupport/lib/active_support/cache.rb#L767) `lib/active_support/cache.rb` file and it does not seem to have an entry for 7.2, but I really can't tell if that's the issue.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.1.3.4 -> 7.2\r\n**Ruby version**:\r\n3.3.2\r\n\r\nLet me know if you need more info.\r\nThanks!",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52572/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 3300305,
        "closed_by_id": 44640,
        "label_ids": [
            131864
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2478368993,
        "number": 52671,
        "title": "Allow passing validation options to update",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2024-08-21T15:36:38Z",
        "updated_at": "2024-08-31T01:42:45Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": null,
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52671/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 55164724,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52671.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52671.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 770429310,
        "number": 40876,
        "title": "postgres: Make the initial type map query less expensive",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2020-12-17T22:45:20Z",
        "updated_at": "2024-08-31T01:37:54Z",
        "closed_at": "2020-12-18T21:14:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nWhen the pg_type table is large, the initial type map query is very expensive.\r\nThis is due to two reasons:\r\n\r\n1. The complete query does not allow use of any indexes.\r\n2. The complete query returns much more rows than we need\r\n\r\nPoint 1 is fixed by splitting up each OR into its own query. For reasons\r\nunknown to me, the query plan is slower with OR instead of separate\r\nqueries. My suspicion is that reducing the number of checks to do on a full table scan is faster, because other checks are done with an index.\r\n\r\nPoint 2 is a problem when databases have lots of tables. This is because\r\nfor each table, postgres creates both a type for each record, and a type\r\nfor an array of records. The latter types are matched by the condition\r\n`t.typelem != 0`. There is no easy way to filter out these types, but\r\nsince we already make a new query due to point 1, we can change our query\r\nto bring us exactly the data we need: all the types that reference (via\r\n`typelem`) a type we already know about. This way we greatly reduce the\r\nnumber of rows returned.\r\n\r\nThis change brings a type map initialization performance improvement.\r\nA production system with aprox 1.6MM rows in `pg_type`, improves from\r\n2.5-4.1 seconds to 1.4-1.6 seconds.\r\n\r\n### Other Information\r\n\r\nAdditionally, we remove the condition\r\n`t.typinput = 'array_in(cstring,oid,integer)'::regprocedure`, since it\r\nappears to bring no value. Array types have a nonzero `typelem`. I'm marking this PR as Draft because I'm not 100% sure about this.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/40876/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1322013,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 3,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 1,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/40876.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/40876.patch",
        "pull_request_merged_at": "2020-12-18T21:14:34Z"
    },
    {
        "id": 786959590,
        "number": 41126,
        "title": "Undocumented activerecord behavior introduced on 6.1 ",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2021-01-15T14:59:27Z",
        "updated_at": "2024-08-31T01:32:47Z",
        "closed_at": "2021-01-15T20:12:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```\r\n# app/models/project.rb\r\nclass Project < ApplicationRecord\r\n  has_many :packages, inverse_of: :project\r\nend\r\n```\r\n\r\n```\r\n# app/models/package.rb\r\nclass Package < ApplicationRecord\r\n  belongs_to :project, inverse_of: :packages\r\n  validates :name, presence: true, length: { maximum: 200 }\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\n#### rails 6.0.3.4\r\n\r\n```\r\n> project = Project.create(name: 'foo')\r\n> Package.new(project: project)\r\n> project.packages # empty\r\n```\r\n\r\n### Actual behavior\r\n\r\n#### rails 6.1.0 or above\r\n\r\n```\r\n> project = Project.create(name: 'foo')\r\n> Package.new(project: project)\r\n> project.packages # not empty, the invalid package is assigned to the project\r\n```\r\n\r\n\r\n### System configuration\r\n\r\n**Ruby version**: 2.5 or greater\r\n**Rails version**: 6.10 or greater\r\n\r\n\r\nI created some automation to test it, the README has some instructions how to run it :)\r\n\r\nhttps://github.com/vpereira/test_in_multiple_rails",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/41126/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 37418,
        "closed_by_id": 5162312,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2442642275,
        "number": 52478,
        "title": "ActiveJob: `assert_enqueued_with` does not support second-level granularity when asserting against the `at` argument  ",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-01T14:34:51Z",
        "updated_at": "2024-08-30T21:23:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_job\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BuggyJob < ActiveJob::Base\r\n  def perform\r\n    puts \"performed\"\r\n  end\r\nend\r\n\r\nclass BuggyJobTest < ActiveJob::TestCase\r\n  def test_should_not_find_job\r\n    at =  Time.new(\"1989-12-31T12:00:01\")\r\n    wait_until = Time.new(\"1989-12-31T12:00:02\")\r\n\r\n    assert_raise ActiveSupport::TestCase::Assertion do\r\n      assert_enqueued_with(job: BuggyJob, at:) do\r\n        BuggyJob.set(wait_until:).perform_later\r\n      end\r\n    end\r\n  end\r\n\r\n  def test_assert_enqueued_with_date\r\n    at = Date.tomorrow.noon\r\n    wait_until = Date.tomorrow.noon\r\n\r\n    assert_enqueued_with(job: BuggyJob, at:) do\r\n      BuggyJob.set(wait_until:).perform_later\r\n    end\r\n  end\r\n\r\n  def test_assert_enqueued_with_date_range\r\n    at_matcher = ->(job_at) { (Date.yesterday..Date.tomorrow).cover?(job_at) }\r\n\r\n    BuggyJob.set(wait_until: Date.today.noon).perform_later\r\n\r\n    assert_enqueued_with(job: BuggyJob, at: at_matcher)\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\nThe test should fail, since the values are different.\r\n\r\n### Actual behavior\r\nThe test passes\r\n\r\n### System configuration\r\n**Rails version**: `7.1.3.4`\r\n\r\n**Ruby version**: `ruby 3.3.3 (2024-06-12 revision f1c7b6f435) [arm64-darwin23]`",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52478/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5122678,
        "label_ids": [
            41328116,
            123812746
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2405844161,
        "number": 52317,
        "title": "Update engines.md: use article :references instead of article_id :integer in Comment model generator [ci skip]",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-07-12T15:17:47Z",
        "updated_at": "2024-08-30T18:52:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "For Comment model generator, use article:references instead of article_id:integer\r\n\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the engines.md documentation uses an `article_id:integer` column in its Comment model generator instead of an `article:references` column.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `article_id:integer` column to `article:references` column in the example Comment model generator and updates the explanatory text to match.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52317/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6379550,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52317.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52317.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2485084176,
        "number": 52705,
        "title": "Fix Devcontainer generator with --dev option path error",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-25T06:24:07Z",
        "updated_at": "2024-08-30T18:37:06Z",
        "closed_at": "2024-08-27T20:28:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\nFixes #52704 \r\n\r\nThis Pull Request has been created because the devcontainer generator with the --dev option fails (`rails g devcontainer --dev`).  The app generator --dev works just fine.\r\n\r\n### Detail\r\n\r\nThis Pull request moves the `Rails::Generators::RAILS_DEV_PATH` definition to Rails::Generators module rather than adding it to Rails::Generators in AppGenerator definition. It also creates a DEV_RAILS_PATH constant in `railties/test/generators/generators_test_helper.rb`, so that it can be used consistently in tests.\r\n\r\n### Additional information\r\n\r\n- I added a generator test file, it seems the generator is not tested for the `rails generate` usage, though it is well tested via app generator. I added tests for the dev option behavior only. I can work on full specs, but will keep it separate from this.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52705/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28872849,
        "closed_by_id": 47848,
        "label_ids": [
            107195,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52705.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52705.patch",
        "pull_request_merged_at": "2024-08-27T20:28:52Z"
    },
    {
        "id": 2393000455,
        "number": 52280,
        "title": "[Fix #51327] Invoke `ActiveSupport.run_load_hooks` after constant definitions `end`",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-07-05T18:31:46Z",
        "updated_at": "2024-08-30T17:57:57Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nFixes #51327\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created to move all of the calls to `ActiveSupport.run_load_hooks` outside of their respective constant definitions. This is to ensure that the constant is fully defined before the `run_load_hooks` method is called. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* ~[] Tests are added or updated if you fix a bug or add a feature.~\r\n* ~[ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.~\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52280/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 47554,
        "label_ids": [
            107188,
            107189,
            107191,
            107194,
            107195,
            3666649,
            123812746,
            300028327
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52280.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52280.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1696394730,
        "number": 48130,
        "title": "Fix belongs to with has one association multiple savings",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-04T17:19:08Z",
        "updated_at": "2024-08-30T17:09:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\"Fixes #[48077](https://github.com/rails/rails/issues/48077)\"\r\n\r\ncopy of [PR](https://github.com/rails/rails/pull/48078) that was closed because of wrong rebase\r\n\r\n### Detail\r\n\r\nWhen object is saved with `belongs_to` association, that associated to object with `has_one` relation, object actually saved   twice. For example:\r\n```\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n  belongs_to :poll\r\n\r\n  after_commit :test_after_commit\r\n  # after_save :test_after_commit saved_changes here are exists\r\n  after_save :test_after_save\r\n\r\n  attr_reader :after_save_counter\r\n\r\n  def test_after_commit\r\n    # saved_changes here are blank\r\n    if saved_change_to_release_stage?(to: 'published')\r\n      user.increment(:published_posts_count)\r\n    end\r\n  end\r\n\r\n  def test_after_save\r\n    # invokes twice\r\n    @after_save_counter ||= 0\r\n    @after_save_counter += 1\r\n  end\r\nend\r\n\r\nclass Poll < ActiveRecord::Base\r\n  has_one :post\r\nend\r\n\r\npost = Post.new(\r\n  user: user,\r\n  title: 'yoyo',\r\n  release_stage: 'published'\r\n)\r\n\r\npost.poll = Poll.new(multiple: true)\r\n\r\npost.save\r\n```\r\n\r\nFirst poll object is saved, then AR try to save post from `save_has_one_association`, after that invokes `save` method second time and this second `save` call clears saved_changes.\r\n\r\nI decided to add variable that show that object already saving and prevent second save from `save_has_one_association` callback \r\n\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/48130/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3942920,
        "label_ids": [
            107191,
            1174770998
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/48130.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/48130.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2493226301,
        "number": 52741,
        "title": "[SPAM]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-29T00:36:56Z",
        "updated_at": "2024-08-30T17:05:09Z",
        "closed_at": "2024-08-29T05:27:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52741/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 156994919,
        "closed_by_id": 567626,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2493189994,
        "number": 52740,
        "title": "Unable to initialize active_record.encryption.hash_digest_class in 7.1.4",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-08-29T00:06:13Z",
        "updated_at": "2024-08-30T17:01:30Z",
        "closed_at": "2024-08-30T16:46:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nFollow the [new_framework_defaults_7_1.rb](https://github.com/rails/rails/blob/v7.1.4/railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_7_1.rb.tt#L54) guide and configure\r\n`Rails.application.config.active_record.encryption.hash_digest_class = OpenSSL::Digest::SHA256`\r\n\r\nSee that the key_generator is instead using `OpenSSL::Digest::SHA1`\r\n\r\nWe think this might have been caused by the changes to order of initialization in #50606, but we're not confident in that.\r\n\r\nCurrently it seems that it's impossible to change the `hash_digest_class` without some terrible `instance_variable_set` on the `default_context` of the `Encryption` class since the Encryption is initialized before any initializers.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.4\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52740/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 16798,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2382498189,
        "number": 52238,
        "title": "Remove test_unit plugin_generator",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-06-30T23:30:59Z",
        "updated_at": "2024-08-30T16:42:57Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nWhile looking for templates using the `.rb` extension instead of `.rb.tt`, my search ended up finding this `test_helper.rb` file. (The other two are fixed in #52239)\r\n\r\n```\r\n$ fd | rg \"/templates/.*\\.rb$\"\r\n./actioncable/lib/rails/generators/channel/templates/application_cable/channel.rb\r\n./actioncable/lib/rails/generators/channel/templates/application_cable/connection.rb\r\n./railties/lib/rails/generators/test_unit/plugin/templates/test_helper.rb\r\n```\r\n\r\n### Detail\r\n\r\nInstead of correcting the extension, I opted to remove it because the `test_unit:plugin` generator appears to be unused.\r\n\r\n### Additional information\r\n\r\nAm I right in thinking this is unused? The only tests that fail are related to generator namespace fallbacks, but that seems like a side effect of the specific class no longer existing instead of any external behavior changing. I can try updating the tests if we agree it should be removed.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52238/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6014046,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52238.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52238.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2497685766,
        "number": 52751,
        "title": "Allow Rack unprocessable_entity deprecation warnings",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-30T16:17:00Z",
        "updated_at": "2024-08-30T16:38:19Z",
        "closed_at": "2024-08-30T16:38:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "We still need to figure out what we'll do with this, in the meantime let's not fail builds because of it.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52751/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19192189,
        "closed_by_id": 47848,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52751.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52751.patch",
        "pull_request_merged_at": "2024-08-30T16:38:18Z"
    },
    {
        "id": 307797934,
        "number": 32324,
        "title": "Unable to create an attribute for an array",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 19,
        "created_at": "2018-03-22T20:14:07Z",
        "updated_at": "2024-08-30T16:25:13Z",
        "closed_at": "2018-03-24T23:56:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nEasiest way is to enter the following in Rails console:\r\n\r\n```ruby\r\nActiveRecord::Type.lookup(:integer, array: true)\r\n```\r\n\r\nFrom a model, you can do this:\r\n\r\n```ruby\r\n  attribute :my_int_array, :integer, array: true\r\n```\r\n\r\n### Expected behavior\r\n\r\nAccording to [the documentation of `attribute` method](http://api.rubyonrails.org/classes/ActiveRecord/Attributes/ClassMethods.html#method-i-attribute), it should be possible to specify an attribute that is an array.\r\n\r\n```ruby\r\n  attribute :my_int_array, :integer, array: true\r\n```\r\n\r\n### Actual behavior\r\n\r\nSeeing this error:\r\n\r\n```\r\nArgumentError: unknown keyword: array\r\nfrom /Users/newuser/.rvm/gems/ruby-2.3.3@citiesense/gems/activemodel-5.1.5/lib/active_model/type/value.rb:6:in `initialize'\r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n5.1.5\r\n\r\n**Ruby version**:\r\n\r\n2.3.3",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/32324/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 151600,
        "closed_by_id": 987638,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2497672552,
        "number": 52750,
        "title": "Fix URI deprecation on ruby 3.4.0-dev",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-30T16:11:02Z",
        "updated_at": "2024-08-30T16:14:55Z",
        "closed_at": "2024-08-30T16:14:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "```\r\nwarning: URI::RFC3986_PARSER.unescape is obsoleted. Use URI::RFC2396_PARSER.unescape explicitly.\r\n```\r\n\r\nRef: https://buildkite.com/rails/rails-nightly/builds/963#01919ff1-1c22-46d7-aa82-eec9c93d2a5b",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52750/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 19192189,
        "closed_by_id": 19192189,
        "label_ids": [
            107189,
            107195,
            3666649
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52750.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52750.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2106914874,
        "number": 50916,
        "title": "Unexpected controller prefix path de-duplication in view partial lookup paths",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-30T04:10:56Z",
        "updated_at": "2024-08-30T12:51:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nCreate nested controller and nested object views where there is overlap between the controller and object namespaces. For example:\r\n\r\n- `Courses::Quiz::Question` and `Courses::Quiz::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Quiz::Extra::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Courses::Quiz::QuestionsController`\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\nrequire \"active_model/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/unrelated\" => \"learning/questions#new\"\r\n    get \"/duplication\" => \"courses/quiz/questions#new\"\r\n    get \"/collision\" => \"learning/quiz/extra/questions#new\"\r\n    get \"/repetition\" => \"learning/courses/quiz/questions#new\"\r\n  end\r\nend\r\n\r\nmodule Courses\r\n  module Quiz\r\n    class Question\r\n      include ActiveModel::Model\r\n\r\n      attr_accessor :name\r\n    end\r\n\r\n    class QuestionsController < ActionController::Base\r\n      def new\r\n        render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nmodule Learning\r\n  class QuestionsController < ActionController::Base\r\n    def new\r\n      render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n    end\r\n  end\r\n\r\n  module Quiz\r\n    module Extra\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\n\r\n  module Courses\r\n    module Quiz\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n  end\r\n\r\n  # ✅ PASSES\r\n  def test_unrelated_partial\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/unrelated\"\r\n    assert_equal \"Nested partial\", last_response.body\r\n  end\r\n\r\n  # ✅ PASSES\r\n  def test_duplication\r\n    view_file \"courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n\r\n    get \"/duplication\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  # ❌ FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path breaks after the first match, skips 'extra'\r\n  def test_collision\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Harmful de-duplication <%= question.name %>\"\r\n    view_file \"learning/courses/extra/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/collision\"\r\n    assert_equal \"Collision partial\", last_response.body\r\n  end\r\n\r\n  # ❌ FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path fails to find overlap because offsets do not align\r\n  def test_repetition\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n    view_file \"learning/courses/quiz/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/repetition\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n  def app\r\n    Rails.application\r\n  end\r\n\r\n  def view_file(name, content)\r\n    path = Pathname.new(@views).join(name)\r\n    path.dirname.tap(&:mkpath)\r\n    path.write(content)\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\n- Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `quiz/extra` suffix on the controller does not match the `quiz` prefix on the model so no de-duplication is performed. Partial should be `learning/courses/extra/courses/quiz/questions/_question.html.erb`\r\n- Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   `courses/quiz` suffix on controller matches `courses/quiz` prefix on model so repetition is removed. Partial should be `learning/courses/quiz/questions/_question.html.erb`\r\n\r\n### Actual behavior\r\n\r\n- ✅ Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- ❌ Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `Quiz` is detected as overlap and `Extra` is dropped from the partial path, this is confusing and inconsistent\r\n- ❌ Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   no module duplication is detected, so full module path to controller is prefixed on the object path – deep repetition\r\n\r\n### System configuration\r\n**Rails version**: 7.1.0\r\n\r\n**Ruby version**: 3.2.3\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50916/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 325974,
        "label_ids": [
            126910270
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2276643758,
        "number": 51717,
        "title": "Attribute aliases don't resolve dynamically like normal attribute methods",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-05-02T23:06:08Z",
        "updated_at": "2024-08-30T05:57:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "With #48533 circa Rails 7.1, attribute methods and aliases are defined \"lazily\" on AR subclasses, meaning they get defined on the first call to `ActiveRecord::Base#initialize` via `#init_internals`: https://github.com/rails/rails/blob/1818beb3a3ea5fdb498095d4885f8a7e512f24ca/activerecord/lib/active_record/core.rb#L755-L756\r\n\r\nSince defining attribute methods (and thus aliases atop of them) may involve querying the database, it's preferable to evaluate these lazily, rather than (say) tying them to class definition time as the Rails app starts up.\r\n\r\nHowever, when loading a model from a cache in a process that has yet to connect to the database, we can manage to create a new instance of an `ActiveRecord::Base` subclass _without_ calling the initializer, so the attribute methods & aliases never get defined by `#init_internals`. (Yes, we probably don't want to be storing models in the cache due to other issues like #49826. But the lazy evaluation does still cause a regression in behavior versus Rails 7.0, so I thought it was worth bringing up.)\r\n\r\nThis works out fine for regular attribute methods, since the `#attribute_missing` hook will dynamically look up values in the `@attributes` at run time: https://github.com/rails/rails/blob/c3c164ca12410983e07537531844c4255450ba9b/activemodel/lib/active_model/attribute_methods.rb#L484-L491 https://github.com/rails/rails/blob/c3c164ca12410983e07537531844c4255450ba9b/activemodel/lib/active_model/attribute_methods.rb#L498-L500\r\n\r\nHowever, attribute aliases perform no such `method_missing` magic. This can lead us to fail with a `NoMethodError`—or perhaps more insidiously, silently delegate to a supermethod that _would_ have been clobbered by the alias.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", \"~> 7.1.0\"\r\n  gem \"sqlite3\", \"~> 1.4\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/cache\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\nrequire \"tempfile\"\r\n\r\ndatabase = Tempfile.create # shared database file so separate processes can reference it\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: database.path)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :models, force: true do |t|\r\n    t.string :old_name\r\n    t.string :value_from_attribute\r\n  end\r\nend\r\n\r\nclass Model < ActiveRecord::Base\r\n  alias_attribute :new_name, :old_name\r\n\r\n  def value_from_attribute_or_supermethod\r\n    \"value from supermethod\"\r\n  end\r\nend\r\n\r\nclass ModelWithSupermethod < Model\r\n  alias_attribute :value_from_attribute_or_supermethod, :value_from_attribute\r\nend\r\n\r\n$cache = ActiveSupport::Cache::FileStore.new(Dir.mktmpdir(\"file-store-\")) # file store so separate processes can reference it\r\n\r\nclass AliasedAttributesTest < Minitest::Test\r\n  def setup\r\n    $cache.clear\r\n  end\r\n\r\n  def test_read_model_from_cache_without_connecting_to_database\r\n    pid = fork do\r\n      refute Model.instance_methods.include?(:old_name), \"expected model not to define attribute methods until initialization\"\r\n      refute Model.instance_methods.include?(:new_name), \"expected model not to define attribute aliases until initialization\"\r\n      model = Model.create!(old_name: \"test\")\r\n      assert Model.instance_methods.include?(:old_name), \"expected model to have lazily defined attribute methods on initialization\"\r\n      assert Model.instance_methods.include?(:new_name), \"expected model to have lazily defined attribute aliases on initialization\"\r\n      assert_equal \"test\", model.old_name\r\n      assert_equal \"test\", model.new_name\r\n      $cache.write('model', model)\r\n    end\r\n    Process.wait(pid)\r\n    assert $cache.exist?('model'), \"expected cache to be populated by a separate process\"\r\n    refute Model.instance_methods.include?(:old_name), \"expected separate process not to affect method definitions in this process\"\r\n    refute Model.instance_methods.include?(:new_name), \"expected separate process not to affect method definitions in this process\"\r\n    model = $cache.read('model')\r\n    refute Model.instance_methods.include?(:old_name), \"expected model not to have defined attribute methods yet, since we haven't initialized\"\r\n    refute Model.instance_methods.include?(:new_name), \"expected model not to have defined attribute aliases yet, since we haven't initialized\"\r\n    assert_instance_of Model, model\r\n    assert_equal \"test\", model.old_name, \"expected attribute method to still work dynamically due to attribute_missing hook\"\r\n    begin\r\n      assert_equal \"test\", model.new_name\r\n    rescue NoMethodError => e\r\n      flunk \"attribute aliases do not perform any method_missing magic\\n#{e.class}: #{e.message}\"\r\n    end\r\n  end\r\n\r\n  def test_alias_that_should_have_clobbered_supermethod\r\n    pid = fork do\r\n      model = ModelWithSupermethod.new(value_from_attribute: \"value from attribute\")\r\n      assert_equal \"value from attribute\", model.value_from_attribute_or_supermethod\r\n      $cache.write('model', model)\r\n    end\r\n    Process.wait(pid)\r\n    assert $cache.exist?('model'), \"expected cache to be populated by a separate process\"\r\n    model = $cache.read('model')\r\n    assert_instance_of ModelWithSupermethod, model\r\n    assert_equal \"value from attribute\", model.value_from_attribute_or_supermethod, \"supermethod did not get shadowed by attribute alias\"\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nTest cases above should pass.\r\n\r\n### Actual behavior\r\n\r\n```\r\nF\r\n\r\nFailure:\r\nAliasedAttributesTest#test_read_model_from_cache_without_connecting_to_database [repro.rb:71]:\r\nattribute aliases do not perform any method_missing magic\r\nNoMethodError: undefined method `new_name' for #<Model id: 1, old_name: \"test\", value_from_attribute: nil>\r\n\r\n\r\nbin/rails test repro.rb:48\r\n\r\nF\r\n\r\nFailure:\r\nAliasedAttributesTest#test_alias_that_should_have_clobbered_supermethod [repro.rb:85]:\r\nsupermethod did not get shadowed by attribute alias.\r\nExpected: \"value from attribute\"\r\n  Actual: \"value from supermethod\"\r\n\r\n\r\nbin/rails test repro.rb:75\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1\r\n\r\n**Ruby version**: 3.2.2",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51717/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 600924,
        "label_ids": [],
        "reactions_total_count": 2,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 2,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1994024700,
        "number": 50063,
        "title": "Add documentation for delegated methods on Metal",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T04:36:15Z",
        "updated_at": "2024-08-30T05:50:50Z",
        "closed_at": "2024-07-11T01:58:44Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Some of these were specifically mentioned earlier in the Metal docs (response_body=, content_type=, status=) but were not linked because the methods were not documented (due to being part of a delegation).\r\n\r\nThis commit separates all of the delegated methods so that they can be documented, adds links for the mentioned methods, and additionally documents two methods on Response that are mentioned in the new Metal documentation, but were not previously documented.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50063/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6014046,
        "closed_by_id": 6014046,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50063.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50063.patch",
        "pull_request_merged_at": "2024-07-11T01:58:44Z"
    },
    {
        "id": 2290773499,
        "number": 51784,
        "title": "rspec tests won't after upgrading from rails 7.1.2 to 7.1.3.2: can't modify frozen Array when requiring environment file",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2024-05-11T08:09:35Z",
        "updated_at": "2024-08-30T05:44:25Z",
        "closed_at": "2024-08-30T05:44:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nI'm trying to update rails from version`7.1.3.2` to `7.1.2` along with it's dependencies.\r\nThe Gemfile is as follows:\r\n```\r\nsource \"https://rubygems.org\"\r\ngit_source(:github) { |repo| \"https://github.com/#{ repo }.git\" }\r\n\r\nruby \"3.2.2\"\r\n\r\n# Bundle edge Rails instead: gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\ngem \"rails\", \"~> 7.1.2\"\r\n\r\n# The original asset pipeline for Rails [https://github.com/rails/sprockets-rails]\r\ngem \"sprockets-rails\"\r\n\r\n# Use sqlite3 as the database for Active Record\r\ngem \"sqlite3\", \"~> 1.4\"\r\n\r\n# Use the Puma web server [https://github.com/puma/puma]\r\ngem \"puma\", \"~> 5.0\"\r\n\r\n# Use JavaScript with ESM import maps [https://github.com/rails/importmap-rails]\r\ngem \"importmap-rails\"\r\n\r\n# Build JSON APIs with ease [https://github.com/rails/jbuilder]\r\ngem \"jbuilder\"\r\n\r\n# Use Redis adapter to run Action Cable in production\r\n# gem \"redis\", \"~> 4.0\"\r\n\r\n# Use Kredis to get higher-level data types in Redis [https://github.com/rails/kredis]\r\n# gem \"kredis\"\r\n\r\n# Use Active Model has_secure_password [https://guides.rubyonrails.org/active_model_basics.html#securepassword]\r\ngem \"bcrypt\", \"~> 3.1.7\"\r\n\r\n# Windows does not include zoneinfo files, so bundle the tzinfo-data gem\r\ngem \"tzinfo-data\", platforms: %i[mingw mswin x64_mingw jruby]\r\n\r\n# Reduces boot times through caching; required in config/boot.rb\r\ngem \"bootsnap\", require: false\r\n\r\n# Use Sass to process CSS\r\n# gem \"sassc-rails\"\r\n\r\n# Use Active Storage variants [https://guides.rubyonrails.org/active_storage_overview.html#transforming-images]\r\n# gem \"image_processing\", \"~> 1.2\"\r\ngem \"pg\"\r\n\r\n# Object geocoding (by street or IP address), reverse geocoding (coordinates to street address), distance queries for\r\n# ActiveRecord and Mongoid, result caching, and more. Designed for Rails but works with Sinatra and other Rack\r\n# frameworks too.\r\ngem \"geocoder\", \"~> 1.8\", \">= 1.8.1\"\r\n\r\n# A ruby wrapper for ImageMagick or GraphicsMagick command line.\r\ngem \"mini_magick\"\r\n\r\n# RQRCode is a library for creating and rendering QR codes into various formats. It has a simple interface with all the\r\n# standard QR code options. It was adapted from the Javascript library by Kazuhiko Arase.\r\ngem \"rqrcode\", \"~> 2.0\"\r\n\r\ngroup :development, :test do\r\n  # See https://guides.rubyonrails.org/debugging_rails_applications.html#debugging-with-the-debug-gem\r\n  gem \"debug\", platforms: %i[mri mingw x64_mingw]\r\n  gem \"pry\"\r\n  gem \"pry-byebug\"\r\n  gem \"rspec-rails\", \"~> 6.0.0\"\r\n  gem \"rubocop\", require: false\r\nend\r\n\r\ngroup :development do\r\n  # Use console on exceptions pages [https://github.com/rails/web-console]\r\n  gem \"web-console\"\r\n\r\n  gem \"better_errors\"\r\n  gem \"binding_of_caller\"\r\n\r\n  # Add speed badges [https://github.com/MiniProfiler/rack-mini-profiler]\r\n  # gem \"rack-mini-profiler\"\r\n\r\n  # Speed up commands on slow machines / big apps [https://github.com/rails/spring]\r\n  # gem \"spring\"\r\n  # RBS is the language for type signatures for Ruby and standard library definitions.\r\n  gem \"rbs\", \"~> 3.0\", \">= 3.0.4\"\r\nend\r\n\r\ngroup :test do\r\n  # Use system testing [https://guides.rubyonrails.org/testing.html#system-testing]\r\n  gem \"capybara\"\r\n  gem \"selenium-webdriver\", \"~> 4.11\"\r\nend\r\n```\r\n\r\nTo isolate the problem, I tried to do the following:\r\n1. update only `rspec-rails` and check if all tests run correctly by running `bundle update rspec-rails`: all tests run correctly without errors\r\n- `bundle update rspec-rails` output:\r\n```\r\nUsing rake 13.2.1 (was 13.0.6)\r\nUsing bigdecimal 3.1.8 (was 3.1.4)\r\nUsing concurrent-ruby 1.2.3 (was 1.2.0)\r\nUsing connection_pool 2.4.1\r\nUsing racc 1.7.3 (was 1.7.1)\r\nUsing minitest 5.22.3 (was 5.17.0)\r\nUsing mutex_m 0.2.0\r\nUsing nio4r 2.5.8\r\nUsing builder 3.2.4\r\nFetching rack 3.0.11 (was 2.2.8)\r\nUsing drb 2.2.1 (was 2.2.0)\r\nUsing crass 1.0.6\r\nUsing marcel 1.0.2\r\nUsing date 3.3.4\r\nUsing websocket-extensions 0.1.5\r\nUsing erubi 1.12.0\r\nUsing ast 2.4.2\r\nUsing coderay 1.1.3\r\nUsing mini_mime 1.1.5\r\nUsing bindex 0.8.1\r\nUsing base64 0.2.0\r\nUsing bundler 2.4.10\r\nUsing bcrypt 3.1.18\r\nUsing byebug 11.1.3\r\nUsing debug_inspector 1.1.0\r\nUsing public_suffix 5.0.3\r\nUsing msgpack 1.6.0\r\nUsing timeout 0.4.1\r\nUsing zeitwerk 2.6.13 (was 2.6.6)\r\nUsing matrix 0.4.2\r\nUsing regexp_parser 2.8.1\r\nUsing chunky_png 1.4.0\r\nUsing debug 1.7.1\r\nUsing json 2.6.3\r\nUsing diff-lcs 1.5.1 (was 1.5.0)\r\nUsing method_source 1.0.0\r\nUsing io-console 0.7.2 (was 0.6.0)\r\nUsing webrick 1.8.1\r\nUsing thor 1.3.1 (was 1.3.0)\r\nUsing geocoder 1.8.1\r\nUsing stringio 3.1.0\r\nUsing rexml 3.2.6\r\nUsing parallel 1.22.1\r\nUsing pg 1.4.5\r\nUsing rainbow 3.1.1\r\nUsing rbs 3.0.4\r\nUsing mini_magick 4.12.0\r\nUsing websocket 1.2.10\r\nUsing i18n 1.14.5 (was 1.12.0)\r\nUsing tzinfo 2.0.6\r\nUsing rqrcode_core 1.2.0\r\nUsing nokogiri 1.16.4 (arm64-darwin) (was 1.15.3)\r\nUsing websocket-driver 0.7.6\r\nUsing parser 3.2.0.0\r\nUsing binding_of_caller 1.0.0\r\nUsing addressable 2.8.5\r\nUsing bootsnap 1.16.0\r\nUsing net-protocol 0.2.2\r\nUsing pry 0.14.2\r\nUsing unicode-display_width 2.4.2\r\nUsing psych 5.1.2 (was 5.1.1.1)\r\nUsing activesupport 7.1.2\r\nUsing sqlite3 1.6.0 (arm64-darwin)\r\nUsing rspec-support 3.13.1 (was 3.12.0)\r\nFetching reline 0.5.6 (was 0.4.1)\r\nUsing loofah 2.22.0\r\nUsing rails-dom-testing 2.2.0\r\nUsing activemodel 7.1.2\r\nUsing ruby-progressbar 1.11.0\r\nUsing net-pop 0.1.2\r\nUsing puma 5.6.5\r\nUsing net-imap 0.4.7\r\nUsing rubyzip 2.3.2\r\nUsing pry-byebug 3.10.1\r\nUsing globalid 1.2.1\r\nUsing xpath 3.2.0\r\nUsing rdoc 6.6.3.1 (was 6.6.0)\r\nUsing net-smtp 0.4.0\r\nUsing rspec-expectations 3.13.0 (was 3.12.2)\r\nUsing rqrcode 2.2.0\r\nUsing activerecord 7.1.2\r\nUsing rspec-core 3.13.0 (was 3.12.1)\r\nUsing rspec-mocks 3.13.1 (was 3.12.3)\r\nUsing mail 2.8.1\r\nUsing rails-html-sanitizer 1.6.0\r\nUsing selenium-webdriver 4.12.0\r\nUsing actionview 7.1.2\r\nUsing activejob 7.1.2\r\nUsing rubocop-ast 1.24.1\r\nUsing jbuilder 2.11.5\r\nUsing rubocop 1.44.1\r\nInstalling reline 0.5.6 (was 0.4.1)\r\nUsing irb 1.13.1 (was 1.9.1)\r\nInstalling rack 3.0.11 (was 2.2.8)\r\nUsing rack-session 2.0.0 (was 1.0.1)\r\nUsing rack-test 2.1.0\r\nUsing better_errors 2.9.1\r\nUsing rackup 2.1.0 (was 1.0.0)\r\nUsing sprockets 4.2.0\r\nUsing actionpack 7.1.2\r\nUsing capybara 3.39.2\r\nUsing actioncable 7.1.2\r\nUsing activestorage 7.1.2\r\nUsing actionmailer 7.1.2\r\nUsing railties 7.1.2\r\nUsing sprockets-rails 3.4.2\r\nUsing actionmailbox 7.1.2\r\nUsing importmap-rails 1.1.5\r\nUsing rspec-rails 6.0.4 (was 6.0.1)\r\nUsing web-console 4.2.0\r\nUsing actiontext 7.1.2\r\nUsing rails 7.1.2\r\nBundle updated!\r\n```\r\n\r\n2. update rails `bundle update rails`\r\n### Expected behavior\r\n- my tests should run normally\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n- running `rspec` wiith or without arguments now return this error:\r\n```\r\nAn error occurred while loading ./spec/requests/home_spec.rb.\r\nFailure/Error: require_relative \"../config/environment\"\r\n\r\nFrozenError:\r\n  can't modify frozen Array: [\"/Users/<username>/source/ruby/my_project/app/channels\", \"/Users/<username>/source/ruby/my_project/app/controllers\", \"/Users/<username>/source/ruby/my_project/app/controllers/concerns\", \"/Users/<username>/source/ruby/my_project/app/helpers\", \"/Users/<username>/source/ruby/my_project/app/jobs\", \"/Users/<username>/source/ruby/my_project/app/mailers\", \"/Users/<username>/source/ruby/my_project/app/models\", \"/Users/<username>/source/ruby/my_project/app/models/concerns\", \"/Users/<username>/source/ruby/my_project/app/modules\", \"/Users/<username>/.rvm/gems/ruby-3.2.2/gems/actionmailbox-7.1.3.2/app/controllers\", \"/Users/<username>/.rvm/gems/ruby-3.2.2/gems/actionmailbox-7.1.3.2/app/jobs\", \"/Users/<username>/.rvm/gems/ruby-3.2.2/gems/actionmailbox-7.1.3.2/app/models\", \"/Users/<username>/.rvm/gems/ruby-3.2.2/gems/activestorage-7.1.3.2/app/controllers\", \"/Users/<username>/.rvm/gems/ruby-3.2.2/gems/activestorage-7.1.3.2/app/controllers/concerns\", \"/Users/<username>/.rvm/gems/ruby-3.2.2/gems/activestorage-7.1.3.2/app/jobs\", \"/Users/<username>/.rvm/gems/ruby-3.2.2/gems/activestorage-7.1.3.2/app/models\"]\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/engine.rb:580:in `unshift'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/engine.rb:580:in `block in <class:Engine>'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:32:in `instance_exec'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:32:in `run'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:61:in `block in run_initializers'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:50:in `each'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:50:in `tsort_each_child'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:50:in `each'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:50:in `tsort_each_child'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:60:in `run_initializers'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/application.rb:426:in `initialize!'\r\n# ./config/environment.rb:5:in `<main>'\r\n# ./spec/rails_helper.rb:4:in `require_relative'\r\n# ./spec/rails_helper.rb:4:in `<main>'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'\r\n# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/zeitwerk-2.6.13/lib/zeitwerk/kernel.rb:34:in `require'\r\n# ./spec/requests/home_spec.rb:1:in `<main>'\r\nNo examples found.\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3.2 upgraded to 7.1.2\r\n**OS:** MacOS 14.4.1 on Apple Silicon (M1 chip)\r\n-**Bundler version:** 2.4.10\r\n\r\n**Ruby version**: 3.2.2\r\n\r\nAnyone has an idea on what went wrong? As noted before, I tried updating only `rspec-rails` and all tests ran without issues, its the rails update that caused this error. I purposely only updated only rails to isolate the issue here.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51784/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 30500043,
        "closed_by_id": 277819,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2042774494,
        "number": 50361,
        "title": "Fix inconsistent results of params.deep_transform_keys",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-12-15T02:14:08Z",
        "updated_at": "2024-08-29T21:11:48Z",
        "closed_at": "2024-02-21T17:55:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFix: #50326\r\n\r\n### Detail\r\n\r\n`params.deep_transform_keys` should transform the keys of the params, including nested hashes, arrays, and ActionController::Parameters objects.\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50361/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5642707,
        "closed_by_id": 47848,
        "label_ids": [
            107189,
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/50361.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/50361.patch",
        "pull_request_merged_at": "2024-02-21T17:55:31Z"
    },
    {
        "id": 1242128971,
        "number": 45136,
        "title": "Enforce limit on table names length",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2022-05-19T18:03:33Z",
        "updated_at": "2024-08-29T20:24:32Z",
        "closed_at": "2022-06-13T18:27:41Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "Fixes #45130\r\n\r\nFor long table names, to generate primary key index name, postgres truncates table name even further and adds `_pkey` suffix and this all should fit into 63 bytes.\r\n\r\nActive Record already has constants for different name limits https://github.com/rails/rails/blob/main/activerecord/lib/active_record/connection_adapters/abstract/database_limits.rb and even checks index names in several places, like https://github.com/rails/rails/blob/9e0320790142185c1724c3d6655debea43fc23e2/activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb#L341 and several more places (but not everywhere).\r\n\r\nI suggest to implement similar checks for table/(foreign key)/etc names, or at least for table names, as a followup in a separate PR, taking into account backwards compatibility with older migration files.\r\n\r\ncc @nvasilevski ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/45136/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5657035,
        "closed_by_id": 44640,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/45136.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/45136.patch",
        "pull_request_merged_at": "2022-06-13T18:27:40Z"
    },
    {
        "id": 1192229321,
        "number": 44841,
        "title": "Add support for ActiveRecord::Point type casts using hash values",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-04-04T19:38:09Z",
        "updated_at": "2024-08-29T18:25:31Z",
        "closed_at": "2024-08-21T18:36:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nThis allows ActiveRecord::Point to be cast or serialized from a hash\r\nwith :x and :y keys of numeric values, mirroring the functionality\r\nof existing casts for string and array values. Both string and symbol\r\nkeys are supported.\r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/44841/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 71955,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/44841.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/44841.patch",
        "pull_request_merged_at": "2024-08-21T18:36:47Z"
    },
    {
        "id": 2282343305,
        "number": 51750,
        "title": "ActiveSupport::KeyGenerator hash digest class differs during and after application initialization",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-05-07T05:54:33Z",
        "updated_at": "2024-08-29T12:32:05Z",
        "closed_at": "2024-08-29T12:32:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Since rails 7.0, [default hash digest class](https://guides.rubyonrails.org/configuring.html#config-active-support-key-generator-hash-digest-class) for `ActiveSupport::KeyGenerator` is SHA256. \r\nThis SHA256 hash digest class is set through configuration in an `after_initialize` [as found in ActiveSupport railtie](https://github.com/rails/rails/blob/main/activesupport/lib/active_support/railtie.rb).\r\n\r\nThe problem is that the source code for `ActiveSupport::KeyGenerator` defines a default SHA1 hash digest class if the configuration hash digest class have not been set up. \r\nIt means that using this `KeyGenerator` during application initialization (with SHA1) differs from using it after initialization (with SHA256).\r\n\r\n### Steps to reproduce\r\nIn any initializer file, print the hash digest class for `ActiveSupport::KeyGenerator`, let's say in `app/config/initializers/digest_class.rb`\r\n\r\n```ruby\r\np ActiveSupport::KeyGenerator.hash_digest_class\r\n```\r\n\r\nThen open a rails console in your local environment with `config.eager_load = true`\r\n=> The initializer will print **SHA1**. \r\nBut if you print the same code in the console, it will print **SHA256**.\r\n\r\n### Expected behavior\r\nI would expect the `KeyGenerator` to have the same behaviour during and after initialization. \r\nBecause for instance, if we generate a key in an initializer using `ActiveSupport::KeyGenerator#generate_key`, it will be a key generated with SHA1 hash digest class whereas **we expect it to be generated with a SHA256** hash digest class.\r\n\r\nIs there a reason why the hash digest class is set in an `after_initialize` ?\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.7\r\n\r\n**Ruby version**:\r\n3.0.6\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51750/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 42778059,
        "closed_by_id": 28418009,
        "label_ids": [
            12449438
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 1105177404,
        "number": 44183,
        "title": "Rails reload! (both in console and using the reloader.reload!) hangs with multi-threaded applications",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2022-01-16T20:19:00Z",
        "updated_at": "2024-08-29T10:11:04Z",
        "closed_at": "2024-08-29T10:11:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```bash\r\nrails new testme\r\ncd testme\r\nbundle exec rails generate scaffold User\r\nbundle exec rake db:create\r\nbundle exec rake db:migrate\r\nbundle exec rails console\r\n# in the console:\r\nrequire 'benchmark'\r\nThread.new { User.create!; sleep(100) }\r\n# wait for 1 second and run reload - it will hang for around 10 seconds\r\nputs Benchmark.measure { reload! }\r\n# 0.019528   0.000312   0.019840 ( 10.028938)\r\n```\r\n\r\n### Expected behavior\r\nSince the thread is sleeping after user creation and does nothing, I would expect not to hang for such a long time.\r\n\r\n### Actual behavior\r\n\r\nIt hangs for 10 seconds. Same happens when reloading from within a process that includes Rails. It hangs for 10 seconds despite the fact that the thread is sleeping more. Even if thread is sleeping shorted period of time (lets say 5s), the reload takes 10.\r\n\r\nThis is in particular problematic for processes running with Rails in a dev mode, where threads are long living (worker polls for example) and blocked on a `Queue#pop`.\r\n\r\nI confirmed this problem affects `sqlite` as well as `pg`.\r\n\r\n### System configuration\r\n\r\n**Rails & Ruby version**:\r\n```\r\nAbout your application's environment\r\nRails version             7.0.1\r\nRuby version              ruby 3.0.3p157 (2021-11-24 revision 3fb7d2cadc) [x86_64-linux]\r\nRubyGems version          3.2.32\r\nRack version              2.2.3\r\nMiddleware                ActionDispatch::HostAuthorization, Rack::Sendfile, ActionDispatch::Static, ActionDispatch::Executor, ActionDispatch::ServerTiming, ActiveSupport::Cache::Strategy::LocalCache::Middleware, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, ActionDispatch::RemoteIp, Sprockets::Rails::QuietAssets, Rails::Rack::Logger, ActionDispatch::ShowExceptions, WebConsole::Middleware, ActionDispatch::DebugExceptions, ActionDispatch::ActionableExceptions, ActionDispatch::Reloader, ActionDispatch::Callbacks, ActiveRecord::Migration::CheckPending, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ContentSecurityPolicy::Middleware, ActionDispatch::PermissionsPolicy::Middleware, Rack::Head, Rack::ConditionalGet, Rack::ETag, Rack::TempfileReaper\r\nApplication root          /home/mencio/Software/testme\r\nEnvironment               development\r\nDatabase adapter          sqlite3\r\nDatabase schema version   20220116201051\r\n```",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/44183/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 392754,
        "closed_by_id": 392754,
        "label_ids": [
            107194,
            126910270
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2478098360,
        "number": 52669,
        "title": "Ensure ActiveRecord::Encryption.config is always ready before access",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-21T13:49:15Z",
        "updated_at": "2024-08-29T08:31:25Z",
        "closed_at": "2024-08-27T17:09:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created in order to fix https://github.com/rspec/rspec-rails/issues/2779.\r\n\r\n### Detail\r\n\r\nPreviously, `ActiveRecord::Encryption` configuration was deferred until `ActiveRecord::Base` was loaded. Therefore, accessing `ActiveRecord::Encryption.config` properties before `ActiveRecord::Base` was loaded would give incorrect results.\r\n\r\n`ActiveRecord::Encryption` now has its own loading hook so that its configuration is set as soon as needed.\r\n\r\nWhen `ActiveRecord::Base` is loaded, even lazily, it in turn triggers the loading of `ActiveRecord::Encryption`, thus preserving the original behavior of having its config ready before any use of `ActiveRecord::Base`.\r\n\r\nThis fix complements one of my previous fixes in https://github.com/rails/rails/pull/50606.\r\n\r\nSince both Rails 7.1.4 and 7.2.* versions are affected, I'd recommend backporting this fix to `7-1-stable` and `7-2-stable`. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52669/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 58582,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            107195,
            150377
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 1,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52669.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52669.patch",
        "pull_request_merged_at": "2024-08-27T17:09:33Z"
    },
    {
        "id": 2224752118,
        "number": 51488,
        "title": "Update Filter Attributes to perform exact matches instead of Fuzzy matches",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-04-04T07:52:45Z",
        "updated_at": "2024-08-29T05:03:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because of a bug mentioned in #51254 wherein encrypting one attribute in a model filters out other similar matching attributes in inspect.\r\n\r\n### Detail\r\n\r\nThis PR makes the following changes:\r\n- Updates `filter_attributes` to exact regex matches instead of fuzzy matching\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51488/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 27268721,
        "label_ids": [
            107191,
            107194,
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51488.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51488.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2487837276,
        "number": 52715,
        "title": "Rails 7.2 ignores \"self.table_name=\" in a subclass, at least when using the Audited gem",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "id": 11472308,
            "number": 90,
            "title": "7.2.2",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 5,
            "state": "open",
            "created_at": "2024-08-21T21:24:04Z",
            "updated_at": "2024-09-20T18:52:26Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 12,
        "created_at": "2024-08-26T21:42:29Z",
        "updated_at": "2024-08-28T22:34:33Z",
        "closed_at": "2024-08-27T15:51:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nA minimal Rails application is attached:\r\n\r\n[table_name_bug.zip](https://github.com/user-attachments/files/16754026/table_name_bug.zip)\r\n\r\n* Once unpacked run `bundle install` as usual\r\n* Run `bundle exec rake db:create db:migrate`\r\n\r\nYou can now switch between Rails 7.1 vs 7.2 via the Gemfile thus:\r\n\r\n```ruby\r\ngem \"rails\", \"= 7.2.1\"\r\n# ...or...\r\ngem \"rails\", \"= 7.1.4\"\r\n```\r\n\r\n* Run `bundle install` to ensure the application is using the configured Rails version\r\n* Run `bundle exec rake test`\r\n\r\n### Expected behavior\r\n\r\nRails 7.1.4's result for `bundle exec rake test` is a test pass. The test makes no assertions - it just shouldn't raise an exception.\r\n\r\n```\r\n$ bundle exec rake test  \r\nRunning 1 tests in a single process (parallelization threshold is 50)\r\nRun options: --seed 22184\r\n\r\n# Running:\r\n\r\n.\r\n\r\nFinished in 0.041376s, 24.1686 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nI expect an identical result in Rails 7.2.\r\n\r\n### Actual behavior\r\n\r\nRails 7.2.1's result for `bundle exec rake test` is a test error caused by an unexpected exception.\r\n\r\n```\r\n$ bundle exec rake test  \r\nRunning 1 tests in a single process (parallelization threshold is 50)\r\nRun options: --seed 21383\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nUserTest#test_auditing:\r\nActiveRecord::StatementInvalid: Could not find table 'audits'\r\n    test/models/user_test.rb:5:in `block in <class:UserTest>'\r\n\r\n\r\nbin/rails test test/models/user_test.rb:4\r\n\r\n\r\n\r\nFinished in 0.014166s, 70.5916 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n```\r\n\r\nNote that if I hand-hack the Audited gem via `bundle open audited` so that the `Audited::Audit` class itself declares `self.table_name = 'audit_trails'`, then this test will now pass under Rails 7.2. The issue seems to be that the base class is being consulted for the table name when, instead, the in-use subclass should be.\r\n\r\n**No other gem changes** at all are needed to provoke the issue. The *only* change is switching 7.1.4 vs 7.2.1 in the `Gemfile`. The `bundle install` for each reported, respectively:\r\n\r\n```\r\n$ bundle install\r\nFetching gem metadata from https://rubygems.org/.........\r\nResolving dependencies...\r\nUsing activesupport 7.1.4 (was 7.2.1)\r\nUsing activemodel 7.1.4 (was 7.2.1)\r\nUsing actionview 7.1.4 (was 7.2.1)\r\nUsing activejob 7.1.4 (was 7.2.1)\r\nUsing activerecord 7.1.4 (was 7.2.1)\r\nUsing actionpack 7.1.4 (was 7.2.1)\r\nUsing actioncable 7.1.4 (was 7.2.1)\r\nUsing activestorage 7.1.4 (was 7.2.1)\r\nUsing actionmailer 7.1.4 (was 7.2.1)\r\nUsing railties 7.1.4 (was 7.2.1)\r\nUsing actionmailbox 7.1.4 (was 7.2.1)\r\nUsing actiontext 7.1.4 (was 7.2.1)\r\nUsing rails 7.1.4 (was 7.2.1)\r\nBundle complete! 9 Gemfile dependencies, 76 gems now installed.\r\n```\r\n\r\n```\r\n$ bundle install\r\nFetching gem metadata from https://rubygems.org/.........\r\nResolving dependencies...\r\nUsing activesupport 7.2.1 (was 7.1.4)\r\nUsing activemodel 7.2.1 (was 7.1.4)\r\nUsing actionview 7.2.1 (was 7.1.4)\r\nUsing activejob 7.2.1 (was 7.1.4)\r\nUsing activerecord 7.2.1 (was 7.1.4)\r\nUsing actionpack 7.2.1 (was 7.1.4)\r\nUsing actioncable 7.2.1 (was 7.1.4)\r\nUsing activestorage 7.2.1 (was 7.1.4)\r\nUsing actionmailer 7.2.1 (was 7.1.4)\r\nUsing railties 7.2.1 (was 7.1.4)\r\nUsing actionmailbox 7.2.1 (was 7.1.4)\r\nUsing actiontext 7.2.1 (was 7.1.4)\r\nUsing rails 7.2.1 (was 7.1.4)\r\nBundle complete! 9 Gemfile dependencies, 77 gems now installed.\r\n```\r\n\r\n### System configuration\r\n\r\nThe attached replication code was generated with Ruby 3.3.4 and Rails 7.2.1 via:\r\n\r\n```sh                                      \r\nrails new table_name_bug --skip-git --skip-docker --skip-keeps \\\r\n  -skip-action-mailer --skip-action-mailbox --skip-action-text \\\r\n  --skip-active-job --skip-active-storage --skip-action-cable \\\r\n  --skip-asset-pipeline --skip-javascript --skip-hotwire \\\r\n  --skip-jbuilder --skip-bootsnap --skip-rubocop \\\r\n  --skip-brakeman --skip-ci\r\n```\r\n\r\n(I just noticed the single hyphen typo in `skip-action-mailer `, which _is_ the command as-run; Rails didn't seem to care and it makes no difference to the test outcome or replication case. Our \"real\" application showing this is of course very dramatically larger and more complicated, including most of the components that are skipped above).\r\n\r\n* Add Audited gem to bundle\r\n\r\n```sh\r\ncd table_name_bug\r\nbundle install\r\nbundle exec rails generate audited:install\r\n```\r\n\r\n* Edited migration's table name to \"audit_trails\" instead of \"audits\"\r\n* Added a migration for table \"users\" with just a text column of \"name\"\r\n\r\n```sh\r\nbundle exec rake db:create db:migrate\r\n```\r\n\r\nAdded models for `AuditTable` and `User` - see `app/models` - specifying the custom table name in the `AuditTable` model and indicating that this class should be used for auditing via `config/initializers/audit.rb`.\r\n\r\nThis was all done in Rails 7.2.1 to show it wasn't a question of upgrading from Rails 7.1 or earlier that causes issues. That said, we now must change all cases of `[7.2]` to `[7.1]` in migrations and update `application.rb` to load defaults for 7.1, in order to be able to switch back to Rails 7.1.x at all in the `Gemfile`. After that, tests can be run as described above.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52715/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 188364,
        "closed_by_id": 47848,
        "label_ids": [
            107191,
            126910270
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2491420116,
        "number": 52729,
        "title": "Fix binary decryption on Postgres",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-28T08:25:08Z",
        "updated_at": "2024-08-28T22:00:26Z",
        "closed_at": "2024-08-28T19:20:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "When encrypting attributes we need to do it just before inserting the data into the database, so after any other serialization steps, e.g. for serialized types or normalization. And we need things to happen in reverse order when decrypting.\r\n\r\nWith attribute decoration we end up with types nested in other types. To ensure that the encryption happens in the right place, the EncryptedAttributeType first serializes the value with the type it is wrapping and then encrypts it. And in reverse it decrypts then deserializes with the wrapped type.\r\n\r\nThere's an assumption here, which is that the wrapped type doesn't need to do anything in between the database and the encryption layer - so any database specific casting is skipped.\r\n\r\nThis works fine for String columns as there's nothing for them to do. It also works for binary columns for MySQL and SQLite. But is doesn't for PostgreSQL which needs to receive the data as Binary::Data and has to call `PG::Connection.unescape_bytea` when deserializing the data.\r\n\r\nThe serialization part was fixed in https://github.com/rails/rails/pull/50920, where the encryption output is wrapped in Binary::Data, which let's the PostgreSQL adapter know to convert the value\r\n[here](https://github.com/rails/rails/blob/5a0b2fa5a3be6ffd49fa7f1c3544c1da403c9cb5/activerecord/lib/active_record/connection_adapters/abstract/quoting.rb#L83).\r\n\r\nThat PR however didn't fix deserializing the data when it comes back out of the database (it wasn't round-tripping the data properly in the tests).\r\n\r\nWe need to deserialize binary types before decrypting them - and we'll have to just assume that the wrapped type can do that for us.\r\n\r\nThis won't work for serialized types as they'll also attempt to convert the data with the coder which needs to happen after decryption, so we need to special case them and extract the subtype instead.\r\n\r\nThis isn't ideal but it should work ok for all built in types.\r\n\r\nI'd tried an alternative approach in https://github.com/rails/rails/pull/52650, but it caused some regressions so it was reverted. I added some tests for those regressions in this PR as well.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52729/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1734607,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52729.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52729.patch",
        "pull_request_merged_at": "2024-08-28T19:20:42Z"
    },
    {
        "id": 2147990894,
        "number": 51159,
        "title": "Fix beginless and endless range comparisons",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-02-22T01:23:49Z",
        "updated_at": "2024-08-28T21:30:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because some endless and beginless range comparisons raise `RangeError` due to `ActiveSupport::CompareWithRange`\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the `CompareWithRange#===` and `CompareWithRange#include?` methods to support begin and endless ranges on the left and right hand side of the comparison.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nPOR:\r\n```ruby\r\n> (1..) === (2..)\r\n=> false\r\n> (..1) === (..2)\r\n=> false\r\n```\r\nRails 7.1.3:\r\n```ruby\r\n> (1..) === (2..)\r\nRangeError: cannot get the last element of endless range\r\nfrom …/activesupport-7.1.3/lib/active_support/core_ext/range/compare_range.rb:23:in `last'\r\n> (..1) === (..2)\r\nRangeError: cannot get the first element of beginless range\r\nfrom …/activesupport-7.1.3/lib/active_support/core_ext/range/compare_range.rb:24:in `first'\r\n```\r\nThis PR:\r\n```ruby\r\n> (1..) === (2..)\r\n=> true\r\n> (2..) === (1..)\r\n=> false\r\n> (..1) === (..2)\r\n=> false\r\n> (..2) === (..1)\r\n=> true\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51159/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 8269566,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51159.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51159.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2279330966,
        "number": 51738,
        "title": "Added option to validate which models are allowed to be associated to a polymorphic belongs_to",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 33,
        "created_at": "2024-05-05T05:12:41Z",
        "updated_at": "2024-08-28T21:16:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nWhen using a polymorphic belongs_to, I usually have a list of allowed classes that I expect this association to use. Oftentimes there's even certain views that need to handle each expected option. Unexpected types in the table would cause problems and potentially pose a security risk.\r\n\r\nI've manually added an inclusion validator before, but wished I could just tell the association what the allowed options are.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `belongs_to`'s `polymorphic` option to allow an array of Strings/Symbols of allowed model names. When provided, an inclusion validator is added to the model to ensure the `_type` field is in the list of allowed class names.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51738/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5104186,
        "label_ids": [
            107191,
            150377
        ],
        "reactions_total_count": 5,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 5,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51738.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51738.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 1510371892,
        "number": 46824,
        "title": "Fix Getting Started documentation",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-12-25T17:04:35Z",
        "updated_at": "2024-08-28T21:05:16Z",
        "closed_at": "2024-08-28T21:05:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "- Configure bundle to install dependencies locally, to avoid any access rights issues on some systems (Fedora for example)\r\n- Add commands needed to initialize Turbo and make the Delete Article example works",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/46824/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3717607,
        "closed_by_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/46824.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/46824.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2480946881,
        "number": 52678,
        "title": "Fix ActiveRecord::Encryption::KeyProvider#encryption_key documentation [ci skip]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-22T14:31:41Z",
        "updated_at": "2024-08-28T21:01:38Z",
        "closed_at": "2024-08-28T20:50:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "A one-word RDoc update. Per the [code](https://github.com/rails/rails/blob/9c8390032c85df23d973432b67d025df05c838f7/activerecord/lib/active_record/encryption/key_provider.rb#L21) and the [Rails guides](https://edgeguides.rubyonrails.org/active_record_encryption.html#rotating-keys), the _last_ key, not the first key, is used for encryption when the provider has multiple keys.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52678/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 569991,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52678.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52678.patch",
        "pull_request_merged_at": "2024-08-28T20:50:21Z"
    },
    {
        "id": 2492561497,
        "number": 52734,
        "title": "Implement postmark conversion of OriginalRecipient to X-Original-To",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-28T16:41:09Z",
        "updated_at": "2024-08-28T20:30:50Z",
        "closed_at": "2024-08-28T19:35:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nHi there,\r\n\r\nI noticed that in Postmark when mail was received via BCC we didn't get the info of the original email address in ActionMailbox.\r\n\r\nAfter talking to Postmark support I stubbled upon https://github.com/rails/rails/pull/38738 and https://github.com/rails/rails/pull/39883 which were fixing those same issue for different providers.\r\n\r\n### Detail\r\n\r\nAs the recommended field to use by the postmark support, this PR makes use of the `OriginalRecipient` field present (cf [documentation](https://postmarkapp.com/developer/api/messages-api)).\r\n\r\nDiscussion with Postmark Support talking about that field:\r\n![Screenshot 2024-08-28 at 17 52 39](https://github.com/user-attachments/assets/72ae2716-860f-42d8-bf2f-2a24e117d6f0)\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52734/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1178099,
        "closed_by_id": 47848,
        "label_ids": [
            1174770998
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52734.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52734.patch",
        "pull_request_merged_at": "2024-08-28T19:35:57Z"
    },
    {
        "id": 2490065677,
        "number": 52723,
        "title": "Instrument ActiveSupport::Cache::MemoryStore#increment and #decrement",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-08-27T18:28:30Z",
        "updated_at": "2024-08-28T19:51:54Z",
        "closed_at": "2024-08-28T19:12:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because currently Rails.cache.increment current does not instrument the same way as RedisCacheStore and MemCacheStore does.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes instrumentation of MemoryStore, to align implementation details between Cache Stores.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\nIf needed, I can enable testing this in https://github.com/rails/rails/blob/main/activesupport/test/cache/behaviors/cache_instrumentation_behavior.rb#L3 - That would require from testing side, that increment and decrement methods are instrumented across all cache stores.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52723/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1666120,
        "closed_by_id": 47848,
        "label_ids": [
            107194,
            150377,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52723.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52723.patch",
        "pull_request_merged_at": "2024-08-28T19:12:44Z"
    },
    {
        "id": 2492843905,
        "number": 52737,
        "title": "Add params.permit! which raises on unpermitted params",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-28T19:31:58Z",
        "updated_at": "2024-08-28T19:45:18Z",
        "closed_at": "2024-08-28T19:45:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\n`action_on_unpermitted_parameters` only allows global control of something that often needs to be controlled on a per-action basis.\r\n\r\n### Detail\r\n\r\nThis Pull Request introduces `params.permit!` which raises if unpermitted parameters are present. It also accepts a block which yields the array of unpermitted keys instead of raising, allowing for custom handling or logging. \r\n\r\n### Additional information\r\n\r\nThis was the most obvious part of #51674 that could be merged. It lays the groundwork for everything else in that PR, making the remaining code much easier to understand and review.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52737/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 989,
        "closed_by_id": 989,
        "label_ids": [
            107189
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52737.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52737.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2492842280,
        "number": 52736,
        "title": "Update CHANGELOG for #52723",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-28T19:31:01Z",
        "updated_at": "2024-08-28T19:36:28Z",
        "closed_at": "2024-08-28T19:36:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Update changelog related to #52723 because it alters behaviour for users/software that subscribes to cache_* events.",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52736/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 1666120,
        "closed_by_id": 47848,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52736.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52736.patch",
        "pull_request_merged_at": "2024-08-28T19:36:28Z"
    },
    {
        "id": 2481002222,
        "number": 52679,
        "title": "Support custom environments on bin/rails credentials:diff",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-22T14:55:08Z",
        "updated_at": "2024-08-28T19:30:41Z",
        "closed_at": "2024-08-28T19:30:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nIn some cases/workflows, it may be useful to have credential files that don't match an environment name (`development`, `production`, `testing`). This is supported by all the `bin/rails credentials:*` tooling except `credentials:diff`, which shows the whole encrypted content of the file:\r\n\r\n[on a new app]:\r\n\r\n```\r\n$ bin/rails credentials:edit --environment=my_custom_env\r\n[lets me edit the yaml file and creates config/credentials/my_custom_env.yml.enc and .key]\r\n$ bin/rails credentials:show --environment=my_custom_env\r\n[shows its content again]\r\n$ git add config/\r\n$ bin/rails credentials:edit --environment=my_custom_env\r\n[lets me edit again; I add a new key]\r\n$ bin/rails credentials:show --environment=my_custom_env\r\n[shows the right content, including the new key]\r\n$ git diff config/credentials\r\n[shows the encrypted garbage]\r\n```\r\n\r\nI've seen this was reported as #47570, although a workaround was found there. I think that, since it is supported in all tools but one, it makes sense to fix that one (of course maintainers decide if it _actually_ makes sense).\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the way the environment is looked up. In addition to the current lookup in the available environments, it adds a fallback and it returns the name of the file in the provided path. This is enough for the rest of the process to work correctly, and I successfully tested it on a new app, where the _\"transcript\"_ above can be reproduced, but getting a proper diff in the last step.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. **<-- I guess this qualifies as a minor fix so I didn't update it. Please let me know if I should**\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52679/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 3830,
        "closed_by_id": 47848,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52679.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52679.patch",
        "pull_request_merged_at": "2024-08-28T19:30:41Z"
    },
    {
        "id": 2139925795,
        "number": 51115,
        "title": "Change Default Variant Format from PNG to WEBP",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-02-17T10:02:14Z",
        "updated_at": "2024-08-28T19:18:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "# Use WEBP as the default format for representations\r\n\r\nThis pull request updates the `default_variant_format` method in the `representable.rb` file. Previously, the default image format was PNG. With this change, the default image format is now WEBP.\r\n\r\nThis change is made to improve the performance of our web pages, as [all major browsers support WEBP images](https://caniuse.com/webp), which are generally smaller in size compared to PNG images, without any significant loss in image quality. This will help in faster loading of images and improve the overall user experience.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51115/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 5655861,
        "label_ids": [
            257468118,
            664533972,
            6042419827
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51115.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51115.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2412605915,
        "number": 52348,
        "title": "Reapply \"Merge pull request #27586 from maclover7/jm-fix-27584\"",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-07-17T04:19:39Z",
        "updated_at": "2024-08-28T16:32:42Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "This reverts commit 6902ca51824d5bc81e6c187ec7a58f787dfe4728.\r\n\r\nThis was originally reverted due to a reported regression, however the regression appeared to be present without this patch as well (and was fixed in a later [commit][1].\r\n\r\n[1]: https://github.com/rails/rails/commit/ca937c59cd69c05cbb92bad4839d931061e15b69\r\n\r\nFixes #52302\r\nFixes #27584\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52348/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 6014046,
        "label_ids": [
            107189,
            1072773639
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52348.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52348.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2328779281,
        "number": 51981,
        "title": "Add mapping to stored attributes",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-06-01T00:48:08Z",
        "updated_at": "2024-08-28T15:02:21Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nSometimes when call stored attribute, it requires specific naming semantics. For example when you save some data from external source. This Pull Request adds mapping for store attribute keys\r\n\r\n### Detail\r\n\r\nProposed changes\r\n\r\n```ruby\r\nclass User < ApplicationRecord\r\n  store_accessor :settings, :language, { country: :country_of_residence }\r\nend\r\n\r\nuser = User.new(country: \"US\")\r\nuser.country # => \"US\"\r\nuser.settings[\"country_of_residence\"] # => \"US\"\r\nuser.settings[\"country_of_residence\"] = \"CA\"\r\nuser.country # => \"CA\"\r\nuser.country = \"NL\"\r\nuser.country # => \"NL\"\r\nuser.settings[\"country_of_residence\"] # => \"NL\"\r\n```\r\n\r\n### Additional information\r\n\r\nThis was intended as non-breaking change\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51981/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 44903779,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51981.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51981.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2491716855,
        "number": 52730,
        "title": "The Rails application utilizes a background process application callback to initiate a specific event",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-28T10:39:09Z",
        "updated_at": "2024-08-28T14:51:50Z",
        "closed_at": "2024-08-28T14:51:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a unique app that leverages the SuckerPunch gem and Carrierwave Backgrounder to efficiently upload and process images in the background of a cutting-edge rails application. As a user creates an instance of the Asset model, the image processing begins, triggering the setting of the attachment_processing? attribute in the Asset model to true. To alert the user during this processing phase, I utilize this sleek view template:\r\n\r\n```\r\n-if instance.send(base_name)\r\n  .form-row\r\n    - if instance.send(base_name).attachment_processing?\r\n      .image_processing\r\n        %span Processing Asset #{proccessing_asset_name(instance.send(base_name))}\r\n        = image_tag(\"ajax-loader.gif\")\r\n    - else    \r\n       = nice_asset(instance.send(base_name),options[:thumb])\r\n```\r\nUpon completion of the processing, the attribute switches to false and the image is displayed post-page refresh, as observed in the server logs which show this automatic update.\r\n\r\n```\r\nStarted GET \"/assets/ajax-loader.gif\" for 127.0.0.1 at 2014-11-21 16:10:38 +0000\r\n   (0.2ms)  BEGIN\r\n  SQL (0.4ms)  UPDATE `assets` SET `attachment_processing` = 0, `updated_at` = '2014-11-21 16:11:14' WHERE `assets`.`id` = 6362\r\n   (1.9ms)  COMMIT\r\n```\r\nSeeking a more streamlined approach for displaying the finished image, I wonder if there's a way - be it through ajax or other means - to automate this process instead of prompting the user to manually refresh the page?\r\n\r\nYour insights and suggestions are greatly appreciated.\r\n\r\nOriginal source https://jquerys.space/questions/the-rails-application-utilizes-a-background-process-application-callback-to-initiate-a-specific-event",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52730/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 179701688,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2492012557,
        "number": 52732,
        "title": "[ci skip] Punctuation fixes in contributing_to_ruby_on_rails.md",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-28T12:59:27Z",
        "updated_at": "2024-08-28T14:47:17Z",
        "closed_at": "2024-08-28T14:47:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "Only comma issues\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nJust a couple of fixes related to subordinate clauses.\r\n\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the `Contributing to the Rails Documentation` chapter.\r\n\r\n### Additional information\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52732/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 68559435,
        "closed_by_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52732.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52732.patch",
        "pull_request_merged_at": "2024-08-28T14:47:17Z"
    },
    {
        "id": 957009143,
        "number": 42921,
        "title": "Allow #upsert_all without unique_by to use PostgreSQL unique indexes",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2021-07-30T19:30:06Z",
        "updated_at": "2024-08-28T11:53:44Z",
        "closed_at": "2022-06-29T22:16:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Summary\r\n\r\nWhen trying to call a `#upsert_all` operation in an `ActiveRecord` model without passing any `:unique_by` parameter, it adds the following statement:\r\n\r\n```SQL\r\nON CONFLICT (\"id\") DO NOTHING\r\n```\r\n\r\nHowever, PostgreSQL sets the `conflict_target` as an optional parameter. When the parameter is not present, all the uniqueness indexes on the database will be used as the conflict matcher. This way, the proper way to automatically use the uniqueness indexes as stated in the documentation is using the following statement ([see more](https://www.postgresql.org/docs/9.5/sql-insert.html#SQL-ON-CONFLICT))\r\n\r\n```SQL\r\nON CONFLICT DO NOTHING\r\n```\r\n\r\nAlso, given the `#upsert_all` method is supported by both PostgreSQL and SQLite3, we must keep compatibility with SQLite3, which states that the [`conflict_target` is required on update operations](https://www.sqlite.org/lang_UPSERT.html).\r\n\r\n### Other Information\r\n\r\nMore details under #42918 ",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/42921/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 11822875,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 2,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 2,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/42921.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/42921.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2137884802,
        "number": 51099,
        "title": "Add a new option `early_expiration` to `ActiveSupport::Cache::Store#fetch` to avoid dog pile effect",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-16T05:09:34Z",
        "updated_at": "2024-08-28T07:58:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "### Motivation / Background\r\n\r\nI encountered an issue that `:race_condition_ttl` can still suffer from dog pile effect in the use case of high intense services because during the period of extending expiration time, other process can still access the same entry and try to regenerate the cache at the same time.\r\n\r\nWhile searching for solutions, I realized probabilistic early expiration approach might be a simpler and more efficient solution. It is a technique to avoid the dog pile effect (aka cache stampede) by expiring the cache before the TTL.\r\n\r\nI implemented this method based on the paper[^1] which uses probabilistic decision with the exponential function `Exp(λ)` and demonstrates to be optimal.\r\n\r\n[^1]: [Vattani, A.; Chierichetti, F.; Lowenstein, K. (2015), Optimal Probabilistic Cache Stampede Prevention, Proceedings of the VLDB Endowment, VLDB](https://cseweb.ucsd.edu/~avattani/papers/cache_stampede.pdf)\r\n\r\n### Detail\r\n\r\n1. Add new option `early_expiration` to `ActiveSupport::Cache::Store#fetch`.\r\n2. Add new method `ActiveSupport::Cache::Entry#should_expire_early?(beta: 1)`.\r\n4. Add new instance variable `@generation_time` to `ActiveSupport::Cache::Entry`.\r\n\r\nHere is a simple implementation to illustrate the approach:\r\n\r\n```ruby\r\ndef x_fetch(key, ttl, beta = 1)\r\n  value, delta, expiry = read(key)\r\n  if value.nil? || Time.now − delta * beta * Math.log(rand) ≥ expiry\r\n    start = Time.now\r\n    value = yield\r\n    delta = Time.now – start\r\n    write(key, value, delta, ttl)\r\n  end\r\n  return value\r\nend\r\n```\r\n\r\n### Additional information\r\n\r\nI created a stacked histogram comparing the stampede sizes between `:race_condition_ttl` (fetch) and `:early_expiration` (x_fetch):\r\n\r\n![800k_histogram](https://github.com/rails/rails/assets/809410/01dc5a69-4206-458e-ad76-c52637f9f00b)\r\n\r\nAs the histogram shows, `:early_expiration` has smaller stampede size compared to `:race_condition_ttl`.\r\n\r\nFor the definition of \"the stampede sizes\", please refer to [the paper](https://cseweb.ucsd.edu/~avattani/papers/cache_stampede.pdf).\r\n\r\nNote that the benchmark is generated using 16 threads. The difference could be more significant with higher number of threads.\r\n\r\nFor more information, please refer to the [benchmark repository](https://github.com/tonytonyjan/rails_cache_stampede_benchmark).\r\n\r\nThe benchmark repository: https://github.com/tonytonyjan/rails_cache_stampede_benchmark\r\nThe paper: https://cseweb.ucsd.edu/~avattani/papers/cache_stampede.pdf\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51099/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 809410,
        "label_ids": [
            107194
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51099.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51099.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2470468513,
        "number": 52627,
        "title": "Get rid of Active Record connection reaper",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-16T15:14:28Z",
        "updated_at": "2024-08-28T05:53:50Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "The reaper was introduced back in cde7692d4e3e0e67e480cc6172f6e2bacaceeb5e The goal is to detect checked out connections owned by dead threads, and make them available again.\r\n\r\nTo do this, a thread check connections every 60 seconds, which IMO isn't nearly enough. But more importabtly since https://github.com/rails/rails/pull/14360 the reaper isn't really useful because in the checkout path, if we can't immediately checkout a connection, we execute the reaping routine, so IMO it's not really justified to have a background thread for this.\r\n\r\n@tenderlove @matthewd any opinion?",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52627/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 44640,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52627.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52627.patch",
        "pull_request_merged_at": null
    },
    {
        "id": 2377812185,
        "number": 52226,
        "title": "Fix third party hook for `rails stats` Thor command",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-27T10:46:15Z",
        "updated_at": "2024-08-28T05:18:41Z",
        "closed_at": "2024-08-23T21:10:48Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "body": "## Legacy `STATS_DIRECTORIES` hook for Rake no longer works\r\n\r\n`STATS_DIRECTORIES` is used by third parties to add directories to the statistics output. It's a global constant defined in a Rake file, that gets loaded anytime the Rake commands get loaded.\r\n\r\nFor example Rspec Rails adds `spec` directories in a prepended Rake task: https://github.com/rspec/rspec-rails/blob/8c17b4e5020a4d264e8a79e294c58b5c1ef2b005/lib/rspec/rails/tasks/rspec.rake#L43\r\n\r\nRake tasks only get loaded if no matching Thor task has been found. This means this constant is only available when the Rake commands have loaded.\r\n\r\n## New `CodeStatistics.add_directory` for Thor command\r\n\r\nAs the stats command has now been [moved to a Thor task](https://github.com/rails/rails/commit/292c127d46877174d893a7aab2b7cc35856f393a), calling `bin/rails stats` will no longer add directories to `STATS_DIRECTORIES`, as the Rake commands don't get loaded anymore.\r\n\r\nTo remove the dependency on Rake and avoid a global constant we can add an API to add directories: `CodeStatistics.add_directory`. `STATS_DIRECTORIES` is deprecated.\r\n\r\n`deprecate_constant` couldn't be used here as that doesn't seem to work for the root namespace.\r\n\r\nThis was previously proposed/discussed in https://github.com/rails/rails/pull/49759, but I decided to resubmit it with the recent commit to make `stats` a Thor task.\r\n\r\n### Before\r\n`bin/rake stats` adds custom directories (Model specs in this case):\r\n```bash\r\nbin/rake stats\r\nDEPRECATION WARNING: `bin/rails stats` as rake task has been deprecated and will be removed in Rails 8.0.\r\nPlease use `bin/rails stats` as Rails command instead.\r\n\r\n (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)\r\nDEPRECATION WARNING: `bin/rails stats` as rake task has been deprecated and will be removed in Rails 8.0.\r\nPlease use `bin/rails stats` as Rails command instead.\r\n\r\n (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Controllers          |      7 |      7 |       2 |       1 |   0 |     5 |\r\n...\r\n| System tests         |      0 |      0 |       0 |       0 |   0 |     0 |\r\n| Model specs          |      5 |      4 |       0 |       0 |   0 |     0 |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Total                |    161 |    115 |      14 |       1 |   0 |   113 |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n```\r\n`bin/rails stats` does __not__ add custom directories (Model specs):\r\n```bash\r\n$ bin/rails stats\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Controllers          |      7 |      7 |       2 |       1 |   0 |     5 |\r\n...\r\n| System tests         |      0 |      0 |       0 |       0 |   0 |     0 |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Total                |    156 |    111 |      14 |       1 |   0 |   109 |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n```\r\n\r\n### After\r\n`bin/rake stats` adds directories (Model specs).\r\n```bash\r\n$ bin/rake stats\r\nDEPRECATION WARNING: `STATS_DIRECTORIES` is deprecated and will be removed in Rails 8.1! Use `Rails.application.config.code_statistics.directories` instead. (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)\r\nDEPRECATION WARNING: `bin/rake stats` as rake task has been deprecated and will be removed in Rails 8.1.\r\nPlease use `bin/rails stats` as Rails command instead.\r\n\r\n (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)\r\nDEPRECATION WARNING: `bin/rake stats` as rake task has been deprecated and will be removed in Rails 8.1.\r\nPlease use `bin/rails stats` as Rails command instead.\r\n\r\n (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Controllers          |      7 |      7 |       2 |       1 |   0 |     5 |\r\n...\r\n| System tests         |      0 |      0 |       0 |       0 |   0 |     0 |\r\n| Model specs          |      5 |      4 |       0 |       0 |   0 |     0 |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Total                |    161 |    115 |      14 |       1 |   0 |   113 |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n```\r\n\r\n`bin/rails stats` adds directories added in a `Raills.application.config.after_initialize` block.\r\n```bash\r\n$ bin/rails stats\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Controllers          |      7 |      7 |       2 |       1 |   0 |     5 |\r\n...\r\n| System tests         |      0 |      0 |       0 |       0 |   0 |     0 |\r\n| Model specs          |      5 |      4 |       0 |       0 |   0 |     0 |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n| Total                |    161 |    115 |      14 |       1 |   0 |   113 |\r\n+----------------------+--------+--------+---------+---------+-----+-------+\r\n....\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52226/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 28561,
        "closed_by_id": 47848,
        "label_ids": [
            107195,
            150377
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 1,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52226.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52226.patch",
        "pull_request_merged_at": "2024-08-23T21:10:48Z"
    },
    {
        "id": 2485581827,
        "number": 52710,
        "title": "ruby-advisory-db false positive for actionpack 7.1.4",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-26T00:37:39Z",
        "updated_at": "2024-08-28T03:07:28Z",
        "closed_at": "2024-08-26T14:24:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Ruby advisory DB is incorrect reporting that actionpack 7.1.4 doesn't contain the patch for `CVE-2024-28103` aka https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7.\r\n\r\nI think the security page for that issue needs amending so that the automated scripts for ruby-advisory-db pick it up. I'm not 100% on how all of this works or is connected. I am not certain if the page needs updating, or if ruby-advisory-db needs changes, but I'm erring on the side of the page needing updating as ruby-advisory-db seems mostly automated and collects its data from this page.\r\n\r\n---\r\n\r\n## Reproduction steps\r\n\r\nCreate a `Gemfile` with:\r\n\r\n```\r\nsource 'https://rubygems.org'\r\n\r\ngem 'actionpack', '7.1.4'\r\ngem 'bundler-audit'\r\n```\r\n\r\nThen, run `bundle install`\r\nThen, run `bundle audit check --update`\r\n\r\n## What happens\r\n\r\n```\r\nUpdating ruby-advisory-db ...\r\nFrom https://github.com/rubysec/ruby-advisory-db\r\n * branch            master     -> FETCH_HEAD\r\nAlready up to date.\r\nUpdated ruby-advisory-db\r\nruby-advisory-db:\r\n  advisories:\t918 advisories\r\n  last updated:\t2024-08-24 11:36:02 -0700\r\n  commit:\t33907c16654555cb6089d8a41c6bd20ce8da2698\r\nName: actionpack\r\nVersion: 7.1.4\r\nCVE: CVE-2024-28103\r\nGHSA: GHSA-fwhr-88qx-h9g7\r\nCriticality: Medium\r\nURL: https://github.com/rails/rails/security/advisories/GHSA-fwhr-88qx-h9g7\r\nTitle: Missing security headers in Action Pack on non-HTML responses\r\nSolution: update to '~> 6.1.7.8', '~> 7.0.8.4', '~> 7.1.3.4', '>= 7.2.0.beta2'\r\n\r\nVulnerabilities found!\r\n```\r\n\r\n## What I expect to happen\r\n\r\nNo vulnerabilities reported.\r\n\r\n\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52710/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned",
        "user_id": 2687,
        "closed_by_id": 47848,
        "label_ids": [],
        "reactions_total_count": 2,
        "reactions_plus1": 2,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2484099653,
        "number": 52699,
        "title": "[#52698] Fix `TimeZoneConverter#==` method so objects will be properly compared by their type, scale, limit & precision.",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-24T01:26:40Z",
        "updated_at": "2024-08-28T01:27:49Z",
        "closed_at": "2024-08-27T16:17:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the comparison for `Timestamp` on `TimeZoneConverter` was misbehaving. \r\n\r\n### Detail\r\n\r\nThis Pull Request changes `TimeZoneConverter#==` so it can correctly check the comparison with `other` objects.\r\n\r\nFixes #52698 \r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52699/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 108208,
        "closed_by_id": 47848,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52699.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52699.patch",
        "pull_request_merged_at": "2024-08-27T16:17:36Z"
    },
    {
        "id": 2476758095,
        "number": 52662,
        "title": "Update i18n guide with local testing setup instructions [ci skip]",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-21T00:34:19Z",
        "updated_at": "2024-08-28T00:06:19Z",
        "closed_at": "2024-08-27T16:54:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created to improve the I18n guide by adding instructions for local testing setup, specifically for configuring the `hosts` in `development.rb`.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the I18n guide to include additional steps required for setting up local testing of subdomain-based locale extraction.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52662/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 634379,
        "closed_by_id": 47848,
        "label_ids": [
            150377
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/52662.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/52662.patch",
        "pull_request_merged_at": "2024-08-27T16:54:47Z"
    },
    {
        "id": 2469110432,
        "number": 52620,
        "title": "editing new credentials for non-standard environment results in no key file being created",
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-15T22:45:51Z",
        "updated_at": "2024-08-27T22:44:21Z",
        "closed_at": "2024-08-27T22:44:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n```\r\n%> ./bin/rails credentials:edit --environment development\r\nAdding config/credentials/development.key to store the encryption key: <<KEY>>\r\n\r\nSave this in a password manager your team can access.\r\n\r\nIf you lose the key, no one, including you, can access anything encrypted with it.\r\n\r\n      create  config/credentials/development.key\r\n\r\nIgnoring config/credentials/development.key so it won't end up in Git history:\r\n\r\n      append  .gitignore\r\n%> ./bin/rails credentials:edit --environment integration\r\n%> ls config/credentials/\r\ndevelopment.key     development.yml.enc integration.yml.enc\r\n```\r\n\r\n### Expected behavior\r\nintegration.key should have been created\r\n\r\n### Actual behavior\r\nintegration.key was not created\r\n\r\n### System configuration\r\nRails 7.0.8.4\r\n\r\nRuby 3.3.0",
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/52620/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed",
        "user_id": 28946,
        "closed_by_id": 28946,
        "label_ids": [
            107195
        ],
        "reactions_total_count": 0,
        "reactions_plus1": 0,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0
    },
    {
        "id": 2140218997,
        "number": 51116,
        "title": "Handle empty array value in query builder's tuple syntax",
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-02-17T15:58:38Z",
        "updated_at": "2024-08-27T22:18:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "body": "Specifically, `.where([:id] => [])` is now equivalent to `where(:id => [])`.\r\n\r\n### Motivation / Background\r\n\r\nThis behaviour fixes `#collection_singular_ids=` for relations with composite query constraints when used in forms, as `ids_writer` compacts blank values before looking up matching records, efectively calling `.where(primary_key => [])` when, for example, all checkboxes were deselected by a user on a form.\r\n\r\nThe error indicative of the behaviour that this commit attempts to fix: `Arel::Visitors::UnsupportedVisitError: Unsupported argument type: NilClass. Construct an Arel node instead.`\r\n\r\n### Detail\r\n\r\n`#reduce` returns `nil` when operating on empty collections. This commit adds a separate branch for handling an empty query set in `PredicateBuilder#grouping_queries`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "closed_by": null,
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/51116/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "user_id": 314453,
        "label_ids": [
            107191
        ],
        "reactions_total_count": 1,
        "reactions_plus1": 1,
        "reactions_minus1": 0,
        "reactions_laugh": 0,
        "reactions_hooray": 0,
        "reactions_confused": 0,
        "reactions_heart": 0,
        "reactions_rocket": 0,
        "reactions_eyes": 0,
        "pull_request_diff_url": "https://github.com/rails/rails/pull/51116.diff",
        "pull_request_patch_url": "https://github.com/rails/rails/pull/51116.patch",
        "pull_request_merged_at": null
    }
]